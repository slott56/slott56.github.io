Why Python? (Sad Follow-up)
===========================

:date: 2016-06-21 08:00
:tags: LaTeX,design,building skills books,software process improvement,random numbers,#python,packtpub,scipy,RST,pydata
:slug: 2016_06_21-why_python_sad_follow_up
:category: Books
:status: published

In "`Why Python? <http://slott-softwarearchitect.blogspot.com/2016/05/why-python-whats-it-good-for-how-is-it.html>`__"
I linked to a deep and sophisticated analysis of programming
languages. Anyway, I thought it was a deep and sophisticated analysis.

I got a reply that shows how wrong I was. Here's the quote:

The point is that the Python ecosystem has a lot to offer. We could
argue about the language design choices. However, why bother? Why not
just take advantage of what the ecosystem has to offer.


Ah. Discussing the language is just "arguing". I guess the points are
all debatable and my comparison of Python to any benchmark is just
the seed for an argument. A religious war, perhaps. I guess this
wasn't compelling. It was a "why bother?"


Why bother pointing out the strong points of the language?
The email emphasized the "ecosystem" with a cool, but short example
of how `scipiy.spatial.KDTree <http://scipiy.spatial.kdtree/>`__
works.


It appears that -- for some people -- "Python code actually works" is
a useful response to "why python?"


I would have thought that "Python code actually works" was a
precondition to even discussing the value proposition behind Python.


But -- clearly -- I was wrong.  The mere fact of a working example is
a **Very Important Thing**\ â„¢.


What does this mean?

#.  There are people who use software that doesn't actually work. When
    they see software that works, it's important. Very important.

#.  When software actually works, these people find this simple fact
    to be a compelling and substantial argument for placing a high
    value on the software.

#.  Other considerations like clarity and simplicity aren't relevant.
    If these poor souls are suffering software that doesn't actually
    work, then broken and obscure is still broken. Other parts of the
    long discussion from Wirth are just arguing points.


The email included "*consider amending the why python? blog w/ the
other big pro: ecosystem*" I'm not sure I actually understand the
request. When code that works is a "big pro", this comes from a
world I can't pretend to understand.


Also. The example code used ``xrange()``. Which is a Python 2 smell.
`Those days are passed <http://pythonclock.org/>`__.




