<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>S.Lott -- Software Architect</title><link>https://slott56.github.io/</link><description></description><lastBuildDate>Wed, 16 Jul 2025 11:20:00 -0400</lastBuildDate><item><title>Some Recommended Reading</title><link>https://slott56.github.io/2025-07-16-recommended_reading.html</link><description>&lt;p&gt;Q: &amp;quot;Can you recommend  books that are good for a beginner wanting to learn python?&amp;quot;&lt;/p&gt;
&lt;p&gt;Me: &amp;quot;Depends on the person’s background...&amp;quot;&lt;/p&gt;
&lt;p&gt;Q: &amp;quot;They has a deep background in the problem domain. Recently they've been doing a lot of reporting and analytics using SQL.&amp;quot;&lt;/p&gt;
&lt;p&gt;Okay. That's excellent.&lt;/p&gt;
&lt;p&gt;One of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Jul 2025 11:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-07-16:/2025-07-16-recommended_reading.html</guid><category>Books</category><category>python</category><category>learning</category></item><item><title>The Payout From Learning</title><link>https://slott56.github.io/2025-06-29-the_payout_from_learning.html</link><description>&lt;p&gt;The back-story.
See &lt;a class="reference external" href="https://slott56.github.io/2025-06-29-an_investment_in_learning.html"&gt;Coping With Complexity&lt;/a&gt;.
See &lt;a class="reference external" href="https://github.com/cloud-custodian/cel-python"&gt;https://github.com/cloud-custodian/cel-python&lt;/a&gt; for the code base.&lt;/p&gt;
&lt;p&gt;Back around May 26, I created this branch.
Today -- July 2 -- I've got the tests to pass.&lt;/p&gt;
&lt;div class="section" id="bluf-tl-dr"&gt;
&lt;h2&gt;BLUF (TL;DR)&lt;/h2&gt;
&lt;p&gt;I made mistakes.
I spent a lot of time making a some significant mistakes …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 Jul 2025 15:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-07-02:/2025-06-29-the_payout_from_learning.html</guid><category>Architecture &amp; Design</category><category>uml</category><category>plantuml</category><category>solid</category><category>cel-python</category><category>cloud custodian</category><category>open source</category></item><item><title>An Investment in Learning</title><link>https://slott56.github.io/2025-06-29-an_investment_in_learning.html</link><description>&lt;p&gt;The back-story.
See &lt;a class="reference external" href="https://slott56.github.io/2025-06-21-coping_with_complexity.html"&gt;Coping With Complexity&lt;/a&gt;.
See &lt;a class="reference external" href="https://github.com/cloud-custodian/cel-python"&gt;https://github.com/cloud-custodian/cel-python&lt;/a&gt; for the code base.&lt;/p&gt;
&lt;p&gt;I've reached the point where progress is clearly impossible.
A bad decision a few weeks ago has reached it's inevitable conclusion.
I've made a terrible mistake.
About 1,000 lines of code -- and tons …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 29 Jun 2025 09:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-06-29:/2025-06-29-an_investment_in_learning.html</guid><category>Architecture &amp; Design</category><category>uml</category><category>plantuml</category><category>solid</category><category>cel-python</category><category>cloud custodian</category><category>open source</category><category>learning</category></item><item><title>Coping with Complexity</title><link>https://slott56.github.io/2025-06-21-coping_with_complexity.html</link><description>&lt;p&gt;I'm struggling with brain cramps trying to understand something my past self wrote.
Current me needs to go outside and do something that doesn't involve software or complexity.
Sadly, current me is trying to make one small change and it feels like the software has  passed out of the realm …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 21 Jun 2025 08:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-06-21:/2025-06-21-coping_with_complexity.html</guid><category>Architecture &amp; Design</category><category>uml</category><category>plantuml</category><category>solid</category><category>cel-python</category><category>cloud custodian</category><category>open source</category></item><item><title>Testing Your AI</title><link>https://slott56.github.io/2025-06-14-tesing_your_ai.html</link><description>&lt;p&gt;We test software.
We test people.&lt;/p&gt;
&lt;p&gt;My lawyer, all my various doctors, even the coffee bar on main street is subject to testing.
The coffee shop proudly posts their score from health inspections.
Want to know about food safety? Ask them.&lt;/p&gt;
&lt;p&gt;My professionals all have walls full of diplomas and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 14 Jun 2025 18:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-06-14:/2025-06-14-tesing_your_ai.html</guid><category>Technologies</category><category>ai</category><category>testing</category></item><item><title>Comma Comma</title><link>https://slott56.github.io/2025-06-11-comma_comma.html</link><description>&lt;p&gt;Ugh.&lt;/p&gt;
&lt;p&gt;A painful stretch of hours looking for a problem.
Working on this: &lt;a class="reference external" href="https://github.com/cloud-custodian/cel-python/wiki/Evaluation-Design"&gt;https://github.com/cloud-custodian/cel-python/wiki/Evaluation-Design&lt;/a&gt;.
I need to address a performance problem and upgrade things generally to get them ready for 3.13 and 3.14.&lt;/p&gt;
&lt;p&gt;You know how it goes, right?&lt;/p&gt;
&lt;p&gt;I touched something …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Jun 2025 07:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-06-11:/2025-06-11-comma_comma.html</guid><category>Python</category><category>#python</category><category>syntax</category><category>cel-python</category><category>cloud custodian</category><category>open source</category></item><item><title>Ransomware Cause and Effect</title><link>https://slott56.github.io/2025-05-12-ransomware_cause_and_effect.html</link><description>&lt;p&gt;This: &lt;a class="reference external" href="https://www.theregister.com/2025/05/12/opinion_column_ransomware/"&gt;https://www.theregister.com/2025/05/12/opinion_column_ransomware/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Shabby IT infrastructure built with criminally low budgets.&lt;/p&gt;
&lt;p&gt;What did we expect?&lt;/p&gt;
&lt;p&gt;Of course there will be ruthless exploitation of weakness.&lt;/p&gt;
&lt;p&gt;Clearly, minimal IT budgets -- just enought to &amp;quot;keep the lights on&amp;quot; -- will provide avenues for exploitation.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 May 2025 07:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-05-12:/2025-05-12-ransomware_cause_and_effect.html</guid><category>Management</category><category>ransomeware</category></item><item><title>Domnain-Specific Language</title><link>https://slott56.github.io/2025-03-11-domain_specific_language.html</link><description>&lt;p&gt;Generally, I try to frown on Domain-Specific Languages.
Often, a tidy set of related functions, or a group of class definitions with a few decorators can create something that's every bit as expressive as a DSL in native Python syntax.&lt;/p&gt;
&lt;p&gt;There are a few cases where a DSL can be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Mar 2025 15:52:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-03-11:/2025-03-11-domain_specific_language.html</guid><category>Python</category><category>#python</category><category>domain-specific language</category><category>dsl</category></item><item><title>Joomla Conversion</title><link>https://slott56.github.io/2025-02-08-joomla_conversion.html</link><description>&lt;p&gt;Recently, we talked about extracting data from complex relational databases.
This is -- in a way -- another case study for my &lt;em&gt;Unlearning SQL&lt;/em&gt; book.
This is a description of what comes next after the &amp;quot;low-level&amp;quot; conversion.
Warning: it's complicated.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BLUF&lt;/strong&gt;: Take the time to get rid of SQL processing.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;&lt;em&gt;Unlearning SQL …&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 08 Feb 2025 08:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-02-08:/2025-02-08-joomla_conversion.html</guid><category>Python</category><category>#python</category><category>database</category><category>sql</category><category>hugo</category></item><item><title>Database Migration, Part IV</title><link>https://slott56.github.io/2025-01-21_database_migration_part_iv.html</link><description>&lt;p&gt;We're talking about extracting data from complex relational databases.
This is -- in a way -- another case study for my &lt;em&gt;Unlearning SQL&lt;/em&gt; book.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;&lt;em&gt;Unlearning SQL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;KDP &lt;a class="reference external" href="https://www.amazon.com/dp/B0DDMFMXNW"&gt;https://www.amazon.com/dp/B0DDMFMXNW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lulu &lt;a class="reference external" href="https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4"&gt;https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Play &lt;a class="reference external" href="https://play.google.com/store/books/details?id=23WAEAAAQBAJ"&gt;https://play …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jan 2025 07:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-01-21:/2025-01-21_database_migration_part_iv.html</guid><category>Python</category><category>#python</category><category>database</category><category>sql</category></item><item><title>Database Migration, Part III</title><link>https://slott56.github.io/2025-01-14_database_migration_part_iii.html</link><description>&lt;p&gt;We're talking about extracting data from complex relational databases.
This is -- in a way -- another case study for my &lt;em&gt;Unlearning SQL&lt;/em&gt; book.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;&lt;em&gt;Unlearning SQL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;KDP &lt;a class="reference external" href="https://www.amazon.com/dp/B0DDMFMXNW"&gt;https://www.amazon.com/dp/B0DDMFMXNW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lulu &lt;a class="reference external" href="https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4"&gt;https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Play &lt;a class="reference external" href="https://play.google.com/store/books/details?id=23WAEAAAQBAJ"&gt;https://play …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jan 2025 07:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-01-14:/2025-01-14_database_migration_part_iii.html</guid><category>Python</category><category>#python</category><category>database</category><category>sql</category></item><item><title>Database Migration, Part II</title><link>https://slott56.github.io/2025-01-07_database_migration_part_ii.html</link><description>&lt;p&gt;We're talking about extracting data from complex relational databases.
This is -- in a way -- another case study for my &lt;em&gt;Unlearning SQL&lt;/em&gt; book.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;&lt;em&gt;Unlearning SQL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;KDP &lt;a class="reference external" href="https://www.amazon.com/dp/B0DDMFMXNW"&gt;https://www.amazon.com/dp/B0DDMFMXNW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lulu &lt;a class="reference external" href="https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4"&gt;https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Play &lt;a class="reference external" href="https://play.google.com/store/books/details?id=23WAEAAAQBAJ"&gt;https://play …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jan 2025 13:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2025-01-07:/2025-01-07_database_migration_part_ii.html</guid><category>Python</category><category>#python</category><category>database</category><category>sql</category></item><item><title>Database Migration, Part I</title><link>https://slott56.github.io/2024-12-31_database_migration_part_i.html</link><description>&lt;p&gt;Let's talk about extracting data from complex relational databases.
This is -- in a way -- another case study for my Unlearning SQL book.&lt;/p&gt;
&lt;div class="sidebar"&gt;
&lt;p class="first sidebar-title"&gt;&lt;em&gt;Unlearning SQL&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;KDP &lt;a class="reference external" href="https://www.amazon.com/dp/B0DDMFMXNW"&gt;https://www.amazon.com/dp/B0DDMFMXNW&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Lulu &lt;a class="reference external" href="https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4"&gt;https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Google Play &lt;a class="reference external" href="https://play.google.com/store/books/details?id=23WAEAAAQBAJ"&gt;https://play …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Dec 2024 13:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-12-31:/2024-12-31_database_migration_part_i.html</guid><category>Python</category><category>#python</category><category>database</category><category>sql</category></item><item><title>Seasons Greetings 2024</title><link>https://slott56.github.io/2024-12-22_seasons_greetings_2024.html</link><description>&lt;p&gt;I'm working on revisions to Python 3 Object-Oriented Programming.
Meanwhile, I have big news on Packt's end-of-year promotions.&lt;/p&gt;
&lt;p&gt;I’m always striving to make the knowledge in &lt;em&gt;Python Real-World Projects&lt;/em&gt;, as useful as possible.
That’s why I’m so excited about Packt’s $9.99 End-of-Year Sale!
This adds …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 22 Dec 2024 07:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-12-22:/2024-12-22_seasons_greetings_2024.html</guid><category>Books</category><category>#python</category><category>packt</category><category>techbooks</category></item><item><title>Stingray Reader Release 5.1</title><link>https://slott56.github.io/2024-10-24_stingray_reader_release_5_1.html</link><description>&lt;p&gt;Starting back in 2011 I was working on a way to manage a variety of spreadsheets in a variety of layouts with a common schema.
Over the last 13 years, I've been updating and maintaining this little project.
It's not widely used, but it interests me.&lt;/p&gt;
&lt;p&gt;Fundamentally, the use of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Oct 2024 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-10-24:/2024-10-24_stingray_reader_release_5_1.html</guid><category>Technologies</category><category>stingray reader</category><category>#python</category><category>CLI</category></item><item><title>Better than grep</title><link>https://slott56.github.io/2024-09-26-better_than_grep.html</link><description>&lt;p&gt;In the process of writing &lt;em&gt;Unlearning SQL&lt;/em&gt;, I had a need to extract SQL blocks from Python programs.
Of course, I tried &lt;tt class="docutils literal"&gt;grep&lt;/tt&gt;.
It wasn't ideal.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Book is available here:&lt;/p&gt;
&lt;ul class="last simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.amazon.com/dp/B0DDMFMXNW"&gt;https://www.amazon.com/dp/B0DDMFMXNW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize=4"&gt;https://www.lulu.com/shop/steven-lott/unlearning-sql/paperback/product-yvnm8zn.html?page=1&amp;amp;pageSize …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Sep 2024 09:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-09-26:/2024-09-26-better_than_grep.html</guid><category>Python</category><category>parsing</category><category>ast</category><category>SQL</category><category>grep</category></item><item><title>Modern Python Cookbook and Type Hints</title><link>https://slott56.github.io/2024-09-18-cookbook_and_mypy.html</link><description>&lt;p&gt;Modern Python Cookbook — with lots and lots of recipes — is something you might need. Find the results of checking all these recipes here:
&lt;a class="reference external" href="https://www.amazon.com/Modern-Python-Cookbook-updated-techniques/dp/1835466389"&gt;https://www.amazon.com/Modern-Python-Cookbook-updated-techniques/dp/1835466389&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I (reluctantly) switched from using &lt;strong&gt;mypy&lt;/strong&gt; to using &lt;strong&gt;pyright&lt;/strong&gt; to check all of these recipes carefully. The type alias (&lt;a class="reference external" href="https://peps.python.org/pep-0695"&gt;PEP …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 Sep 2024 16:03:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-09-18:/2024-09-18-cookbook_and_mypy.html</guid><category>Python</category><category>book</category><category>packt</category><category>cookbook</category></item><item><title>Revised Books Available</title><link>https://slott56.github.io/2024-09-03-revised_books_available.html</link><description>&lt;p&gt;Big Announcement: the 2024.8 version of &lt;em&gt;Unlearning SQL&lt;/em&gt;, and the 2024.9 version of &lt;em&gt;Pivot to Python&lt;/em&gt; are available from booksellers online. Both are revised and all the code tested with Python 3.12.&lt;/p&gt;
&lt;div class="section" id="unlearning-sql"&gt;
&lt;h2&gt;Unlearning SQL&lt;/h2&gt;
&lt;p&gt;This book shows you how to translate essential SQL concepts into the Python …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Sep 2024 14:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-09-03:/2024-09-03-revised_books_available.html</guid><category>Books</category><category>Python</category><category>SQL</category><category>database</category></item><item><title>Sphinx EPUB and Print</title><link>https://slott56.github.io/2024-08-27-sphinx_epub_and_print.html</link><description>&lt;p&gt;Let's say you want to self-publish an ebook and a print-on-demand paperback book.&lt;/p&gt;
&lt;p&gt;This isn't impossible, nor is it particularly easy. Here's what I've learned.&lt;/p&gt;
&lt;div class="section" id="basic-workflow"&gt;
&lt;h2&gt;Basic Workflow&lt;/h2&gt;
&lt;p&gt;You've got two obvious paths to make sure your EPUB book and your print-on-demand book match:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Convert EPUB to Print. This generally means …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Aug 2024 16:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-08-27:/2024-08-27-sphinx_epub_and_print.html</guid><category>Books</category><category>sphinx</category><category>RST</category><category>LaTeX</category><category>epub</category><category>PDF</category></item><item><title>Unlearning SQL, revised</title><link>https://slott56.github.io/2024-08-20-unlearning_sql.html</link><description>&lt;p&gt;Book (pre) Announcement:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;dl class="first docutils"&gt;
&lt;dt&gt;KDP - See &lt;a class="reference external" href="https://www.amazon.com/stores/Steven-Lott/author/B00HNRSLEK"&gt;https://www.amazon.com/stores/Steven-Lott/author/B00HNRSLEK&lt;/a&gt; for my author's page.&lt;/dt&gt;
&lt;dd&gt;&lt;a class="reference external" href="https://www.amazon.com/Unlearning-SQL-hammer-every-problem-ebook/dp/B0DDMFMXNW"&gt;https://www.amazon.com/Unlearning-SQL-hammer-every-problem-ebook/dp/B0DDMFMXNW&lt;/a&gt; is the book.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/li&gt;
&lt;li&gt;Google Play - See &lt;a class="reference external" href="https://play.google.com/store/books/details?id=23WAEAAAQBAJ"&gt;https://play.google.com/store/books/details?id=23WAEAAAQBAJ&lt;/a&gt;. Be sure to get the 2024.08 edition; there's a previous …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Aug 2024 16:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-08-20:/2024-08-20-unlearning_sql.html</guid><category>Books</category><category>building skills</category><category>python</category><category>SQL</category><category>database</category></item><item><title>Modern Python Cookbook, 3e</title><link>https://slott56.github.io/2024-08-01-modern_python_cookbook_3e.html</link><description>&lt;p&gt;Book Announcement:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.packtpub.com/en-us/product/modern-python-cookbook-9781835466384"&gt;https://www.packtpub.com/en-us/product/modern-python-cookbook-9781835466384&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;There are about 130 recipes in here. Some new. Some revised.
All examined (and tested) for Python 3.12.&lt;/p&gt;
&lt;p&gt;For the Python folks who are just starting as well as those looking to pick up some more skills, this is for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Aug 2024 13:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-08-01:/2024-08-01-modern_python_cookbook_3e.html</guid><category>Python</category><category>book</category><category>packt</category><category>cookbook</category></item><item><title>Synthetic Data Tool</title><link>https://slott56.github.io/2024-07-25-synthetic_data_tool.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2024-06-29-synthetic_data.html"&gt;Synthetic Data&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've updated the repository with a &amp;quot;Noisy Data&amp;quot; feature.&lt;/p&gt;
&lt;p&gt;This will generate bulk data with invalid field values.&lt;/p&gt;
&lt;p&gt;It helps with testing ETL pipelines to be sure they will scale to the expected volumes.&lt;/p&gt;
&lt;p&gt;Clone &lt;a class="reference external" href="https://github.com/slott56/DataSynthTool"&gt;https://github.com/slott56/DataSynthTool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Read &lt;a class="reference external" href="https://slott56.github.io/DataSynthTool/_build/html/index.html"&gt;https://slott56.github.io/DataSynthTool/_build …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Jul 2024 14:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-07-25:/2024-07-25-synthetic_data_tool.html</guid><category>Python</category><category>synthetic data</category><category>project</category></item><item><title>Functional SQL in Pure Python</title><link>https://slott56.github.io/2024-07-16-functional_sql_in_pure_python.html</link><description>&lt;p&gt;I've published a framework for doing SQL-like programming in Pure Python -- no database required.&lt;/p&gt;
&lt;p&gt;Here: &lt;a class="reference external" href="https://github.com/slott56/functional-SQL"&gt;https://github.com/slott56/functional-SQL&lt;/a&gt;.
See the &lt;a class="reference external" href="https://slott56.github.io/functional-SQL/_build/html/index.html"&gt;functional-SQL&lt;/a&gt; documentation.&lt;/p&gt;
&lt;p&gt;This allows us to transform SQL:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;SELECT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c2&lt;/span&gt;
&lt;span class="k"&gt;FROM&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;names_table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;values_table&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;
&lt;span class="k"&gt;WHERE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;code&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To pure Python:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Jul 2024 08:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-07-16:/2024-07-16-functional_sql_in_pure_python.html</guid><category>Python</category><category>SQL</category><category>project</category><category>functional programming</category><category>functional python programming</category></item><item><title>DataSynthTool Repository</title><link>https://slott56.github.io/2024-07-01-datasynthtool_repository.html</link><description>&lt;p&gt;I've published
a framework for making tools to leverage formal schema definitions to synthesize bulk data for performance tuning.&lt;/p&gt;
&lt;p&gt;Here: &lt;a class="reference external" href="https://github.com/slott56/DataSynthTool"&gt;https://github.com/slott56/DataSynthTool&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a class="reference external" href="https://slott56.github.io/DataSynthTool/synthetic_data.slides.html#/"&gt;original talk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;a class="reference external" href="https://slott56.github.io/DataSynthTool/_build/html/index.html"&gt;documentation&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 01 Jul 2024 19:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-07-01:/2024-07-01-datasynthtool_repository.html</guid><category>Python</category><category>synthetic data</category><category>project</category></item><item><title>Synthetic Data</title><link>https://slott56.github.io/2024-06-29-synthetic_data.html</link><description>&lt;p&gt;&lt;strong&gt;Book?&lt;/strong&gt; Second draft (with tech review comments addressed) off to editors.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Boat?&lt;/strong&gt; Still on the hard during Hurricane Season.&lt;/p&gt;
&lt;div class="section" id="synthetic-data-1"&gt;
&lt;h2&gt;Synthetic Data&lt;/h2&gt;
&lt;p&gt;I've had a passing interest in data synthesis for decades.&lt;/p&gt;
&lt;p&gt;Early on in my career, I figured out how the Z/OS IEDBG utility worked.
See &lt;a class="reference external" href="https://www.ibm.com/docs/en/zos/3.1.0?topic=utilities-iebdg-test-data-generator-program"&gt;https://www.ibm …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 29 Jun 2024 09:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-06-29:/2024-06-29-synthetic_data.html</guid><category>Python</category><category>synthetic data</category><category>project</category></item><item><title>Git Nightmare</title><link>https://slott56.github.io/2024-05-07-github_nightmare.html</link><description>&lt;p&gt;My sailing blog, &lt;a class="reference external" href="https://itmaybeahack.com/TeamRedCruising2/index.html"&gt;Team Red Cruising&lt;/a&gt;
is very large: 859 postings over the last few years. 2,334 image files.&lt;/p&gt;
&lt;p&gt;This is a LOT of content.&lt;/p&gt;
&lt;p&gt;A few of the files (were) Movies, which tend to create immense files.&lt;/p&gt;
&lt;p&gt;The whole mess was so big&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How Big Was It?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 May 2024 08:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-05-07:/2024-05-07-github_nightmare.html</guid><category>Python</category><category>git</category><category>github</category><category>memory</category></item><item><title>DBLock Context Manager</title><link>https://slott56.github.io/2024-03-10-dblock-context-manager.html</link><description>&lt;p&gt;Consider, for a moment, the &lt;tt class="docutils literal"&gt;shelve&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;dbm&lt;/tt&gt; packages for storing things in a “database.”
Built-in. Lightweight. The database is essentially a mapping from identifiers to objects.
It can be quite nice.&lt;/p&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;shelve&lt;/tt&gt; module directly puts Python objects in a file.
It’s an ideal database structure for Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 10 Mar 2024 08:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-03-10:/2024-03-10-dblock-context-manager.html</guid><category>Python</category><category>database</category><category>dbm</category><category>shelve</category><category>multiprocessing</category><category>context manager</category></item><item><title>Functional Python and Lambdas</title><link>https://slott56.github.io/2024-02-09-functional_python_and_lambdas.html</link><description>&lt;p&gt;I saw a confusing post on &lt;a class="reference external" href="https://fosstodon.org"&gt;https://fosstodon.org&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I won't link to it, but I will quote it because it repeats some common misconceptions.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
I have some iterator chain (in reality longer and more complex than this example).
And now in one or more steps, I need to add …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Feb 2024 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-02-09:/2024-02-09-functional_python_and_lambdas.html</guid><category>Python</category><category>functional programming</category><category>functional python programming</category></item><item><title>Rewrites are NOT hazardous</title><link>https://slott56.github.io/2024-02-06-rewrites_are_not_hazardous.html</link><description>&lt;p&gt;First, read this: &lt;a class="reference external" href="https://www.industriallogic.com/blog/rewrites-hazardous/"&gt;Hazards And Safeguards for Software Rewrites&lt;/a&gt;.
This is an infuriating article. The first part is nonsense. I wonder if it's intended to be read ironically?
Maybe it's a list of bad ideas?
Skip straight to the &lt;strong&gt;Safeguards for Rewrites&lt;/strong&gt; section. It's really good.&lt;/p&gt;
&lt;p&gt;Also, this &lt;a class="reference external" href="https://www.industriallogic.com/blog/characterization-testing-in-nuclear-power-and-software/"&gt;Characterization Testing …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Feb 2024 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2024-02-06:/2024-02-06-rewrites_are_not_hazardous.html</guid><category>Management</category><category>test-driven reverse engineering</category><category>refactoring</category><category>legacy-code</category><category>estimating</category></item><item><title>More Reasons to Stop Bash-ing</title><link>https://slott56.github.io/2023_12_19-more_reasons_to_stop_bashing.html</link><description>&lt;p&gt;There are many good reasons to use shell scripts.
Mostly, a script can be useful when it's an alias that launches an application.
Beyond that, I have doubts.&lt;/p&gt;
&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;p&gt;Incumbency is a popular argument for bash.&lt;/p&gt;
&lt;p&gt;It's not a good argument, however.&lt;/p&gt;
&lt;p&gt;Use &lt;a class="reference external" href="https://pypi.org/project/invoke/"&gt;invoke&lt;/a&gt; and you'll be much happier.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="background"&gt;
&lt;h2&gt;Background …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Dec 2023 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-12-19:/2023_12_19-more_reasons_to_stop_bashing.html</guid><category>Python</category><category>shell</category><category>bash</category><category>unit-testing</category></item><item><title>Understanding the Abstraction -- matplotlib Edition</title><link>https://slott56.github.io/2023-12-12-understanding_the_abstraction.html</link><description>&lt;p&gt;I wasted three days because I refused to get a grip on how &lt;a class="reference external" href="https://matplotlib.org"&gt;matplotlib&lt;/a&gt; &lt;strong&gt;really&lt;/strong&gt; works.&lt;/p&gt;
&lt;p&gt;Most of the time, folks like me are happy and successful using the &lt;a class="reference external" href="https://matplotlib.org/stable/api/pyplot_summary.html"&gt;pyplot&lt;/a&gt; module.
The &lt;a class="reference external" href="https://matplotlib.org/stable/users/explain/quick_start.html"&gt;Quickstart&lt;/a&gt; provides brilliant, working
examples.&lt;/p&gt;
&lt;p&gt;As my partner's grandfather used to say, &amp;quot;We're off to the races in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Dec 2023 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-12-12:/2023-12-12-understanding_the_abstraction.html</guid><category>Python</category><category>language</category><category>semantics</category></item><item><title>It's Not THE Ternary Operator -- there are many</title><link>https://slott56.github.io/2023_12_05-not_the_ternary_operator.html</link><description>&lt;p&gt;I'm sick of reading about &lt;strong&gt;THE&lt;/strong&gt; Ternary Operator.&lt;/p&gt;
&lt;p&gt;There is not merely &lt;strong&gt;a&lt;/strong&gt; single operator that is ternary.
There are many operators that are ternary.&lt;/p&gt;
&lt;p&gt;Here's one example:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; 6+1 &amp;gt;= 6 &amp;gt;= 6-1
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&amp;gt;= &amp;gt;=&lt;/tt&gt; operator is ternary. It has 3 operands.  Count them.&lt;/p&gt;
&lt;p&gt;There are a 36 of these ternary operators …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Dec 2023 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-12-05:/2023_12_05-not_the_ternary_operator.html</guid><category>Python</category><category>language</category><category>semantics</category></item><item><title>Cleaning up Examples</title><link>https://slott56.github.io/2023-11-17-example_cleanup.html</link><description>&lt;p&gt;Stand-alone document files for tech writing are awful.
They should &lt;em&gt;not&lt;/em&gt; be used as widely as they are.&lt;/p&gt;
&lt;div class="section" id="bluf-don-t-use-ms-word"&gt;
&lt;h2&gt;BLUF: Don't Use MS-Word&lt;/h2&gt;
&lt;p&gt;We used to call editors like MS-Word &lt;em&gt;WYSIWYG&lt;/em&gt; -- What You See Is What You Get.
Once upon a time, an editor that immediately presented the final rendered doc …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 17 Nov 2023 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-11-17:/2023-11-17-example_cleanup.html</guid><category>Books</category><category>writing</category><category>latex</category></item><item><title>This is Awful</title><link>https://slott56.github.io/2023-11-14-this_is_awful.html</link><description>&lt;p&gt;This is a disheartening thing to read&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;As someone who doesn't do a ton of JSON parsing on the command line, I tend to forget &lt;a class="reference external" href="https://jqlang.github.io/jq/manual/"&gt;jq&lt;/a&gt; syntax.&lt;/p&gt;
&lt;p&gt;Two tools I really like are &lt;a class="reference external" href="github.com/tomnomnom/gron"&gt;gron&lt;/a&gt; (make JSON greppable) from &amp;#64;tomnomnom and &lt;a class="reference external" href="github.com/noahgorstein/jqp"&gt;jqp&lt;/a&gt; ..., which provides a &amp;quot;tui playground for exploring jq.&amp;quot;&lt;/p&gt;
&lt;p&gt;98 …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Nov 2023 08:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-11-14:/2023-11-14-this_is_awful.html</guid><category>Python</category><category>bash</category><category>json</category></item><item><title>The Debugger</title><link>https://slott56.github.io/2023_10_10-the_debugger.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.bitecode.dev/p/python-312-what-didnt-make-the-headlines"&gt;Python 3.12: what didn't make the headlines&lt;/a&gt;. This is &lt;strong&gt;very&lt;/strong&gt; helpful.&lt;/p&gt;
&lt;p&gt;It is a great list of 7 key features of Python 3.12.&lt;/p&gt;
&lt;p&gt;With one tiny point I need to object to.&lt;/p&gt;
&lt;div class="section" id="i-don-t-like-debuggers"&gt;
&lt;h2&gt;I don't like debuggers&lt;/h2&gt;
&lt;p&gt;This is a strongly-held position.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Debuggers are harmful.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I say this …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Oct 2023 18:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-10-10:/2023_10_10-the_debugger.html</guid><category>Python</category><category>games</category><category>tutorial</category></item><item><title>Analyzing a Dice Mechanic</title><link>https://slott56.github.io/2023_09_14-analyzing_a_dice_mechanic.html</link><description>&lt;p&gt;A &amp;quot;Dice Mechanic&amp;quot;? Yes. The thing you do with the dice to determine an outcome.
We'll use Python to see how the dice shake out.&lt;/p&gt;
&lt;div class="section" id="a-little-backstory"&gt;
&lt;h2&gt;A little backstory&lt;/h2&gt;
&lt;p&gt;For a casino game of craps, the roll of the dice can be 7 or 11 for an immediate win,
2, 3 …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Sep 2023 14:57:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-09-14:/2023_09_14-analyzing_a_dice_mechanic.html</guid><category>Python</category><category>games</category><category>tutorial</category></item><item><title>Preorder the Python Real-World Projects Book</title><link>https://slott56.github.io/2023_09_05-preorder_project_book.html</link><description>&lt;p&gt;Want a book with dozens of project ideas?&lt;/p&gt;
&lt;p&gt;Each has a description, and approach, and deliverables.
It's a lot like ordinary development work, but with some detailed guidance from the author.
(And no deadline imposed by your team lead or manager.)&lt;/p&gt;
&lt;p&gt;These are projects you can do. You can post …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Sep 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-09-05:/2023_09_05-preorder_project_book.html</guid><category>Books</category><category>community</category><category>projects</category><category>portfolio</category></item><item><title>The Echo-Pipe Trap [Updated]</title><link>https://slott56.github.io/2023-08-30-the_echo_pipe_trap.html</link><description>&lt;p&gt;This is a &lt;strong&gt;great&lt;/strong&gt; question.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://fosstodon.org/&amp;#64;JustineSmithies/110979871574705636"&gt;https://fosstodon.org/&amp;#64;JustineSmithies/110979871574705636&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This works, they said.&lt;/p&gt;
&lt;blockquote&gt;
echo -en &amp;quot;Firefox\0icon\x1fweechat&amp;quot; | fuzzel -d -w 100 -l 10&lt;/blockquote&gt;
&lt;p&gt;But. The superficial switch to &lt;tt class="docutils literal"&gt;subprocess.Popen()&lt;/tt&gt; doesn't work.&lt;/p&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;p&gt;The way &lt;tt class="docutils literal"&gt;echo&lt;/tt&gt; works varies from shell to shell. When MacOSX changes to zsh, things …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 30 Aug 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-08-30:/2023-08-30-the_echo_pipe_trap.html</guid><category>Python</category><category>shell</category><category>bash</category></item><item><title>More Python Quirks Debunking</title><link>https://slott56.github.io/2023-08-15-more_python_quirk_debunking.html</link><description>&lt;p&gt;Stuff I found on the internet that I have to disagree with.&lt;/p&gt;
&lt;p&gt;(And no, I didn't ask for clarification.
If the author posts things without supporting details it suggests they might lack the supporting
details. I can be charitable and assume they don't really care about providing useful information,
but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Aug 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-08-15:/2023-08-15-more_python_quirk_debunking.html</guid><category>Python</category><category>community</category><category>quirks</category></item><item><title>Python Quirks that aren't very quirky</title><link>https://slott56.github.io/2023-08-01-python_quirks_that_arent_very_quirky.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://writing.peercy.net/p/python-quirks"&gt;https://writing.peercy.net/p/python-quirks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Superficially, most of these are true.&lt;/p&gt;
&lt;p&gt;Looking a little more deeply, most of them are also presented in a somewhat misleading way.
A few set up a good punch-line. The &lt;strong&gt;Inheritance&lt;/strong&gt; one, for example, is funny.&lt;/p&gt;
&lt;p&gt;If the point is to force a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Aug 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-08-01:/2023-08-01-python_quirks_that_arent_very_quirky.html</guid><category>Python</category><category>community</category><category>quirks</category></item><item><title>Two Problems with Python</title><link>https://slott56.github.io/2023-07-25-two_problems_with_python.html</link><description>&lt;p&gt;I want to call out two huge problems with Python.
I'm not the first to point these out, but they've been bothering me for a while.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference internal" href="#surprising-changes"&gt;Surprising Changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference internal" href="#dependency-hell"&gt;Dependency Hell&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I've provided them here to save folks from repeating these.
They're now officially &amp;quot;known&amp;quot; and there's no point in repeating …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Jul 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-07-25:/2023-07-25-two_problems_with_python.html</guid><category>Python</category><category>community</category></item><item><title>Literate Programming with PyWebLP</title><link>https://slott56.github.io/2023-07-18-literate_programming_with_pyweblp.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/py-web-tool"&gt;https://github.com/slott56/py-web-tool&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And &lt;a class="reference external" href="https://pypi.org/project/py-web-lp/"&gt;https://pypi.org/project/py-web-lp/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I finally made the PyWeb LP tool installable from PyPI.&lt;/p&gt;
&lt;p&gt;I need to fix the name of the GitHub repo (some day) to make it also say &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;py-web-lp&lt;/span&gt;&lt;/tt&gt;.
I should also fixup my tag cloud to say pyweblp …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jul 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-07-18:/2023-07-18-literate_programming_with_pyweblp.html</guid><category>Python</category><category>literate programming</category><category>pyweb</category></item><item><title>An Implementation of Annotated Types</title><link>https://slott56.github.io/2023-07-11-an_implementation_of_annotated_types.html</link><description>&lt;p&gt;The &lt;tt class="docutils literal"&gt;typing&lt;/tt&gt; module includes the mysterious-looking &lt;tt class="docutils literal"&gt;Annotated&lt;/tt&gt; type hint.
See &lt;a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Annotated"&gt;https://docs.python.org/3/library/typing.html#typing.Annotated&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#what-does-this-do"&gt;What does this do?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#why-do-i-need-it"&gt;Why do I need it?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#where-can-i-see-examples"&gt;Where can I see examples?&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="what-does-this-do"&gt;
&lt;h2&gt;What does this do?&lt;/h2&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;Annotated&lt;/tt&gt; type hint lets us append &amp;quot;details&amp;quot; to a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jul 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-07-11:/2023-07-11-an_implementation_of_annotated_types.html</guid><category>Python</category><category>patterns</category><category>type-hints</category></item><item><title>any() and all() and Identity Elements</title><link>https://slott56.github.io/2023-06-27-any_and_all_and_identity_elements.html</link><description>&lt;p&gt;This was a surprising thing (for me) to see.
Surprising because -- after writing a book about functional programming,
I'd forgotten that some of the ideas are actually really new to people.&lt;/p&gt;
&lt;p&gt;(I've omitted the source of the quote because I want to reuse this
without worrying about link rot. Some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Jun 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-06-27:/2023-06-27-any_and_all_and_identity_elements.html</guid><category>Technologies</category><category>patterns</category><category>python</category><category>functional-programming</category></item><item><title>Python and Encapsulation -- How do I private?</title><link>https://slott56.github.io/2023_06_20-python_and_encapsulation.html</link><description>&lt;p&gt;Central to OO design is &amp;quot;encapsulation.&amp;quot; It's so central it is part of several separate principles.&lt;/p&gt;
&lt;p&gt;In the S. O. L. I. D. design principles it's the &lt;strong&gt;Interface Segregation Principle&lt;/strong&gt;.
And a significant part of the &lt;strong&gt;Single Responsibility Principle&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In some cases, Python n00bz -- folks who already know some OO …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jun 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-06-20:/2023_06_20-python_and_encapsulation.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>design patterns</category><category>python</category></item><item><title>Software Rewrites to Add Hints</title><link>https://slott56.github.io/2023_05_04-software_rewrites_to_add_hints.html</link><description>&lt;p&gt;Let's reach way, way back. 1989 - 1990.
This will let me talk about OO programming and Python Type Hints. (really)
And doing OO design for things that are as pervasive (and transparent) as air.
Things that &lt;strong&gt;need&lt;/strong&gt; to be part of a design, but don't appear in
any documentation.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 May 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-05-04:/2023_05_04-software_rewrites_to_add_hints.html</guid><category>Technologies</category><category>architecture</category><category>object-oriented design</category><category>patterns</category><category>python</category><category>games</category></item><item><title>Some Design Pattern Thoughts</title><link>https://slott56.github.io/2023_04_25-some_design_pattern_thoughts.html</link><description>&lt;p&gt;The question was &amp;quot;Favorite Design Patterns.&amp;quot;&lt;/p&gt;
&lt;p&gt;This is tricky because -- well -- so many patterns appear and re-appear in software.
Picking a few from the vast world of patterns is fraught with difficulties.&lt;/p&gt;
&lt;p&gt;Here are some thoughts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_01_03-code_quality_which_implementation_is_better.html"&gt;Code Quality - Which Implementation is &amp;quot;Better&amp;quot;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_06_25-state_based_object_modeling.html"&gt;State-Based Object Modeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2022_11_29-functional_programming_and_finite_state_automata_fsa.html"&gt;Functional Programming and Finite State …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Apr 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-04-25:/2023_04_25-some_design_pattern_thoughts.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>design patterns</category><category>python</category></item><item><title>Side Quest</title><link>https://slott56.github.io/2023_04_04-side_quest.html</link><description>&lt;p&gt;Few things are as distracting as those god-awful side quests.&lt;/p&gt;
&lt;p&gt;In this case, I had to search out all of the examples in my new book drafts.&lt;/p&gt;
&lt;div class="section" id="previously"&gt;
&lt;h2&gt;Previously&lt;/h2&gt;
&lt;p&gt;Once upon a time, it was a manual check of code in the book to be sure it made sense.&lt;/p&gt;
&lt;p&gt;Ugh. Not …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Apr 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-04-04:/2023_04_04-side_quest.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>writing</category><category>workflow</category></item><item><title>EDI Message Parsing</title><link>https://slott56.github.io/2023_03_17-edi_message_parsing.html</link><description>&lt;p&gt;Reaching back to 2008. Yes. Decade(s) ago. Python 2.5.&lt;/p&gt;
&lt;p&gt;I was reminded of this when a former colleague
pinged me about this: &lt;a class="reference external" href="https://github.com/slott56/TigerShark"&gt;https://github.com/slott56/TigerShark&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yes, it's an X12/EDI message parsing library from -- well -- decades ago.&lt;/p&gt;
&lt;div class="section" id="what-is-all-this-about"&gt;
&lt;h2&gt;What is all this about?&lt;/h2&gt;
&lt;p&gt;Short answer: Parsing X12 …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 17 Mar 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-03-17:/2023_03_17-edi_message_parsing.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>edi</category><category>x12</category></item><item><title>Programming Languages -- In Time Order</title><link>https://slott56.github.io/2023_02_21-programming_languages.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2008_09_28-programming_languages_ive_learned_more_or_less_in_order_update.html"&gt;Programming Languages I've Learned (more-or-less in order) [Update]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This came up on Twitter and Fosstodon.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;vpavlyshyn/109908255464181943"&gt;https://fosstodon.org/&amp;#64;vpavlyshyn/109908255464181943&lt;/a&gt;
and &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;slott56/109908527412493172"&gt;https://fosstodon.org/&amp;#64;slott56/109908527412493172&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I omitted a few things from the list because -- well -- there are a LOT of languages.&lt;/p&gt;
&lt;p&gt;For example, in the 90's I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-21:/2023_02_21-programming_languages.html</guid><category>Technologies</category><category>books</category><category>building skills</category><category>learning</category><category>programming languages</category></item><item><title>New Monitor</title><link>https://slott56.github.io/2023_02_18-new_monitor.html</link><description>&lt;p&gt;The (almost) 10-year old 27&amp;quot; Thunderbolt display finally died.&lt;/p&gt;
&lt;p&gt;Well, it didn't really &lt;strong&gt;die&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The Thunderbolt connector had gotten impossibly flaky.
If I looked at it wrong, the monitor glitched or disonnected.&lt;/p&gt;
&lt;p&gt;It was dead enough that I wasn't going to deal with it.&lt;/p&gt;
&lt;p&gt;It involved this morass of adapters …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 18 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-18:/2023_02_18-new_monitor.html</guid><category>Technologies</category><category>hardware</category><category>macosx</category><category>macintosh</category><category>work-life</category><category>writing</category></item><item><title>Jupyter Notebook for Tide Table Analysis</title><link>https://slott56.github.io/2023_02_14-tide_table_analysis.html</link><description>&lt;p&gt;I'm undecided if this goes into the next book.
Maybe this is a teaser...
And yes, this is a &lt;strong&gt;Python to the Rescue&lt;/strong&gt; story.&lt;/p&gt;
&lt;p&gt;I live on a boat. See &lt;a class="reference external" href="https://itmaybeahack.com/TeamRedCruising2/index.html"&gt;Red Ranger Blog&lt;/a&gt; for details.
What's essential is this little complication.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://www.charlottecountyfl.gov/departments/public-works/maintenance-operations/south-gulf-cove-boat-lock.stml"&gt;South Gulf Cove Boat Lock&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The lock keeps …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-14:/2023_02_14-tide_table_analysis.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>jupyter lab</category><category>functional programming</category><category>navigation</category><category>books</category><category>python</category></item><item><title>Python Confusion</title><link>https://slott56.github.io/2023_02_07-python_confusion.html</link><description>&lt;p&gt;For social contact, I'm generally following people on &lt;a class="reference external" href="https://fosstodon.org/home"&gt;https://fosstodon.org/home&lt;/a&gt;.
I'm &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;slott56"&gt;https://fosstodon.org/&amp;#64;slott56&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or &lt;cite&gt;&amp;#64;slott56&amp;#64;fosstodon.org &amp;lt;https://fosstodon.org/&amp;#64;slott56&amp;gt;&lt;/cite&gt; as they say in the Fediverse.&lt;/p&gt;
&lt;p&gt;But I saw some stuff on Twitter that was disheartening.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I thought Python🐍wasn't strongly typed.🤔
But this code …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-07:/2023_02_07-python_confusion.html</guid><category>Technologies</category><category>#python</category><category>learning</category></item><item><title>Book Offers</title><link>https://slott56.github.io/2023_02_03-book_offers.html</link><description>&lt;div class="section" id="packt-publishing"&gt;
&lt;h2&gt;Packt Publishing&lt;/h2&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577"&gt;https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Much newness here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="apple-books"&gt;
&lt;h2&gt;Apple Books&lt;/h2&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h3&gt;Pivot to Python&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 03 Feb 2023 08:48:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-03:/2023_02_03-book_offers.html</guid><category>Technologies</category><category>ebook</category><category>#python</category><category>SQL</category></item><item><title>Behave Tests and Fixtures</title><link>https://slott56.github.io/2023_01_27-behave_tests_and_fixtures.html</link><description>&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Behave&lt;/strong&gt; fixtures totally rock for testing
complex applications.&lt;/p&gt;
&lt;p&gt;I had been doing them wrong. Doing them right is simpler.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;I'm a fan of the Gherkin language for specifying
the behavior of software.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Scenario: Works for Me

Given a configuration
When a request is made
Then the response can …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 27 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-27:/2023_01_27-behave_tests_and_fixtures.html</guid><category>Python</category><category>books</category><category>software design</category><category>test driven development</category></item><item><title>Link Rot and Editing</title><link>https://slott56.github.io/2023_01_17-link_rot_and_editing.html</link><description>&lt;p&gt;As noted in &lt;a class="reference external" href="https://slott56.github.io/2023_01_10-finished_moving_lessons_learned.html"&gt;Finished Moving: Lessons Learned&lt;/a&gt;
link rot is real.&lt;/p&gt;
&lt;p&gt;Links vanish.&lt;/p&gt;
&lt;p&gt;I've got 23 ancient (2004 to 2006, ancient) posts
with clearly broken links. These are easy to identify
because the service vanished years ago.&lt;/p&gt;
&lt;p&gt;The tricky part is figuring out of there's any
content worth preserving. In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-17:/2023_01_17-link_rot_and_editing.html</guid><category>Technologies</category><category>blogging</category><category>markup</category><category>rst</category></item><item><title>Finished Moving: Lessons Learned</title><link>https://slott56.github.io/2023_01_10-finished_moving_lessons_learned.html</link><description>&lt;p&gt;Moved everything from blogger.com to &amp;quot;here&amp;quot; (&lt;a class="reference external" href="https://slott56.github.io"&gt;https://slott56.github.io&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;What did I learn?&lt;/p&gt;
&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Don't use WYSIWYG editors. Always use plain text markup.&lt;/li&gt;
&lt;li&gt;Think about your categories and tags.&lt;/li&gt;
&lt;li&gt;Links rot.&lt;/li&gt;
&lt;li&gt;Have a data model and tooling to process entries.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;Back in the early '00's (up to …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-10:/2023_01_10-finished_moving_lessons_learned.html</guid><category>Technologies</category><category>blogging</category><category>markup</category><category>rst</category></item><item><title>DZone's lack of a Python Zone</title><link>https://slott56.github.io/2023_01_03-dzones_lack_of_a_python_zone.html</link><description>&lt;p&gt;Check out DZone's Coding zone: &lt;a class="reference external" href="https://dzone.com/coding"&gt;https://dzone.com/coding&lt;/a&gt;. Hover over the
&amp;quot;Coding&amp;quot; drop-down menu.&lt;/p&gt;
&lt;p&gt;Notice anything lacking?&lt;/p&gt;
&lt;p&gt;I'll give you a hint: Python.&lt;/p&gt;
&lt;p&gt;They have &amp;quot;Frameworks&amp;quot;, &amp;quot;Java&amp;quot;, &amp;quot;Javascript&amp;quot;, &amp;quot;Languages&amp;quot; and &amp;quot;Tools&amp;quot;.&lt;/p&gt;
&lt;p&gt;The &amp;quot;Languages&amp;quot; seems to be general programming, and the posts include
Java, JavaScript and numerous other languages.&lt;/p&gt;
&lt;p&gt;Let's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jan 2023 10:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-03:/2023_01_03-dzones_lack_of_a_python_zone.html</guid><category>Technologies</category><category>blogging</category><category>dzone</category></item><item><title>Christmas Book Offers</title><link>https://slott56.github.io/2022_12_20-christmas_book_offers.html</link><description>&lt;div class="section" id="apple-books"&gt;
&lt;h2&gt;Apple Books&lt;/h2&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h3&gt;Pivot to Python&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff like that. The content hasn't
changed. Yet. It's still an introduction to …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-20:/2022_12_20-christmas_book_offers.html</guid><category>Technologies</category><category>ebook</category><category>#python</category><category>SQL</category></item><item><title>On Algorithm Design</title><link>https://slott56.github.io/2022_12_13-on_algorithm_design.html</link><description>&lt;p&gt;Some background: &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-faerie_dusttm.html"&gt;FAERIE DUST™&lt;/a&gt;,
&lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html"&gt;Obstinate Idiocy&lt;/a&gt;,
&lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_expanded.html"&gt;Obstinate Idiocy, Expanded&lt;/a&gt;,
and even &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-permutations_combinations_and_frustrations.html"&gt;Permutations, Combinations and Frustrations&lt;/a&gt;.
I want to set up algorithm design as the diametric opposite of Obstinate
Stupidity. To do that, let's look at Obstinate Stupidity.&lt;/p&gt;
&lt;p&gt;The theme?&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;We did something wrong, and we don't want to fix it …&lt;/strong&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-13:/2022_12_13-on_algorithm_design.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category><category>Design Principles</category><category>asycnio</category><category>faerie dust</category></item><item><title>My algorithm performs badly, do I need asyncio?</title><link>https://slott56.github.io/2022_12_06-my_algorithm_performs_badly_do_i_need_asyncio.html</link><description>&lt;p&gt;Real Question (somewhat abbreviated): &amp;quot;My algorithm performs badly, do I
need asyncio?&amp;quot;&lt;/p&gt;
&lt;p&gt;Short answer: No.&lt;/p&gt;
&lt;p&gt;Long answer: Sigh. No. Do you need a slap upside the head?&lt;/p&gt;
&lt;p&gt;Here's how it plays out:&lt;/p&gt;
&lt;p&gt;Q: &amp;quot;We figured that if we 'parallelize' it, then we can apply multiple
cores, and it will run …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-06:/2022_12_06-my_algorithm_performs_badly_do_i_need_asyncio.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category><category>analysis</category><category>asyncio</category><category>concurrency</category></item><item><title>Functional Programming and Finite State Automata (FSA)</title><link>https://slott56.github.io/2022_11_29-functional_programming_and_finite_state_automata_fsa.html</link><description>&lt;p&gt;When I talk about functional programming in Python, folks like to look
for place where functional programming isn't appropriate. They latch
onto finite-state automata (FSA) because &amp;quot;state&amp;quot; of an automata doesn't
seem to fit with stateless objects used in functional programming.&lt;/p&gt;
&lt;p&gt;This is a false dichotomy.&lt;/p&gt;
&lt;p&gt;It's emphatically false in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-29:/2022_11_29-functional_programming_and_finite_state_automata_fsa.html</guid><category>Technologies</category><category>functional python programming</category><category>software design</category><category>#python</category></item><item><title>Permutations, Combinations and Frustrations</title><link>https://slott56.github.io/2022_11_22-permutations_combinations_and_frustrations.html</link><description>&lt;p&gt;The issue of permutations and combinations is sometimes funny.&lt;/p&gt;
&lt;p&gt;Not funny weird. But, funny &amp;quot;haha.&amp;quot;&lt;/p&gt;
&lt;p&gt;I received an email with 100's of words and 10 attachments. (10.
Really.) The subject was how best to enumerate 6! permutations of
something or other. With a goal of comparing some optimization algorithm
with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 17:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-permutations_combinations_and_frustrations.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category></item><item><title>Obstinate Idiocy, Expanded</title><link>https://slott56.github.io/2022_11_22-obstinate_idiocy_expanded.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html"&gt;Obstinate Idiocy&lt;/a&gt;
for some background.&lt;/p&gt;
&lt;p&gt;Here are three warning signs I was able to deduce.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No Rational Justification&lt;/li&gt;
&lt;li&gt;Ineffective Tool Choice&lt;/li&gt;
&lt;li&gt;Random Whining&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To which I can now add two more.&lt;/p&gt;
&lt;p&gt;Symptom 4 of Obstinate Idiocy is that &lt;strong&gt;all questions are rhetorical&lt;/strong&gt;
and they often come with pre-argued answers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 17:15:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-obstinate_idiocy_expanded.html</guid><category>Technologies</category><category>software process improvement</category><category>software design</category><category>analysis</category><category>spreadsheet</category></item><item><title>FAERIE DUST™</title><link>https://slott56.github.io/2022_11_22-faerie_dusttm.html</link><description>&lt;p&gt;Here's how to recognize a &lt;strong&gt;Faerie Dust&lt;/strong&gt; request:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;We have identified a problem. It can be with almost anything:
scalability, reliability, auditability, any Quality Measure.&lt;/li&gt;
&lt;li&gt;We're pursuing a specific technology. Typically, something that has
the lowest impact on our architecture.&lt;/li&gt;
&lt;li&gt;We can't address anything other than this specific technology
variation …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 16:39:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-faerie_dusttm.html</guid><category>Technologies</category><category>design</category><category>architecture</category></item><item><title>Testing with PySpark</title><link>https://slott56.github.io/2022_11_22-testing_with_pyspark.html</link><description>&lt;p&gt;This isn't about details of pySpark. This is about the philosophy of
testing when working with a large, complex framework, like pySpark,
pandas, numpy, or whatever.&lt;/p&gt;
&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;p&gt;Use data subsets.&lt;/p&gt;
&lt;p&gt;Write unit tests for the functions that process the data.&lt;/p&gt;
&lt;p&gt;Don't test pyspark itself. Test the code you write.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="some-history"&gt;
&lt;h2&gt;Some …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-testing_with_pyspark.html</guid><category>Technologies</category><category>unit testing</category><category>pySpark</category><category>gherkin</category><category>#python</category></item><item><title>Buzz in the general public regarding software bugs</title><link>https://slott56.github.io/2022_11_22-buzz_in_the_general_public_regarding_software_bugs.html</link><description>&lt;p&gt;I got this the other day: &amp;quot;there seems to be a lot of buzz out in the
general public regarding software bugs&amp;quot;.&lt;/p&gt;
&lt;p&gt;Attached to this was an article from The Economist in 2003 plus one
from 2010. To me, this doesn't seem to be a &amp;quot;lot&amp;quot; of buzz. But what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 10:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-buzz_in_the_general_public_regarding_software_bugs.html</guid><category>Technologies</category><category>software process improvement</category><category>API Design</category><category>defensive programming</category></item><item><title>Generators as Stacks of Operations</title><link>https://slott56.github.io/2022_11_15-generators_as_stacks_of_operations.html</link><description>&lt;p&gt;See
&lt;a class="reference external" href="https://towardsdatascience.com/building-generator-pipelines-in-python-8931535792ff"&gt;https://towardsdatascience.com/building-generator-pipelines-in-python-8931535792ff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm delighted by this article.&lt;/p&gt;
&lt;p&gt;I was shown only the first, horrible, example. I think the idea was to
push back on the idea of complex generators. I fumed.&lt;/p&gt;
&lt;p&gt;Then I read the entire article.&lt;/p&gt;
&lt;p&gt;Now I'm fuming at someone who posted the first example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-15:/2022_11_15-generators_as_stacks_of_operations.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>generator functions</category></item><item><title>Fighting Against Over-Engineering</title><link>https://slott56.github.io/2022_11_08-fighting_against_over_engineering.html</link><description>&lt;p&gt;I've been trying to help some folks who have a &amp;quot;search&amp;quot; algorithm that's
slow.&lt;/p&gt;
&lt;p&gt;They know it's slow -- that's pretty obvious.&lt;/p&gt;
&lt;p&gt;They're -- unfortunately -- &lt;strong&gt;sure&lt;/strong&gt; that asyncio will help. That's not
an obvious conclusion. It involves no useful research. Indeed, that's a
kind of magical thinking. Which leads me to consider …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Nov 2022 16:18:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-08:/2022_11_08-fighting_against_over_engineering.html</guid><category>Technologies</category><category>design</category><category>architecture</category><category>methodology</category></item><item><title>Some Functional Programming in Python material</title><link>https://slott56.github.io/2022_10_25-some_functional_programming_in_python_material.html</link><description>&lt;p&gt;This is bonus content for the forthcoming &lt;a class="reference external" href="https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577"&gt;Functional Python Programming
3rd
edition&lt;/a&gt;
book. It didn't make it into the book because -- well -- it was just too
much of the wrong kind of detail.&lt;/p&gt;
&lt;p&gt;See this &amp;quot;&lt;a class="reference external" href="https://itmaybeahack.com/buildingskills/Tough_TCO.pdf"&gt;Tough
TCO&lt;/a&gt;&amp;quot; document
for some thoughts on Tail-Call Optimization that can be particularly
difficult. This …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Oct 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-10-25:/2022_10_25-some_functional_programming_in_python_material.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>tail call optimization</category></item><item><title>Books! Books! More Channels!</title><link>https://slott56.github.io/2022_09_21-books_books_more_channels.html</link><description>&lt;p&gt;I started with the Apple Books platform because it's an easy default for
me.&lt;/p&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h2&gt;Pivot to Python&lt;/h2&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 21 Sep 2022 15:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-09-21:/2022_09_21-books_books_more_channels.html</guid><category>Technologies</category><category>building skills books</category><category>#python</category><category>SQL</category></item><item><title>Enterprise Python -- Some initial thoughts</title><link>https://slott56.github.io/2022_08_16-enterprise_python_some_initial_thoughts.html</link><description>&lt;p&gt;In the long run, I think there's a small book here. See &lt;a class="reference external" href="https://www.infoworld.com/article/3604473/8-reasons-python-will-rule-the-enterprise-and-8-reasons-it-wont.html%20"&gt;8 reasons
Python will rule the enterprise — and 8 reasons it won’t |
InfoWorld&lt;/a&gt;.
The conclusion, &amp;quot;Teams need to migrate slowly into the future, and
adopting more Python is a way to do that,&amp;quot; seems to be sensible …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-16:/2022_08_16-enterprise_python_some_initial_thoughts.html</guid><category>Technologies</category><category>#python</category><category>enterprise</category></item><item><title>Tragedy Averted</title><link>https://slott56.github.io/2022_08_09-tragedy_averted.html</link><description>&lt;p&gt;I almost made a terrible blunder.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/py-web-tool"&gt;https://github.com/slott56/py-web-tool&lt;/a&gt; for some background. This is
a &amp;quot;Literate Programming&amp;quot; tool. I started fooling around with this kind
of thing back in '05 (maybe even earlier.) This is not the blunder. The
whole idea of literate programming is not very …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-09:/2022_08_09-tragedy_averted.html</guid><category>Technologies</category><category>sphinx</category><category>#python</category><category>literate programming</category><category>docutils</category><category>plantuml</category><category>pyWeb</category></item><item><title>Books! Books! Books!</title><link>https://slott56.github.io/2022_08_02-books_books_books.html</link><description>&lt;p&gt;First, there's&lt;/p&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h2&gt;Pivot to Python&lt;/h2&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff like that. The content hasn't
changed. Yet. It's still an introduction to …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-02:/2022_08_02-books_books_books.html</guid><category>Technologies</category><category>building skills books</category><category>#python</category><category>SQL</category></item><item><title>Bashing the Bash -- The shell is awful and what you can do about it</title><link>https://slott56.github.io/2022_07_26-bashing_the_bash_the_shell_is_awful_and_what_you_can_do_about_it.html</link><description>&lt;p&gt;A presentation I did recently.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/slott56/bashing-the-bash"&gt;https://github.com/slott56/bashing-the-bash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Folks were polite and didn't have too many questions. I guess they
fundamentally agreed: the shell is awful, we can use it for a few
things.&lt;/p&gt;
&lt;p&gt;Safe Shell Scripts Stay Simple: Set the environment, Start the
application.
---------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;The Seven S's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-26:/2022_07_26-bashing_the_bash_the_shell_is_awful_and_what_you_can_do_about_it.html</guid><category>Technologies</category><category>bash</category><category>#python</category><category>shell</category></item><item><title>I've got a great Proof-of-Concept. How do I go forward with it?</title><link>https://slott56.github.io/2022_07_19-ive_got_a_great_proof_of_concept_how_do_i_go_forward_with_it.html</link><description>&lt;p&gt;This is the best part about Python -- you can build something quickly.
And it really works.&lt;/p&gt;
&lt;p&gt;But.&lt;/p&gt;
&lt;p&gt;What are the next steps?&lt;/p&gt;
&lt;p&gt;While there are a *lot* of possibilities, I'm focused on an
&amp;quot;enterprise work group&amp;quot; application that involves a clever web
service/RESTful API built in Flask. Maybe with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-19:/2022_07_19-ive_got_a_great_proof_of_concept_how_do_i_go_forward_with_it.html</guid><category>Technologies</category><category>enterprise</category><category>#python</category></item><item><title>The Enterprise COBOL Conundrum</title><link>https://slott56.github.io/2022_07_12-the_enterprise_cobol_conundrum.html</link><description>&lt;p&gt;Enterprise COBOL is both a liability and an asset. There's tangible
value hidden in the code.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/looking-at-cobol"&gt;https://github.com/slott56/looking-at-cobol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've tweaked the presentation a little.&lt;/p&gt;
&lt;p&gt;The essential ingredients in coping with COBOL are these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use something like &lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;Stingray
Reader&lt;/a&gt; to parse COBOL
DDE's and process the data …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-12:/2022_07_12-the_enterprise_cobol_conundrum.html</guid><category>Technologies</category><category>#python</category><category>COBOL</category><category>stingray reader</category></item><item><title>Revised Understanding --&gt; Revised Data Structures --&gt; Revised Type Hints</title><link>https://slott56.github.io/2022_07_05-revised_understanding_revised_data_structures_revised_type_hints.html</link><description>&lt;p&gt;My literate programming tool, pyWeb, has moved to version 3.1 --
supporting modern Python.&lt;/p&gt;
&lt;p&gt;Next up, version 3.2. This is a massive reworking of the data structures
involved. The rework lets me use Jinja2 for templates. There's a lot of
fiddliness to getting the end-of-line spacing right. Jinja has …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-05:/2022_07_05-revised_understanding_revised_data_structures_revised_type_hints.html</guid><category>Technologies</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>Massive Rework of Data Structures</title><link>https://slott56.github.io/2022_06_28-massive_rework_of_data_structures.html</link><description>&lt;p&gt;As noted in &lt;a class="reference external" href="https://slott56.github.io/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html"&gt;My Shifting Understanding and A Terrible Design
Mistake&lt;/a&gt;,
I had a design that focused on serialization instead of proper modeling
of the objects in question.&lt;/p&gt;
&lt;p&gt;Specifically, I didn't start with a suitable abstract syntax tree (AST)
structure. I started with an algorithmic view of &amp;quot;weaving&amp;quot; and
&amp;quot;tangling …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-28:/2022_06_28-massive_rework_of_data_structures.html</guid><category>Technologies</category><category>Test-Driven Development</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>My Shifting Understanding and A Terrible Design Mistake</title><link>https://slott56.github.io/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html</link><description>&lt;p&gt;I've been fascinated by Literate Programming forever.&lt;/p&gt;
&lt;p&gt;I have two utterly divergent takes on this.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/PyLit-3"&gt;https://github.com/slott56/PyLit-3&lt;/a&gt; for one.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/py-web-tool"&gt;https://github.com/slott56/py-web-tool&lt;/a&gt; for another.&lt;/p&gt;
&lt;p&gt;And yet, I've still done a really bad design job. Before we get to the
design, a little bit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-21:/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html</guid><category>Technologies</category><category>#python</category><category>literate programming</category><category>jinja</category><category>pyWeb</category><category>PyLit3</category></item><item><title>A LaTeX Thing I Did -- And A ToDo:</title><link>https://slott56.github.io/2022_06_14-a_latex_thing_i_did_and_a_todo.html</link><description>&lt;p&gt;When writing about code in LaTeX, the essential strategy is to use an
environment to format the code so it stands out from surrounding text.
There are a few of these environments available as LaTeX add-on
packages. The three popular ones are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;verbatim&lt;/strong&gt;. I think this is built-in to LaTeX …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-14:/2022_06_14-a_latex_thing_i_did_and_a_todo.html</guid><category>Technologies</category><category>literate programming</category><category>packtpub</category><category>#python</category></item><item><title>Code so bad it causes me physical pain</title><link>https://slott56.github.io/2022_05_23-code_so_bad_it_causes_me_physical_pain.html</link><description>&lt;p&gt;Here's the code.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def get_categories(file):
    &amp;quot;&amp;quot;&amp;quot;
    Get categories.
    &amp;quot;&amp;quot;&amp;quot;
    verify_file(file)

    categories = set()

    with open(file, &amp;quot;r&amp;quot;) as cat_file:
        while line := cat_file.readline().rstrip():
            categories.add(line)

    return categories
&lt;/pre&gt;
&lt;p&gt;To me this was terrible. truly and deeply horrifying. Let me count the
ways.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The docstring repeats the name of the function …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 23 May 2022 20:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-05-23:/2022_05_23-code_so_bad_it_causes_me_physical_pain.html</guid><category>Technologies</category><category>data structure</category><category>#python</category></item><item><title>Python is a Bad Programming Language. Wait, wut?</title><link>https://slott56.github.io/2022_05_23-python_is_a_bad_programming_language_wait_wut.html</link><description>&lt;p&gt;It may help to read &lt;a class="reference external" href="https://medium.com/nerd-for-tech/python-is-a-bad-programming-language-2ab73b0bda5"&gt;Python is a Bad Programming
Language&lt;/a&gt;,
but it's not very useful.&lt;/p&gt;
&lt;p&gt;I shouldn't be tempted by click-bait headlines. But.  I am drawn in by
bad articles on Python.&lt;/p&gt;
&lt;p&gt;In particular, any post claiming Python is deficient causes me to look
for the concrete PEP's that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 23 May 2022 20:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-05-23:/2022_05_23-python_is_a_bad_programming_language_wait_wut.html</guid><category>Technologies</category><category>#python</category><category>click-bait</category></item><item><title>Pelican and Static Web Content</title><link>https://slott56.github.io/2022_04_12-pelican_and_static_web_content.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2022_03_01-static_site_blues.html"&gt;Static Site
Blues&lt;/a&gt;
I was wringing my hands over ways to convert a &lt;strong&gt;ton&lt;/strong&gt; of content from a
two different proprietary tools (the very old iWeb, and the merely old
Sandvox) into something I could work with.&lt;/p&gt;
&lt;p&gt;After a bit of fiddling around, I'm delighted with
&lt;a class="reference external" href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Apr 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-04-12:/2022_04_12-pelican_and_static_web_content.html</guid><category>Technologies</category><category>#python</category><category>blogging</category><category>markdown</category><category>static site generator</category></item><item><title>Static Site Blues</title><link>https://slott56.github.io/2022_03_01-static_site_blues.html</link><description>&lt;p&gt;I have a very large, static site with 10+ years of stuff about my boat.
Most of it is pretty
boring. &lt;a class="reference external" href="http://www.itmaybeahack.com/TeamRedCruising/"&gt;http://www.itmaybeahack.com/TeamRedCruising/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I started with iWeb. It was very -- well -- 2000-ish look and feel. Too
many pastels and lines and borders.&lt;/p&gt;
&lt;p&gt;In 2012, I switched to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Mar 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-03-01:/2022_03_01-static_site_blues.html</guid><category>Technologies</category><category>RST</category><category>#python</category><category>blogging</category><category>markdown</category><category>static site generator</category></item><item><title>LaTeX Mysteries and an algorithmicx thing I learned.</title><link>https://slott56.github.io/2022_02_15-latex_mysteries_and_an_algorithmicx_thing_i_learned.html</link><description>&lt;p&gt;I've been an on-and-off user of LaTeX since the very, very beginning.
Back in the dark days when the one laser printer that could render the
images was in a closely-guarded secret location to prevent everyone from
using it and exhausting the (expensive) toner cartridges.&lt;/p&gt;
&lt;p&gt;A consequence of this is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Feb 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-15:/2022_02_15-latex_mysteries_and_an_algorithmicx_thing_i_learned.html</guid><category>Technologies</category><category>writing</category><category>latex</category><category>markup</category></item><item><title>Desktop Notifications and EPIC DESIGN FAIL</title><link>https://slott56.github.io/2022_02_08-desktop_notifications_and_epic_design_fail.html</link><description>&lt;p&gt;I was asked to review code that -- well -- was evil.&lt;/p&gt;
&lt;p&gt;Not like &amp;quot;shabby&amp;quot; or &amp;quot;non-pythonic&amp;quot;. Nothing so simple as that.&lt;/p&gt;
&lt;p&gt;We'll get to the evil in a moment. First, we have to suffer two horrible
indignities.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Busy Waiting&lt;/li&gt;
&lt;li&gt;Undefined Post-Conditions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We'll beat all three issues to death separately, starting with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Feb 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-08:/2022_02_08-desktop_notifications_and_epic_design_fail.html</guid><category>Technologies</category><category>notification</category><category>workflow</category><category>#python</category></item><item><title>No one wins at Code Golf vs. This is more noise than signal</title><link>https://slott56.github.io/2022_02_03-no_one_wins_at_code_golf_vs_this_is_more_noise_than_signal.html</link><description>&lt;p&gt;Looking at code. Came to a 20-line block of code that did exactly this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sorted(Path.cwd().glob(&amp;quot;some_pattern[1-9]*.*&amp;quot;), reverse=True)
&lt;/pre&gt;
&lt;p&gt;Twenty lines. Seriously.&lt;/p&gt;
&lt;p&gt;To be fair, 8 of the 20 lines were comments. 3 were blank. Which leaves
9 lines of code to perform the task of a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Feb 2022 20:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-03:/2022_02_03-no_one_wins_at_code_golf_vs_this_is_more_noise_than_signal.html</guid><category>Technologies</category><category>code golf</category><category>#python</category></item><item><title>How to Test a Random Number Generator</title><link>https://slott56.github.io/2022_01_18-how_to_test_a_random_number_generator.html</link><description>&lt;p&gt;Nowadays, we don't have the same compelling reasons to test a random
number generator. The intervening decades have seen a lot of fruitful
research. Good algorithms.&lt;/p&gt;
&lt;p&gt;Looking back to my 1968 self, however, I still feel a need to work out
the solution to an old problem. See &lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jan 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-18:/2022_01_18-how_to_test_a_random_number_generator.html</guid><category>Technologies</category><category>#python</category><category>random numbers</category><category>multiprocessing</category></item><item><title>The Old Days -- ca. 2000 -- Empirical Tests of Random Numbers (Python and Chi-Square Testing)</title><link>https://slott56.github.io/2022_01_11-the_old_days_ca_2000_empirical_tests_of_random_numbers_python_and_chi_square_testing.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old Days -- ca. 1974 Random Numbers Before
Python&lt;/a&gt;
for some background.&lt;/p&gt;
&lt;p&gt;We'll get to Python after reminiscing about the olden days. I want to
provide some back story on why
&lt;a class="reference external" href="https://docs.sympy.org/latest/index.html"&gt;sympy&lt;/a&gt; has had a huge
impact on ordinary hacks like myself.&lt;/p&gt;
&lt;p&gt;What we're talking about is how we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jan 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-11:/2022_01_11-the_old_days_ca_2000_empirical_tests_of_random_numbers_python_and_chi_square_testing.html</guid><category>Technologies</category><category>#python</category><category>fortran</category><category>random numbers</category></item><item><title>The Old Days -- ca. 1974 -- Random Numbers before Python</title><link>https://slott56.github.io/2022_01_04-the_old_days_ca_1974_random_numbers_before_python.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old Old Days -- ca.
1968&lt;/a&gt;&amp;quot;
for my first exposure to an actual computer. Nothing about Python there.
But. It's what motivated me to get started learning to code -- I was
fascinated by games that involved randomization. Games with cards or
dice.&lt;/p&gt;
&lt;p&gt;After filling in a little background, I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jan 2022 20:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-04:/2022_01_04-the_old_days_ca_1974_random_numbers_before_python.html</guid><category>Technologies</category><category>#python</category><category>fortran</category><category>random numbers</category></item><item><title>The Old Old Days -- ca. 1968</title><link>https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html</link><description>&lt;p&gt;As the olds do, I reminisce sometimes. Not often. Let me rewind the
memory tapes a back to 1967 or '68.&lt;/p&gt;
&lt;p&gt;(What a dumb metaphor for folks who have never used serial storage.)&lt;/p&gt;
&lt;p&gt;This isn't -- directly -- about Python. But it may help folks who live
at the edge of programming …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Dec 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-28:/2021_12_28-the_old_old_days_ca_1968.html</guid><category>Technologies</category><category>history</category><category>learning</category><category>simulation</category><category>random numbers</category></item><item><title>Some Harsh Criticism for Python Object-Oriented Programming 4th ed.</title><link>https://slott56.github.io/2021_12_26-some_harsh_criticism_for_python_object_oriented_programming_4th_ed.html</link><description>&lt;p&gt;Here are some links to
reviews: &lt;a class="reference external" href="https://www.amazon.com/product-reviews/1801077266/ref=cm_cr_unknown?ie=UTF8&amp;amp;filterByStar=one_star&amp;amp;reviewerType=all_reviews&amp;amp;pageNumber=1#reviews-filter-bar"&gt;https://www.amazon.com/product-reviews/1801077266/ref=cm_cr_unknown?ie=UTF8&amp;amp;filterByStar=one_star&amp;amp;reviewerType=all_reviews&amp;amp;pageNumber=1#reviews-filter-bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.amazon.ca/product-reviews/1801077266/ref=acr_dp_hist_3?ie=UTF8&amp;amp;filterByStar=three_star&amp;amp;reviewerType=all_reviews#reviews-filter-bar"&gt;https://www.amazon.ca/product-reviews/1801077266/ref=acr_dp_hist_3?ie=UTF8&amp;amp;filterByStar=three_star&amp;amp;reviewerType=all_reviews#reviews-filter-bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are reviews of &lt;a class="reference external" href="https://subscription.packtpub.com/book/programming/9781801077262/2"&gt;Python Object-Oriented Programming: Build robust
and maintainable object-oriented …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 26 Dec 2021 11:11:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-26:/2021_12_26-some_harsh_criticism_for_python_object_oriented_programming_4th_ed.html</guid><category>Technologies</category><category>python</category><category>writing</category></item><item><title>Processing Apple Numbers Files</title><link>https://slott56.github.io/2021_12_01-processing_apple_numbers_files.html</link><description>&lt;p&gt;Apple's freebie tools -- Pages, Numbers, Keynote, Garage Band, etc. --
are wonderful things. I really like Numbers. I'm tolerant of Pages. I've
used Pages to write books and publish them to the Apple Bookstore.
(Shameless Plug: &lt;a class="reference external" href="https://books.apple.com/us/book/id1586977675"&gt;Pivot to
Python&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;These tools have a significant problem. Protobuf.&lt;/p&gt;
&lt;div class="section" id="some-history"&gt;
&lt;h2&gt;Some History&lt;/h2&gt;
&lt;p&gt;Once upon a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 01 Dec 2021 07:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-01:/2021_12_01-processing_apple_numbers_files.html</guid><category>Technologies</category><category>open source</category><category>#python</category><category>workbook</category><category>spreadsheet</category><category>jsonschema</category><category>stingray reader</category></item><item><title>Reading Spreadsheets with Stingray Reader and Type Hinting</title><link>https://slott56.github.io/2021_11_16-reading_spreadsheets_with_stingray_reader_and_type_hinting.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2021_08_24-spreadsheets_cobol_and_schema_driven_file_processing.html"&gt;Spreadsheets, COBOL, and schema-driven file
processing&lt;/a&gt;,
etc. for some history on this project.&lt;/p&gt;
&lt;p&gt;Also, see
&lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;Stingray-Reader&lt;/a&gt; for the
current state of this effort.&lt;/p&gt;
&lt;p&gt;(This started almost 20 years ago, I've been refining and revising a
lot.)&lt;/p&gt;
&lt;div class="section" id="big-lesson-up-front"&gt;
&lt;h2&gt;Big Lesson Up Front&lt;/h2&gt;
&lt;p&gt;Python is very purely driven by the idea that …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Nov 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-11-16:/2021_11_16-reading_spreadsheets_with_stingray_reader_and_type_hinting.html</guid><category>Technologies</category><category>#python</category><category>protocols</category><category>annotations</category><category>type hints</category></item><item><title>Welcome to Python: Some hints for ways to explain how truly bad the language is</title><link>https://slott56.github.io/2021_11_02-welcome_to_python_some_hints_for_ways_to_explain_how_truly_bad_the_language_is.html</link><description>&lt;p&gt;As an author with many books on Python, I'm captivated by people's hot
takes on why Python is so epically bad. Really Bad. Uselessly Bad.
Profoundly Broken. etc.&lt;/p&gt;
&lt;p&gt;I'll provide some hints on topics that get repeated a lot. If you really
need to write a blog post about how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Nov 2021 14:55:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-11-02:/2021_11_02-welcome_to_python_some_hints_for_ways_to_explain_how_truly_bad_the_language_is.html</guid><category>Technologies</category><category>#python</category><category>PEP</category></item><item><title>Legacy Software is a Sticky Mess</title><link>https://slott56.github.io/2021_10_12-legacy_software_is_a_sticky_mess.html</link><description>&lt;p&gt;I'll get to legacy software. First, however, some backstory on
observability.&lt;/p&gt;
&lt;p&gt;Sailors will sometimes create &amp;quot;Float Plans&amp;quot;. Like aircraft flight plans,
they have an itinerary to make it slightly easier to find us when
something goes wrong. Unlike airspace, which is tightly controlled by
the FAA, the seas are more-or-less …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Oct 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-10-12:/2021_10_12-legacy_software_is_a_sticky_mess.html</guid><category>Technologies</category><category>navtools</category><category>navigation</category><category>object-oriented design</category><category>#python</category></item><item><title>New to Python -- How to manage architecture choices</title><link>https://slott56.github.io/2021_10_05-new_to_python_how_to_manage_architecture_choices.html</link><description>&lt;p&gt;This is a problem folks new to Python have, and sometimes can't
articulate that they have it.&lt;/p&gt;
&lt;p&gt;They don't know which package is the &amp;quot;right&amp;quot; one to use. Tox vs. Nox.
Click vs. Argparse vs. getopts? What's the &amp;quot;best&amp;quot; choice?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Response 1&lt;/strong&gt;. The whole Python ecosystem is chaos and the …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Oct 2021 10:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-10-05:/2021_10_05-new_to_python_how_to_manage_architecture_choices.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>community</category><category>management</category></item><item><title>Pivot to Python -- 150 pages of things you might need to know</title><link>https://slott56.github.io/2021_09_28-pivot_to_python_150_pages_of_things_you_might_need_to_know.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://books.apple.com/us/book/id1586977675"&gt;http://books.apple.com/us/book/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Python Programming language is a deep topic. This book provides
focused guidance on installing Python, creating virtual enivironments
and using Jupyter Lab to build foundational skills in using Python. The
book covers many built-in data types. There are two small case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Sep 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-28:/2021_09_28-pivot_to_python_150_pages_of_things_you_might_need_to_know.html</guid><category>Technologies</category><category>#python</category><category>building skills</category></item><item><title>Python and the "Syntactic Whitespace Problem"</title><link>https://slott56.github.io/2021_09_27-python_and_the_syntactic_whitespace_problem.html</link><description>&lt;p&gt;Check out this list of questions on Stack Overflow:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stackoverflow.com/search?q=%5Bpython%5D+whitespace+syntax"&gt;http://stackoverflow.com/search?q=%5Bpython%5D+whitespace+syntax&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About 10% of these are really just complaints about Python's syntax.
Almost every Stack Overflow question on Python's use of syntactic
whitespace is really just a complaint.&lt;/p&gt;
&lt;p&gt;Here's today's example: &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/3994765/python-without-whitespace-requirements"&gt;Python without …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Sep 2021 16:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-27:/2021_09_27-python_and_the_syntactic_whitespace_problem.html</guid><category>Technologies</category><category>#python</category></item></channel></rss>