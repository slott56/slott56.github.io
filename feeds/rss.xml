<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>S.Lott -- Software Architect</title><link>https://slott56.github.io/</link><description></description><lastBuildDate>Tue, 11 Jul 2023 09:00:00 -0400</lastBuildDate><item><title>An Implementation of Annotated Types</title><link>https://slott56.github.io/2023-07-11-an_implementation_of_annotated_types.html</link><description>&lt;p&gt;The &lt;tt class="docutils literal"&gt;typing&lt;/tt&gt; module includes the mysterious-looking &lt;tt class="docutils literal"&gt;Annotated&lt;/tt&gt; type hint.
See &lt;a class="reference external" href="https://docs.python.org/3/library/typing.html#typing.Annotated"&gt;https://docs.python.org/3/library/typing.html#typing.Annotated&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#what-does-this-do"&gt;What does this do?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#why-do-i-need-it"&gt;Why do I need it?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference internal" href="#where-can-i-see-examples"&gt;Where can I see examples?&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="what-does-this-do"&gt;
&lt;h2&gt;What does this do?&lt;/h2&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;Annotated&lt;/tt&gt; type hint lets us append &amp;quot;details&amp;quot; to a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jul 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-07-11:/2023-07-11-an_implementation_of_annotated_types.html</guid><category>Python</category><category>patterns</category><category>python</category><category>type-hints</category></item><item><title>any() and all() and Identity Elements</title><link>https://slott56.github.io/2023-06-27-any_and_all_and_identity_elements.html</link><description>&lt;p&gt;This was a surprising thing (for me) to see.
Surprising because -- after writing a book about functional programming,
I'd forgotten that some of the ideas are actually really new to people.&lt;/p&gt;
&lt;p&gt;(I've omitted the source of the quote because I want to reuse this
without worrying about link rot. Some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Jun 2023 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-06-27:/2023-06-27-any_and_all_and_identity_elements.html</guid><category>Technologies</category><category>patterns</category><category>python</category><category>functional-programming</category></item><item><title>Python and Encapsulation -- How do I private?</title><link>https://slott56.github.io/2023_06_20-python_and_encapsulation.html</link><description>&lt;p&gt;Central to OO design is &amp;quot;encapsulation.&amp;quot; It's so central it is part of several separate principles.&lt;/p&gt;
&lt;p&gt;In the S. O. L. I. D. design principles it's the &lt;strong&gt;Interface Segregation Principle&lt;/strong&gt;.
And a significant part of the &lt;strong&gt;Single Responsibility Principle&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In some cases, Python n00bz -- folks who already know some OO …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jun 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-06-20:/2023_06_20-python_and_encapsulation.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>design patterns</category><category>python</category></item><item><title>Software Rewrites to Add Hints</title><link>https://slott56.github.io/2023_05_04-software_rewrites_to_add_hints.html</link><description>&lt;p&gt;Let's reach way, way back. 1989 - 1990.
This will let me talk about OO programming and Python Type Hints. (really)
And doing OO design for things that are as pervasive (and transparent) as air.
Things that &lt;strong&gt;need&lt;/strong&gt; to be part of a design, but don't appear in
any documentation.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 May 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-05-04:/2023_05_04-software_rewrites_to_add_hints.html</guid><category>Technologies</category><category>architecture</category><category>object-oriented design</category><category>patterns</category><category>python</category><category>games</category><category>herogame</category></item><item><title>Some Design Pattern Thoughts</title><link>https://slott56.github.io/2023_04_25-some_design_pattern_thoughts.html</link><description>&lt;p&gt;The question was &amp;quot;Favorite Design Patterns.&amp;quot;&lt;/p&gt;
&lt;p&gt;This is tricky because -- well -- so many patterns appear and re-appear in software.
Picking a few from the vast world of patterns is fraught with difficulties.&lt;/p&gt;
&lt;p&gt;Here are some thoughts:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_01_03-code_quality_which_implementation_is_better.html"&gt;Code Quality - Which Implementation is &amp;quot;Better&amp;quot;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_06_25-state_based_object_modeling.html"&gt;State-Based Object Modeling&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2022_11_29-functional_programming_and_finite_state_automata_fsa.html"&gt;Functional Programming and Finite State …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Apr 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-04-25:/2023_04_25-some_design_pattern_thoughts.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>design patterns</category><category>python</category></item><item><title>Side Quest</title><link>https://slott56.github.io/2023_04_04-side_quest.html</link><description>&lt;p&gt;Few things are as distracting as those god-awful side quests.&lt;/p&gt;
&lt;p&gt;In this case, I had to search out all of the examples in my new book drafts.&lt;/p&gt;
&lt;div class="section" id="previously"&gt;
&lt;h2&gt;Previously&lt;/h2&gt;
&lt;p&gt;Once upon a time, it was a manual check of code in the book to be sure it made sense.&lt;/p&gt;
&lt;p&gt;Ugh. Not …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Apr 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-04-04:/2023_04_04-side_quest.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>writing</category><category>workflow</category></item><item><title>EDI Message Parsing</title><link>https://slott56.github.io/2023_03_17-edi_message_parsing.html</link><description>&lt;p&gt;Reaching back to 2008. Yes. Decade(s) ago. Python 2.5.&lt;/p&gt;
&lt;p&gt;I was reminded of this when a former colleague
pinged me about this: &lt;a class="reference external" href="https://github.com/slott56/TigerShark"&gt;https://github.com/slott56/TigerShark&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Yes, it's an X12/EDI message parsing library from -- well -- decades ago.&lt;/p&gt;
&lt;div class="section" id="what-is-all-this-about"&gt;
&lt;h2&gt;What is all this about?&lt;/h2&gt;
&lt;p&gt;Short answer: Parsing X12 …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 17 Mar 2023 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-03-17:/2023_03_17-edi_message_parsing.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>edi</category><category>x12</category></item><item><title>Programming Languages -- In Time Order</title><link>https://slott56.github.io/2023_02_21-programming_languages.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2008_09_28-programming_languages_ive_learned_more_or_less_in_order_update.html"&gt;Programming Languages I've Learned (more-or-less in order) [Update]&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This came up on Twitter and Fosstodon.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;vpavlyshyn/109908255464181943"&gt;https://fosstodon.org/&amp;#64;vpavlyshyn/109908255464181943&lt;/a&gt;
and &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;slott56/109908527412493172"&gt;https://fosstodon.org/&amp;#64;slott56/109908527412493172&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I omitted a few things from the list because -- well -- there are a LOT of languages.&lt;/p&gt;
&lt;p&gt;For example, in the 90's I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-21:/2023_02_21-programming_languages.html</guid><category>Technologies</category><category>books</category><category>building skills</category><category>learning</category><category>programming languages</category></item><item><title>New Monitor</title><link>https://slott56.github.io/2023_02_18-new_monitor.html</link><description>&lt;p&gt;The (almost) 10-year old 27&amp;quot; Thunderbolt display finally died.&lt;/p&gt;
&lt;p&gt;Well, it didn't really &lt;strong&gt;die&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The Thunderbolt connector had gotten impossibly flaky.
If I looked at it wrong, the monitor glitched or disonnected.&lt;/p&gt;
&lt;p&gt;It was dead enough that I wasn't going to deal with it.&lt;/p&gt;
&lt;p&gt;It involved this morass of adapters …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 18 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-18:/2023_02_18-new_monitor.html</guid><category>Technologies</category><category>hardware</category><category>macosx</category><category>macintosh</category><category>work-life</category><category>writing</category></item><item><title>Jupyter Notebook for Tide Table Analysis</title><link>https://slott56.github.io/2023_02_14-tide_table_analysis.html</link><description>&lt;p&gt;I'm undecided if this goes into the next book.
Maybe this is a teaser...
And yes, this is a &lt;strong&gt;Python to the Rescue&lt;/strong&gt; story.&lt;/p&gt;
&lt;p&gt;I live on a boat. See &lt;a class="reference external" href="https://itmaybeahack.com/TeamRedCruising2/index.html"&gt;Red Ranger Blog&lt;/a&gt; for details.
What's essential is this little complication.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://www.charlottecountyfl.gov/departments/public-works/maintenance-operations/south-gulf-cove-boat-lock.stml"&gt;South Gulf Cove Boat Lock&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The lock keeps …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-14:/2023_02_14-tide_table_analysis.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>jupyter lab</category><category>functional programming</category><category>navigation</category><category>books</category><category>python</category></item><item><title>Python Confusion</title><link>https://slott56.github.io/2023_02_07-python_confusion.html</link><description>&lt;p&gt;For social contact, I'm generally following people on &lt;a class="reference external" href="https://fosstodon.org/home"&gt;https://fosstodon.org/home&lt;/a&gt;.
I'm &lt;a class="reference external" href="https://fosstodon.org/&amp;#64;slott56"&gt;https://fosstodon.org/&amp;#64;slott56&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Or &lt;cite&gt;&amp;#64;slott56&amp;#64;fosstodon.org &amp;lt;https://fosstodon.org/&amp;#64;slott56&amp;gt;&lt;/cite&gt; as they say in the Fediverse.&lt;/p&gt;
&lt;p&gt;But I saw some stuff on Twitter that was disheartening.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I thought Python🐍wasn't strongly typed.🤔
But this code …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Feb 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-07:/2023_02_07-python_confusion.html</guid><category>Technologies</category><category>#python</category><category>learning</category></item><item><title>Book Offers</title><link>https://slott56.github.io/2023_02_03-book_offers.html</link><description>&lt;div class="section" id="packt-publishing"&gt;
&lt;h2&gt;Packt Publishing&lt;/h2&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577"&gt;https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Much newness here.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="apple-books"&gt;
&lt;h2&gt;Apple Books&lt;/h2&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h3&gt;Pivot to Python&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 03 Feb 2023 08:48:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-02-03:/2023_02_03-book_offers.html</guid><category>Technologies</category><category>ebook</category><category>#python</category><category>SQL</category></item><item><title>Behave Tests and Fixtures</title><link>https://slott56.github.io/2023_01_27-behave_tests_and_fixtures.html</link><description>&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Behave&lt;/strong&gt; fixtures totally rock for testing
complex applications.&lt;/p&gt;
&lt;p&gt;I had been doing them wrong. Doing them right is simpler.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;I'm a fan of the Gherkin language for specifying
the behavior of software.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Scenario: Works for Me

Given a configuration
When a request is made
Then the response can …&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 27 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-27:/2023_01_27-behave_tests_and_fixtures.html</guid><category>Python</category><category>books</category><category>software design</category><category>test driven development</category></item><item><title>Link Rot and Editing</title><link>https://slott56.github.io/2023_01_17-link_rot_and_editing.html</link><description>&lt;p&gt;As noted in &lt;a class="reference external" href="https://slott56.github.io/2023_01_10-finished_moving_lessons_learned.html"&gt;Finished Moving: Lessons Learned&lt;/a&gt;
link rot is real.&lt;/p&gt;
&lt;p&gt;Links vanish.&lt;/p&gt;
&lt;p&gt;I've got 23 ancient (2004 to 2006, ancient) posts
with clearly broken links. These are easy to identify
because the service vanished years ago.&lt;/p&gt;
&lt;p&gt;The tricky part is figuring out of there's any
content worth preserving. In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-17:/2023_01_17-link_rot_and_editing.html</guid><category>Technologies</category><category>blogging</category><category>markup</category><category>rst</category></item><item><title>Finished Moving: Lessons Learned</title><link>https://slott56.github.io/2023_01_10-finished_moving_lessons_learned.html</link><description>&lt;p&gt;Moved everything from blogger.com to &amp;quot;here&amp;quot; (&lt;a class="reference external" href="https://slott56.github.io"&gt;https://slott56.github.io&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;What did I learn?&lt;/p&gt;
&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Don't use WYSIWYG editors. Always use plain text markup.&lt;/li&gt;
&lt;li&gt;Think about your categories and tags.&lt;/li&gt;
&lt;li&gt;Links rot.&lt;/li&gt;
&lt;li&gt;Have a data model and tooling to process entries.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;div class="section" id="history"&gt;
&lt;h2&gt;History&lt;/h2&gt;
&lt;p&gt;Back in the early '00's (up to …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jan 2023 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-10:/2023_01_10-finished_moving_lessons_learned.html</guid><category>Technologies</category><category>blogging</category><category>markup</category><category>rst</category></item><item><title>DZone's lack of a Python Zone</title><link>https://slott56.github.io/2023_01_03-dzones_lack_of_a_python_zone.html</link><description>&lt;p&gt;Check out DZone's Coding zone: &lt;a class="reference external" href="https://dzone.com/coding"&gt;https://dzone.com/coding&lt;/a&gt;. Hover over the
&amp;quot;Coding&amp;quot; drop-down menu.&lt;/p&gt;
&lt;p&gt;Notice anything lacking?&lt;/p&gt;
&lt;p&gt;I'll give you a hint: Python.&lt;/p&gt;
&lt;p&gt;They have &amp;quot;Frameworks&amp;quot;, &amp;quot;Java&amp;quot;, &amp;quot;Javascript&amp;quot;, &amp;quot;Languages&amp;quot; and &amp;quot;Tools&amp;quot;.&lt;/p&gt;
&lt;p&gt;The &amp;quot;Languages&amp;quot; seems to be general programming, and the posts include
Java, JavaScript and numerous other languages.&lt;/p&gt;
&lt;p&gt;Let's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jan 2023 10:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2023-01-03:/2023_01_03-dzones_lack_of_a_python_zone.html</guid><category>Technologies</category><category>blogging</category><category>dzone</category></item><item><title>Christmas Book Offers</title><link>https://slott56.github.io/2022_12_20-christmas_book_offers.html</link><description>&lt;div class="section" id="apple-books"&gt;
&lt;h2&gt;Apple Books&lt;/h2&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h3&gt;Pivot to Python&lt;/h3&gt;
&lt;/div&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff like that. The content hasn't
changed. Yet. It's still an introduction to …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-20:/2022_12_20-christmas_book_offers.html</guid><category>Technologies</category><category>ebook</category><category>#python</category><category>SQL</category></item><item><title>On Algorithm Design</title><link>https://slott56.github.io/2022_12_13-on_algorithm_design.html</link><description>&lt;p&gt;Some background: &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-faerie_dusttm.html"&gt;FAERIE DUST™&lt;/a&gt;,
&lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html"&gt;Obstinate Idiocy&lt;/a&gt;,
&lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_expanded.html"&gt;Obstinate Idiocy, Expanded&lt;/a&gt;,
and even &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-permutations_combinations_and_frustrations.html"&gt;Permutations, Combinations and Frustrations&lt;/a&gt;.
I want to set up algorithm design as the diametric opposite of Obstinate
Stupidity. To do that, let's look at Obstinate Stupidity.&lt;/p&gt;
&lt;p&gt;The theme?&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;We did something wrong, and we don't want to fix it …&lt;/strong&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-13:/2022_12_13-on_algorithm_design.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category><category>Design Principles</category><category>asycnio</category><category>faerie dust</category></item><item><title>My algorithm performs badly, do I need asyncio?</title><link>https://slott56.github.io/2022_12_06-my_algorithm_performs_badly_do_i_need_asyncio.html</link><description>&lt;p&gt;Real Question (somewhat abbreviated): &amp;quot;My algorithm performs badly, do I
need asyncio?&amp;quot;&lt;/p&gt;
&lt;p&gt;Short answer: No.&lt;/p&gt;
&lt;p&gt;Long answer: Sigh. No. Do you need a slap upside the head?&lt;/p&gt;
&lt;p&gt;Here's how it plays out:&lt;/p&gt;
&lt;p&gt;Q: &amp;quot;We figured that if we 'parallelize' it, then we can apply multiple
cores, and it will run …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Dec 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-12-06:/2022_12_06-my_algorithm_performs_badly_do_i_need_asyncio.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category><category>analysis</category><category>asyncio</category><category>concurrency</category></item><item><title>Functional Programming and Finite State Automata (FSA)</title><link>https://slott56.github.io/2022_11_29-functional_programming_and_finite_state_automata_fsa.html</link><description>&lt;p&gt;When I talk about functional programming in Python, folks like to look
for place where functional programming isn't appropriate. They latch
onto finite-state automata (FSA) because &amp;quot;state&amp;quot; of an automata doesn't
seem to fit with stateless objects used in functional programming.&lt;/p&gt;
&lt;p&gt;This is a false dichotomy.&lt;/p&gt;
&lt;p&gt;It's emphatically false in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-29:/2022_11_29-functional_programming_and_finite_state_automata_fsa.html</guid><category>Technologies</category><category>functional python programming</category><category>software design</category><category>#python</category></item><item><title>Permutations, Combinations and Frustrations</title><link>https://slott56.github.io/2022_11_22-permutations_combinations_and_frustrations.html</link><description>&lt;p&gt;The issue of permutations and combinations is sometimes funny.&lt;/p&gt;
&lt;p&gt;Not funny weird. But, funny &amp;quot;haha.&amp;quot;&lt;/p&gt;
&lt;p&gt;I received an email with 100's of words and 10 attachments. (10.
Really.) The subject was how best to enumerate 6! permutations of
something or other. With a goal of comparing some optimization algorithm
with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 17:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-permutations_combinations_and_frustrations.html</guid><category>Technologies</category><category>algorithm</category><category>software design</category></item><item><title>Obstinate Idiocy, Expanded</title><link>https://slott56.github.io/2022_11_22-obstinate_idiocy_expanded.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html"&gt;Obstinate Idiocy&lt;/a&gt;
for some background.&lt;/p&gt;
&lt;p&gt;Here are three warning signs I was able to deduce.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No Rational Justification&lt;/li&gt;
&lt;li&gt;Ineffective Tool Choice&lt;/li&gt;
&lt;li&gt;Random Whining&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To which I can now add two more.&lt;/p&gt;
&lt;p&gt;Symptom 4 of Obstinate Idiocy is that &lt;strong&gt;all questions are rhetorical&lt;/strong&gt;
and they often come with pre-argued answers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 17:15:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-obstinate_idiocy_expanded.html</guid><category>Technologies</category><category>software process improvement</category><category>software design</category><category>analysis</category><category>spreadsheet</category></item><item><title>FAERIE DUST™</title><link>https://slott56.github.io/2022_11_22-faerie_dusttm.html</link><description>&lt;p&gt;Here's how to recognize a &lt;strong&gt;Faerie Dust&lt;/strong&gt; request:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;We have identified a problem. It can be with almost anything:
scalability, reliability, auditability, any Quality Measure.&lt;/li&gt;
&lt;li&gt;We're pursuing a specific technology. Typically, something that has
the lowest impact on our architecture.&lt;/li&gt;
&lt;li&gt;We can't address anything other than this specific technology
variation …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 16:39:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-faerie_dusttm.html</guid><category>Technologies</category><category>design</category><category>architecture</category></item><item><title>Testing with PySpark</title><link>https://slott56.github.io/2022_11_22-testing_with_pyspark.html</link><description>&lt;p&gt;This isn't about details of pySpark. This is about the philosophy of
testing when working with a large, complex framework, like pySpark,
pandas, numpy, or whatever.&lt;/p&gt;
&lt;div class="section" id="bluf"&gt;
&lt;h2&gt;BLUF&lt;/h2&gt;
&lt;p&gt;Use data subsets.&lt;/p&gt;
&lt;p&gt;Write unit tests for the functions that process the data.&lt;/p&gt;
&lt;p&gt;Don't test pyspark itself. Test the code you write.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="some-history"&gt;
&lt;h2&gt;Some …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-testing_with_pyspark.html</guid><category>Technologies</category><category>unit testing</category><category>pySpark</category><category>gherkin</category><category>#python</category></item><item><title>Buzz in the general public regarding software bugs</title><link>https://slott56.github.io/2022_11_22-buzz_in_the_general_public_regarding_software_bugs.html</link><description>&lt;p&gt;I got this the other day: &amp;quot;there seems to be a lot of buzz out in the
general public regarding software bugs&amp;quot;.&lt;/p&gt;
&lt;p&gt;Attached to this was an article from The Economist in 2003 plus one
from 2010. To me, this doesn't seem to be a &amp;quot;lot&amp;quot; of buzz. But what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2022 10:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-22:/2022_11_22-buzz_in_the_general_public_regarding_software_bugs.html</guid><category>Technologies</category><category>software process improvement</category><category>API Design</category><category>defensive programming</category></item><item><title>Generators as Stacks of Operations</title><link>https://slott56.github.io/2022_11_15-generators_as_stacks_of_operations.html</link><description>&lt;p&gt;See
&lt;a class="reference external" href="https://towardsdatascience.com/building-generator-pipelines-in-python-8931535792ff"&gt;https://towardsdatascience.com/building-generator-pipelines-in-python-8931535792ff&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm delighted by this article.&lt;/p&gt;
&lt;p&gt;I was shown only the first, horrible, example. I think the idea was to
push back on the idea of complex generators. I fumed.&lt;/p&gt;
&lt;p&gt;Then I read the entire article.&lt;/p&gt;
&lt;p&gt;Now I'm fuming at someone who posted the first example …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Nov 2022 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-15:/2022_11_15-generators_as_stacks_of_operations.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>generator functions</category></item><item><title>Fighting Against Over-Engineering</title><link>https://slott56.github.io/2022_11_08-fighting_against_over_engineering.html</link><description>&lt;p&gt;I've been trying to help some folks who have a &amp;quot;search&amp;quot; algorithm that's
slow.&lt;/p&gt;
&lt;p&gt;They know it's slow -- that's pretty obvious.&lt;/p&gt;
&lt;p&gt;They're -- unfortunately -- &lt;strong&gt;sure&lt;/strong&gt; that asyncio will help. That's not
an obvious conclusion. It involves no useful research. Indeed, that's a
kind of magical thinking. Which leads me to consider …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Nov 2022 16:18:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-11-08:/2022_11_08-fighting_against_over_engineering.html</guid><category>Technologies</category><category>design</category><category>architecture</category><category>methodology</category></item><item><title>Some Functional Programming in Python material</title><link>https://slott56.github.io/2022_10_25-some_functional_programming_in_python_material.html</link><description>&lt;p&gt;This is bonus content for the forthcoming &lt;a class="reference external" href="https://www.packtpub.com/product/functional-python-programming-third-edition/9781803232577"&gt;Functional Python Programming
3rd
edition&lt;/a&gt;
book. It didn't make it into the book because -- well -- it was just too
much of the wrong kind of detail.&lt;/p&gt;
&lt;p&gt;See this &amp;quot;&lt;a class="reference external" href="https://itmaybeahack.com/buildingskills/Tough_TCO.pdf"&gt;Tough
TCO&lt;/a&gt;&amp;quot; document
for some thoughts on Tail-Call Optimization that can be particularly
difficult. This …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Oct 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-10-25:/2022_10_25-some_functional_programming_in_python_material.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>tail call optimization</category></item><item><title>Books! Books! More Channels!</title><link>https://slott56.github.io/2022_09_21-books_books_more_channels.html</link><description>&lt;p&gt;I started with the Apple Books platform because it's an easy default for
me.&lt;/p&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h2&gt;Pivot to Python&lt;/h2&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 21 Sep 2022 15:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-09-21:/2022_09_21-books_books_more_channels.html</guid><category>Technologies</category><category>building skills books</category><category>#python</category><category>SQL</category></item><item><title>Enterprise Python -- Some initial thoughts</title><link>https://slott56.github.io/2022_08_16-enterprise_python_some_initial_thoughts.html</link><description>&lt;p&gt;In the long run, I think there's a small book here. See &lt;a class="reference external" href="https://www.infoworld.com/article/3604473/8-reasons-python-will-rule-the-enterprise-and-8-reasons-it-wont.html%20"&gt;8 reasons
Python will rule the enterprise — and 8 reasons it won’t |
InfoWorld&lt;/a&gt;.
The conclusion, &amp;quot;Teams need to migrate slowly into the future, and
adopting more Python is a way to do that,&amp;quot; seems to be sensible …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-16:/2022_08_16-enterprise_python_some_initial_thoughts.html</guid><category>Technologies</category><category>#python</category><category>enterprise</category></item><item><title>Tragedy Averted</title><link>https://slott56.github.io/2022_08_09-tragedy_averted.html</link><description>&lt;p&gt;I almost made a terrible blunder.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/py-web-tool"&gt;https://github.com/slott56/py-web-tool&lt;/a&gt; for some background. This is
a &amp;quot;Literate Programming&amp;quot; tool. I started fooling around with this kind
of thing back in '05 (maybe even earlier.) This is not the blunder. The
whole idea of literate programming is not very …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-09:/2022_08_09-tragedy_averted.html</guid><category>Technologies</category><category>sphinx</category><category>#python</category><category>literate programming</category><category>docutils</category><category>plantuml</category><category>pyWeb</category></item><item><title>Books! Books! Books!</title><link>https://slott56.github.io/2022_08_02-books_books_books.html</link><description>&lt;p&gt;First, there's&lt;/p&gt;
&lt;div class="section" id="pivot-to-python"&gt;
&lt;h2&gt;Pivot to Python&lt;/h2&gt;
&lt;div class="section" id="a-guide-for-professionals-and-skilled-beginners"&gt;
&lt;h3&gt;A Guide for professionals and skilled beginners&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://books.apple.com/us/book/pivot-to-python/id1586977675"&gt;https://books.apple.com/us/book/pivot-to-python/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've recently updated this to fix some cosmetic problems with title
pages, the table of contents and stuff like that. The content hasn't
changed. Yet. It's still an introduction to …&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Aug 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-08-02:/2022_08_02-books_books_books.html</guid><category>Technologies</category><category>building skills books</category><category>#python</category><category>SQL</category></item><item><title>Bashing the Bash -- The shell is awful and what you can do about it</title><link>https://slott56.github.io/2022_07_26-bashing_the_bash_the_shell_is_awful_and_what_you_can_do_about_it.html</link><description>&lt;p&gt;A presentation I did recently.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/slott56/bashing-the-bash"&gt;https://github.com/slott56/bashing-the-bash&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Folks were polite and didn't have too many questions. I guess they
fundamentally agreed: the shell is awful, we can use it for a few
things.&lt;/p&gt;
&lt;p&gt;Safe Shell Scripts Stay Simple: Set the environment, Start the
application.
---------------------------------------------------------------------------&lt;/p&gt;
&lt;p&gt;The Seven S's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-26:/2022_07_26-bashing_the_bash_the_shell_is_awful_and_what_you_can_do_about_it.html</guid><category>Technologies</category><category>bash</category><category>#python</category><category>shell</category></item><item><title>I've got a great Proof-of-Concept. How do I go forward with it?</title><link>https://slott56.github.io/2022_07_19-ive_got_a_great_proof_of_concept_how_do_i_go_forward_with_it.html</link><description>&lt;p&gt;This is the best part about Python -- you can build something quickly.
And it really works.&lt;/p&gt;
&lt;p&gt;But.&lt;/p&gt;
&lt;p&gt;What are the next steps?&lt;/p&gt;
&lt;p&gt;While there are a *lot* of possibilities, I'm focused on an
&amp;quot;enterprise work group&amp;quot; application that involves a clever web
service/RESTful API built in Flask. Maybe with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-19:/2022_07_19-ive_got_a_great_proof_of_concept_how_do_i_go_forward_with_it.html</guid><category>Technologies</category><category>enterprise</category><category>#python</category></item><item><title>The Enterprise COBOL Conundrum</title><link>https://slott56.github.io/2022_07_12-the_enterprise_cobol_conundrum.html</link><description>&lt;p&gt;Enterprise COBOL is both a liability and an asset. There's tangible
value hidden in the code.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/looking-at-cobol"&gt;https://github.com/slott56/looking-at-cobol&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I've tweaked the presentation a little.&lt;/p&gt;
&lt;p&gt;The essential ingredients in coping with COBOL are these:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use something like &lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;Stingray
Reader&lt;/a&gt; to parse COBOL
DDE's and process the data …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-12:/2022_07_12-the_enterprise_cobol_conundrum.html</guid><category>Technologies</category><category>#python</category><category>COBOL</category></item><item><title>Revised Understanding --&gt; Revised Data Structures --&gt; Revised Type Hints</title><link>https://slott56.github.io/2022_07_05-revised_understanding_revised_data_structures_revised_type_hints.html</link><description>&lt;p&gt;My literate programming tool, pyWeb, has moved to version 3.1 --
supporting modern Python.&lt;/p&gt;
&lt;p&gt;Next up, version 3.2. This is a massive reworking of the data structures
involved. The rework lets me use Jinja2 for templates. There's a lot of
fiddliness to getting the end-of-line spacing right. Jinja has …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Jul 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-07-05:/2022_07_05-revised_understanding_revised_data_structures_revised_type_hints.html</guid><category>Technologies</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>Massive Rework of Data Structures</title><link>https://slott56.github.io/2022_06_28-massive_rework_of_data_structures.html</link><description>&lt;p&gt;As noted in &lt;a class="reference external" href="https://slott56.github.io/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html"&gt;My Shifting Understanding and A Terrible Design
Mistake&lt;/a&gt;,
I had a design that focused on serialization instead of proper modeling
of the objects in question.&lt;/p&gt;
&lt;p&gt;Specifically, I didn't start with a suitable abstract syntax tree (AST)
structure. I started with an algorithmic view of &amp;quot;weaving&amp;quot; and
&amp;quot;tangling …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-28:/2022_06_28-massive_rework_of_data_structures.html</guid><category>Technologies</category><category>Test-Driven Development</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>My Shifting Understanding and A Terrible Design Mistake</title><link>https://slott56.github.io/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html</link><description>&lt;p&gt;I've been fascinated by Literate Programming forever.&lt;/p&gt;
&lt;p&gt;I have two utterly divergent takes on this.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/PyLit-3"&gt;https://github.com/slott56/PyLit-3&lt;/a&gt; for one.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/py-web-tool"&gt;https://github.com/slott56/py-web-tool&lt;/a&gt; for another.&lt;/p&gt;
&lt;p&gt;And yet, I've still done a really bad design job. Before we get to the
design, a little bit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-21:/2022_06_21-my_shifting_understanding_and_a_terrible_design_mistake.html</guid><category>Technologies</category><category>#python</category><category>literate programming</category><category>jinja</category><category>pyWeb</category><category>PyLit3</category></item><item><title>A LaTeX Thing I Did -- And A ToDo:</title><link>https://slott56.github.io/2022_06_14-a_latex_thing_i_did_and_a_todo.html</link><description>&lt;p&gt;When writing about code in LaTeX, the essential strategy is to use an
environment to format the code so it stands out from surrounding text.
There are a few of these environments available as LaTeX add-on
packages. The three popular ones are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;verbatim&lt;/strong&gt;. I think this is built-in to LaTeX …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jun 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-06-14:/2022_06_14-a_latex_thing_i_did_and_a_todo.html</guid><category>Technologies</category><category>literate programming</category><category>packtpub</category><category>#python</category></item><item><title>Code so bad it causes me physical pain</title><link>https://slott56.github.io/2022_05_23-code_so_bad_it_causes_me_physical_pain.html</link><description>&lt;p&gt;Here's the code.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def get_categories(file):
    &amp;quot;&amp;quot;&amp;quot;
    Get categories.
    &amp;quot;&amp;quot;&amp;quot;
    verify_file(file)

    categories = set()

    with open(file, &amp;quot;r&amp;quot;) as cat_file:
        while line := cat_file.readline().rstrip():
            categories.add(line)

    return categories
&lt;/pre&gt;
&lt;p&gt;To me this was terrible. truly and deeply horrifying. Let me count the
ways.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The docstring repeats the name of the function …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 23 May 2022 20:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-05-23:/2022_05_23-code_so_bad_it_causes_me_physical_pain.html</guid><category>Technologies</category><category>data structure</category><category>#python</category></item><item><title>Python is a Bad Programming Language. Wait, wut?</title><link>https://slott56.github.io/2022_05_23-python_is_a_bad_programming_language_wait_wut.html</link><description>&lt;p&gt;It may help to read &lt;a class="reference external" href="https://medium.com/nerd-for-tech/python-is-a-bad-programming-language-2ab73b0bda5"&gt;Python is a Bad Programming
Language&lt;/a&gt;,
but it's not very useful.&lt;/p&gt;
&lt;p&gt;I shouldn't be tempted by click-bait headlines. But.  I am drawn in by
bad articles on Python.&lt;/p&gt;
&lt;p&gt;In particular, any post claiming Python is deficient causes me to look
for the concrete PEP's that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 23 May 2022 20:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-05-23:/2022_05_23-python_is_a_bad_programming_language_wait_wut.html</guid><category>Technologies</category><category>#python</category><category>click-bait</category></item><item><title>Pelican and Static Web Content</title><link>https://slott56.github.io/2022_04_12-pelican_and_static_web_content.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2022_03_01-static_site_blues.html"&gt;Static Site
Blues&lt;/a&gt;
I was wringing my hands over ways to convert a &lt;strong&gt;ton&lt;/strong&gt; of content from a
two different proprietary tools (the very old iWeb, and the merely old
Sandvox) into something I could work with.&lt;/p&gt;
&lt;p&gt;After a bit of fiddling around, I'm delighted with
&lt;a class="reference external" href="https://blog.getpelican.com"&gt;Pelican&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Apr 2022 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-04-12:/2022_04_12-pelican_and_static_web_content.html</guid><category>Technologies</category><category>#python</category><category>blogging</category><category>markdown</category><category>static site generator</category></item><item><title>Static Site Blues</title><link>https://slott56.github.io/2022_03_01-static_site_blues.html</link><description>&lt;p&gt;I have a very large, static site with 10+ years of stuff about my boat.
Most of it is pretty
boring. &lt;a class="reference external" href="http://www.itmaybeahack.com/TeamRedCruising/"&gt;http://www.itmaybeahack.com/TeamRedCruising/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I started with iWeb. It was very -- well -- 2000-ish look and feel. Too
many pastels and lines and borders.&lt;/p&gt;
&lt;p&gt;In 2012, I switched to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Mar 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-03-01:/2022_03_01-static_site_blues.html</guid><category>Technologies</category><category>RST</category><category>#python</category><category>blogging</category><category>markdown</category><category>static site generator</category></item><item><title>LaTeX Mysteries and an algorithmicx thing I learned.</title><link>https://slott56.github.io/2022_02_15-latex_mysteries_and_an_algorithmicx_thing_i_learned.html</link><description>&lt;p&gt;I've been an on-and-off user of LaTeX since the very, very beginning.
Back in the dark days when the one laser printer that could render the
images was in a closely-guarded secret location to prevent everyone from
using it and exhausting the (expensive) toner cartridges.&lt;/p&gt;
&lt;p&gt;A consequence of this is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Feb 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-15:/2022_02_15-latex_mysteries_and_an_algorithmicx_thing_i_learned.html</guid><category>Technologies</category><category>writing</category><category>latex</category><category>markup</category></item><item><title>Desktop Notifications and EPIC DESIGN FAIL</title><link>https://slott56.github.io/2022_02_08-desktop_notifications_and_epic_design_fail.html</link><description>&lt;p&gt;I was asked to review code that -- well -- was evil.&lt;/p&gt;
&lt;p&gt;Not like &amp;quot;shabby&amp;quot; or &amp;quot;non-pythonic&amp;quot;. Nothing so simple as that.&lt;/p&gt;
&lt;p&gt;We'll get to the evil in a moment. First, we have to suffer two horrible
indignities.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Busy Waiting&lt;/li&gt;
&lt;li&gt;Undefined Post-Conditions.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We'll beat all three issues to death separately, starting with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Feb 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-08:/2022_02_08-desktop_notifications_and_epic_design_fail.html</guid><category>Technologies</category><category>notification</category><category>workflow</category><category>#python</category></item><item><title>No one wins at Code Golf vs. This is more noise than signal</title><link>https://slott56.github.io/2022_02_03-no_one_wins_at_code_golf_vs_this_is_more_noise_than_signal.html</link><description>&lt;p&gt;Looking at code. Came to a 20-line block of code that did exactly this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sorted(Path.cwd().glob(&amp;quot;some_pattern[1-9]*.*&amp;quot;), reverse=True)
&lt;/pre&gt;
&lt;p&gt;Twenty lines. Seriously.&lt;/p&gt;
&lt;p&gt;To be fair, 8 of the 20 lines were comments. 3 were blank. Which leaves
9 lines of code to perform the task of a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Feb 2022 20:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-02-03:/2022_02_03-no_one_wins_at_code_golf_vs_this_is_more_noise_than_signal.html</guid><category>Technologies</category><category>code golf</category><category>#python</category></item><item><title>How to Test a Random Number Generator</title><link>https://slott56.github.io/2022_01_18-how_to_test_a_random_number_generator.html</link><description>&lt;p&gt;Nowadays, we don't have the same compelling reasons to test a random
number generator. The intervening decades have seen a lot of fruitful
research. Good algorithms.&lt;/p&gt;
&lt;p&gt;Looking back to my 1968 self, however, I still feel a need to work out
the solution to an old problem. See &lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jan 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-18:/2022_01_18-how_to_test_a_random_number_generator.html</guid><category>Technologies</category><category>#python</category><category>random numbers</category><category>multiprocessing</category></item><item><title>The Old Days -- ca. 2000 -- Empirical Tests of Random Numbers (Python and Chi-Square Testing)</title><link>https://slott56.github.io/2022_01_11-the_old_days_ca_2000_empirical_tests_of_random_numbers_python_and_chi_square_testing.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old Days -- ca. 1974 Random Numbers Before
Python&lt;/a&gt;
for some background.&lt;/p&gt;
&lt;p&gt;We'll get to Python after reminiscing about the olden days. I want to
provide some back story on why
&lt;a class="reference external" href="https://docs.sympy.org/latest/index.html"&gt;sympy&lt;/a&gt; has had a huge
impact on ordinary hacks like myself.&lt;/p&gt;
&lt;p&gt;What we're talking about is how we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jan 2022 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-11:/2022_01_11-the_old_days_ca_2000_empirical_tests_of_random_numbers_python_and_chi_square_testing.html</guid><category>Technologies</category><category>#python</category><category>fortran</category><category>random numbers</category></item><item><title>The Old Days -- ca. 1974 -- Random Numbers before Python</title><link>https://slott56.github.io/2022_01_04-the_old_days_ca_1974_random_numbers_before_python.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html"&gt;The Old Old Days -- ca.
1968&lt;/a&gt;&amp;quot;
for my first exposure to an actual computer. Nothing about Python there.
But. It's what motivated me to get started learning to code -- I was
fascinated by games that involved randomization. Games with cards or
dice.&lt;/p&gt;
&lt;p&gt;After filling in a little background, I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jan 2022 20:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2022-01-04:/2022_01_04-the_old_days_ca_1974_random_numbers_before_python.html</guid><category>Technologies</category><category>#python</category><category>fortran</category><category>random numbers</category></item><item><title>The Old Old Days -- ca. 1968</title><link>https://slott56.github.io/2021_12_28-the_old_old_days_ca_1968.html</link><description>&lt;p&gt;As the olds do, I reminisce sometimes. Not often. Let me rewind the
memory tapes a back to 1967 or '68.&lt;/p&gt;
&lt;p&gt;(What a dumb metaphor for folks who have never used serial storage.)&lt;/p&gt;
&lt;p&gt;This isn't -- directly -- about Python. But it may help folks who live
at the edge of programming …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Dec 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-28:/2021_12_28-the_old_old_days_ca_1968.html</guid><category>Technologies</category><category>history</category><category>learning</category><category>simulation</category><category>random numbers</category></item><item><title>Some Harsh Criticism for Python Object-Oriented Programming 4th ed.</title><link>https://slott56.github.io/2021_12_26-some_harsh_criticism_for_python_object_oriented_programming_4th_ed.html</link><description>&lt;p&gt;Here are some links to
reviews: &lt;a class="reference external" href="https://www.amazon.com/product-reviews/1801077266/ref=cm_cr_unknown?ie=UTF8&amp;amp;filterByStar=one_star&amp;amp;reviewerType=all_reviews&amp;amp;pageNumber=1#reviews-filter-bar"&gt;https://www.amazon.com/product-reviews/1801077266/ref=cm_cr_unknown?ie=UTF8&amp;amp;filterByStar=one_star&amp;amp;reviewerType=all_reviews&amp;amp;pageNumber=1#reviews-filter-bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.amazon.ca/product-reviews/1801077266/ref=acr_dp_hist_3?ie=UTF8&amp;amp;filterByStar=three_star&amp;amp;reviewerType=all_reviews#reviews-filter-bar"&gt;https://www.amazon.ca/product-reviews/1801077266/ref=acr_dp_hist_3?ie=UTF8&amp;amp;filterByStar=three_star&amp;amp;reviewerType=all_reviews#reviews-filter-bar&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;These are reviews of &lt;a class="reference external" href="https://subscription.packtpub.com/book/programming/9781801077262/2"&gt;Python Object-Oriented Programming: Build robust
and maintainable object-oriented …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 26 Dec 2021 11:11:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-26:/2021_12_26-some_harsh_criticism_for_python_object_oriented_programming_4th_ed.html</guid><category>Technologies</category><category>python</category><category>writing</category></item><item><title>Processing Apple Numbers Files</title><link>https://slott56.github.io/2021_12_01-processing_apple_numbers_files.html</link><description>&lt;p&gt;Apple's freebie tools -- Pages, Numbers, Keynote, Garage Band, etc. --
are wonderful things. I really like Numbers. I'm tolerant of Pages. I've
used Pages to write books and publish them to the Apple Bookstore.
(Shameless Plug: &lt;a class="reference external" href="https://books.apple.com/us/book/id1586977675"&gt;Pivot to
Python&lt;/a&gt;.)&lt;/p&gt;
&lt;p&gt;These tools have a significant problem. Protobuf.&lt;/p&gt;
&lt;div class="section" id="some-history"&gt;
&lt;h2&gt;Some History&lt;/h2&gt;
&lt;p&gt;Once upon a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 01 Dec 2021 07:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-12-01:/2021_12_01-processing_apple_numbers_files.html</guid><category>Technologies</category><category>open source</category><category>#python</category><category>workbook</category><category>spreadsheet</category><category>jsonschema</category></item><item><title>Reading Spreadsheets with Stingray Reader and Type Hinting</title><link>https://slott56.github.io/2021_11_16-reading_spreadsheets_with_stingray_reader_and_type_hinting.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2021_08_24-spreadsheets_cobol_and_schema_driven_file_processing.html"&gt;Spreadsheets, COBOL, and schema-driven file
processing&lt;/a&gt;,
etc. for some history on this project.&lt;/p&gt;
&lt;p&gt;Also, see
&lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;Stingray-Reader&lt;/a&gt; for the
current state of this effort.&lt;/p&gt;
&lt;p&gt;(This started almost 20 years ago, I've been refining and revising a
lot.)&lt;/p&gt;
&lt;div class="section" id="big-lesson-up-front"&gt;
&lt;h2&gt;Big Lesson Up Front&lt;/h2&gt;
&lt;p&gt;Python is very purely driven by the idea that …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Nov 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-11-16:/2021_11_16-reading_spreadsheets_with_stingray_reader_and_type_hinting.html</guid><category>Technologies</category><category>#python</category><category>protocols</category><category>annotations</category><category>type hints</category></item><item><title>Welcome to Python: Some hints for ways to explain how truly bad the language is</title><link>https://slott56.github.io/2021_11_02-welcome_to_python_some_hints_for_ways_to_explain_how_truly_bad_the_language_is.html</link><description>&lt;p&gt;As an author with many books on Python, I'm captivated by people's hot
takes on why Python is so epically bad. Really Bad. Uselessly Bad.
Profoundly Broken. etc.&lt;/p&gt;
&lt;p&gt;I'll provide some hints on topics that get repeated a lot. If you really
need to write a blog post about how …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Nov 2021 14:55:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-11-02:/2021_11_02-welcome_to_python_some_hints_for_ways_to_explain_how_truly_bad_the_language_is.html</guid><category>Technologies</category><category>#python</category><category>PEP</category></item><item><title>Legacy Software is a Sticky Mess</title><link>https://slott56.github.io/2021_10_12-legacy_software_is_a_sticky_mess.html</link><description>&lt;p&gt;I'll get to legacy software. First, however, some backstory on
observability.&lt;/p&gt;
&lt;p&gt;Sailors will sometimes create &amp;quot;Float Plans&amp;quot;. Like aircraft flight plans,
they have an itinerary to make it slightly easier to find us when
something goes wrong. Unlike airspace, which is tightly controlled by
the FAA, the seas are more-or-less …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Oct 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-10-12:/2021_10_12-legacy_software_is_a_sticky_mess.html</guid><category>Technologies</category><category>navtools</category><category>navigation</category><category>object-oriented design</category><category>#python</category></item><item><title>New to Python -- How to manage architecture choices</title><link>https://slott56.github.io/2021_10_05-new_to_python_how_to_manage_architecture_choices.html</link><description>&lt;p&gt;This is a problem folks new to Python have, and sometimes can't
articulate that they have it.&lt;/p&gt;
&lt;p&gt;They don't know which package is the &amp;quot;right&amp;quot; one to use. Tox vs. Nox.
Click vs. Argparse vs. getopts? What's the &amp;quot;best&amp;quot; choice?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Response 1&lt;/strong&gt;. The whole Python ecosystem is chaos and the …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Oct 2021 10:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-10-05:/2021_10_05-new_to_python_how_to_manage_architecture_choices.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>community</category><category>management</category></item><item><title>Pivot to Python -- 150 pages of things you might need to know</title><link>https://slott56.github.io/2021_09_28-pivot_to_python_150_pages_of_things_you_might_need_to_know.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://books.apple.com/us/book/id1586977675"&gt;http://books.apple.com/us/book/id1586977675&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Python Programming language is a deep topic. This book provides
focused guidance on installing Python, creating virtual enivironments
and using Jupyter Lab to build foundational skills in using Python. The
book covers many built-in data types. There are two small case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Sep 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-28:/2021_09_28-pivot_to_python_150_pages_of_things_you_might_need_to_know.html</guid><category>Technologies</category><category>#python</category><category>building skills</category></item><item><title>Python and the "Syntactic Whitespace Problem"</title><link>https://slott56.github.io/2021_09_27-python_and_the_syntactic_whitespace_problem.html</link><description>&lt;p&gt;Check out this list of questions on Stack Overflow:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stackoverflow.com/search?q=%5Bpython%5D+whitespace+syntax"&gt;http://stackoverflow.com/search?q=%5Bpython%5D+whitespace+syntax&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;About 10% of these are really just complaints about Python's syntax.
Almost every Stack Overflow question on Python's use of syntactic
whitespace is really just a complaint.&lt;/p&gt;
&lt;p&gt;Here's today's example: &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/3994765/python-without-whitespace-requirements"&gt;Python without …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Sep 2021 16:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-27:/2021_09_27-python_and_the_syntactic_whitespace_problem.html</guid><category>Technologies</category><category>#python</category></item><item><title>Found an ancient CGI script -- part IV -- OpenAPI specification</title><link>https://slott56.github.io/2021_09_21-found_an_ancient_cgi_script_part_iv_openapi_specification.html</link><description>&lt;p&gt;See the previous sections, starting with the first on finding an
&lt;a class="reference external" href="https://slott56.github.io/2021_08_31-we_have_an_ancient_python2_cgi_script_what_do_we_do.html"&gt;ancient CGI
script&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We don't &lt;strong&gt;need&lt;/strong&gt; an OpenAPI specification. But, it is so helpful to
formalize the behavior of a web site that it's hard for me to imagine
working without it.&lt;/p&gt;
&lt;p&gt;In this case, the legacy script only …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Sep 2021 11:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-21:/2021_09_21-found_an_ancient_cgi_script_part_iv_openapi_specification.html</guid><category>Technologies</category><category>Apache</category><category>wsgi</category><category>CGI</category><category>#python</category></item><item><title>Found an ancient cgi script -- part III -- refactoring</title><link>https://slott56.github.io/2021_09_17-found_an_ancient_cgi_script_part_iii_refactoring.html</link><description>&lt;p&gt;Be sure to see the &lt;a class="reference external" href="https://slott56.github.io/2021_08_31-we_have_an_ancient_python2_cgi_script_what_do_we_do.html"&gt;original script&lt;/a&gt;
and the test cases in the prior posts.&lt;/p&gt;
&lt;p&gt;We need to understand a little about what a web request is. This can
help us do the refactoring.&lt;/p&gt;
&lt;p&gt;It can help to think of a web server a function that maps a request to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 17 Sep 2021 14:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-17:/2021_09_17-found_an_ancient_cgi_script_part_iii_refactoring.html</guid><category>Technologies</category><category>Apache</category><category>wsgi</category><category>CGI</category><category>#python</category></item><item><title>Found an ancient cgi script -- part II -- testing</title><link>https://slott56.github.io/2021_09_07-found_an_ancient_cgi_script_part_ii_testing.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2021_08_31-we_have_an_ancient_python2_cgi_script_what_do_we_do.html"&gt;We have an ancient Python2 CGI script -- what do we
do?&lt;/a&gt;&amp;quot;
The previous post in this series provides an overview of the process of
getting rid of legacy code.&lt;/p&gt;
&lt;p&gt;Here's some code. I know it's painfully long; the point is to provide a
super-specific, very concrete example of what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Sep 2021 11:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-09-07:/2021_09_07-found_an_ancient_cgi_script_part_ii_testing.html</guid><category>Technologies</category><category>Apache</category><category>wsgi</category><category>CGI</category><category>#python</category></item><item><title>We have an ancient Python2 CGI script -- what do we do?</title><link>https://slott56.github.io/2021_08_31-we_have_an_ancient_python2_cgi_script_what_do_we_do.html</link><description>&lt;p&gt;This was a shocking email: the people have a Python 2 CGI script. They
needed advice on Python 2 to 3 migration.&lt;/p&gt;
&lt;p&gt;Here's my advice on a Python 2 CGI script: &lt;strong&gt;Throw It Away&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;A great deal of the CGI processing is part of the wsgi module, as well
as …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Aug 2021 11:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-08-31:/2021_08_31-we_have_an_ancient_python2_cgi_script_what_do_we_do.html</guid><category>Technologies</category><category>Apache</category><category>wsgi</category><category>CGI</category><category>#python</category></item><item><title>Spreadsheets, COBOL, and Schema-Driven File Processing</title><link>https://slott56.github.io/2021_08_24-spreadsheets_cobol_and_schema_driven_file_processing.html</link><description>&lt;p&gt;I need to rewrite &lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;Stingray
Reader&lt;/a&gt;. This project
handles a certain amount of file processing using a schema to assure the
Logical Layout is understood.  It handles several common Physical
Formats:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;CSV files where the format is extended by the various dialects
options.&lt;/li&gt;
&lt;li&gt;COBOL files in ASCII or EBCDIC.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Aug 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-08-24:/2021_08_24-spreadsheets_cobol_and_schema_driven_file_processing.html</guid><category>Technologies</category><category>#python</category><category>stingray reader</category><category>EBCDIC</category><category>COBOL</category></item><item><title>I Have Code That Didn't Work. What Now?</title><link>https://slott56.github.io/2021_08_17-i_have_code_that_didnt_work_what_now.html</link><description>&lt;p&gt;I don't get many of these &amp;quot;I have code that doesn't work&amp;quot; requests. But
I do see them once in a great while.&lt;/p&gt;
&lt;p&gt;It might be something like the following two-part explanation with a
following question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have this code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
from base64 import b64encode
def some_func(message):
    msg = b64encode(message …&lt;/pre&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Aug 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-08-17:/2021_08_17-i_have_code_that_didnt_work_what_now.html</guid><category>Technologies</category><category>#python</category><category>debugging</category></item><item><title>Why Python Is Weird For C++ Developers -- Some Thoughts</title><link>https://slott56.github.io/2021_08_10-why_python_is_weird_for_c_developers_some_thoughts.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://betterprogramming.pub/9-reasons-why-python-is-weird-for-c-developers-b37e650471d6"&gt;9 Reasons Why Python Is Weird For C++
Developers&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm often bothered by inter-language comparisons. Mostly because
programming languages -- except in the most abstract way -- aren't
really very comparable. At the Turing Machine level the finite state
automata are comparable, but that reductionist view (intentionally)
eliminates all the expressive …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Aug 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-08-10:/2021_08_10-why_python_is_weird_for_c_developers_some_thoughts.html</guid><category>Technologies</category><category>#python</category><category>C++</category><category>Programming Languages</category></item><item><title>Writing Interactive Compute-Intensive Programs for Web Browsers</title><link>https://slott56.github.io/2021_08_03-writing_interactive_compute_intensive_programs_for_web_browsers.html</link><description>&lt;p&gt;Fascinating. The reference to the classic Mac OS with non-preemptive
multi-tasking is quite cool. The concept fits nicely with Python's
async/await coroutines that need to collaborate with a periodic OS
request to permit interaction with streams of events from another
source (i.e., a foreground window.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;a class="reference external" href="https://link.medium.com/5KY6wClGAhb"&gt;Writing Interactive Compute-Intensive …&lt;/a&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Aug 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-08-03:/2021_08_03-writing_interactive_compute_intensive_programs_for_web_browsers.html</guid><category>Technologies</category><category>parallel processing</category></item><item><title>SOLID Coding in Python</title><link>https://slott56.github.io/2021_07_27-solid_coding_in_python.html</link><description>&lt;p&gt;Check this out.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://link.medium.com/rFDC7sSxBhb"&gt;SOLID Coding in Python&lt;/a&gt; by
Mattia Cinelli.&lt;/p&gt;
&lt;p&gt;Download Medium on the &lt;a class="reference external" href="https://itunes.apple.com/app/medium-everyones-stories/id828256236?pt=698524&amp;amp;mt=8&amp;amp;ct=app_email_share"&gt;App
Store&lt;/a&gt;
or &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.medium.reader&amp;amp;referrer=utm_source%3Dios_app%26utm_medium%3Demail%26utm_campaign%3Dios_app_email_share"&gt;Play
Store&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was fun to read. It has some nice examples.&lt;/p&gt;
&lt;p&gt;I submit that the order of presentation (S, O, L, I, D) is misleading.
The acronym is fun, but awkward.&lt;/p&gt;
&lt;p&gt;My …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Jul 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-07-27:/2021_07_27-solid_coding_in_python.html</guid><category>Architecture &amp; Design</category><category>Design Principles</category><category>OO design</category><category>SOLID</category></item><item><title>How can people find inspiration at work? #CreateMeaning</title><link>https://slott56.github.io/2021_07_20-how_can_people_find_inspiration_at_work_createmeaning.html</link><description>&lt;p&gt;What do I know about &amp;quot;inspiration&amp;quot; at work? I'm not sure I know much,
but I think I may have some advice that could be useful.&lt;/p&gt;
&lt;p&gt;I was in the high-tech write-software-every-day workplace since about
1976 or so. (The first two years were part-time while in college.) I use
past …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jul 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-07-20:/2021_07_20-how_can_people_find_inspiration_at_work_createmeaning.html</guid><category>Technologies</category><category>career</category><category>#CreateMeaning</category><category>work-life</category></item><item><title>What Books Should I Read? In What Order?</title><link>https://slott56.github.io/2021_07_13-what_books_should_i_read_in_what_order.html</link><description>&lt;p&gt;A fascinating question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;... I'm baffled by the amount of books you've published over the
course of time. Currently Reddit suggests that I use Building
Skills in Python under Beginner's section, but it looks quite
outdated. So back and forth, I found your Building Skills in OO on
GitHub Page and …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Jul 2021 09:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-07-13:/2021_07_13-what_books_should_i_read_in_what_order.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category><category>building skills books</category></item><item><title>A Python Roadmap</title><link>https://slott56.github.io/2021_07_06-a_python_roadmap.html</link><description>&lt;p&gt;An interesting tweet. The  roadmap has three sections. I'm not sure this
is actually complete, or even grouped correctly. It is a very good list
of topics.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/prasoonpratham/status/1408435475426254849?s=11"&gt;https://twitter.com/prasoonpratham/status/1408435475426254849?s=11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Here's a complete roadmap of topics to master Python.&amp;quot;&lt;/p&gt;
&lt;p&gt;The thread, however, seems no longer …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Jul 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-07-06:/2021_07_06-a_python_roadmap.html</guid><category>Technologies</category><category>object-oriented programming</category><category>functional python programming</category><category>#python</category></item><item><title>Letter to Mom -- What Is This "Computer Programming" Thing?</title><link>https://slott56.github.io/2021_07_04-letter_to_mom_what_is_this_computer_programming_thing.html</link><description>&lt;p&gt;Happy birthday, mom. Glad to see you're still doing well, avoiding the
complications of COVID-19.&lt;/p&gt;
&lt;p&gt;You asked what it was I did for a living. Emphasis on the past tense,
now that we're both fully retired old people.&lt;/p&gt;
&lt;p&gt;I have to confess that it's not easy describing high-tech work. There's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 04 Jul 2021 14:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-07-04:/2021_07_04-letter_to_mom_what_is_this_computer_programming_thing.html</guid><category>Technologies</category><category>architecture</category><category>C4model</category><category>Programming Languages</category><category>API Design</category><category>os</category></item><item><title>Architectural Boundaries: Which Package/Module/Class Owns That Responsibility?</title><link>https://slott56.github.io/2021_06_22-architectural_boundaries_which_packagemoduleclass_owns_that_responsibility.html</link><description>&lt;p&gt;The SOLID design principles beat the design boundary issue to death.
Here are the principles in my preferred order.
(See &lt;a class="reference external" href="https://www.linkedin.com/learning/learning-s-o-l-i-d-programming-principles"&gt;https://www.linkedin.com/learning/learning-s-o-l-i-d-programming-principles&lt;/a&gt;)&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Interface Segregation&lt;/strong&gt; -- minimize the boundaries. Do this first.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Liskov Substitution&lt;/strong&gt; -- keep the boundaries consistent. Do this
for hierarchies.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Open/Closed&lt;/strong&gt; -- keep the boundaries stable …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Jun 2021 09:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-06-22:/2021_06_22-architectural_boundaries_which_packagemoduleclass_owns_that_responsibility.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>object-oriented design</category><category>Design Principles</category><category>SOLID</category></item><item><title>SQL linting — this sounds cool</title><link>https://slott56.github.io/2021_06_17-sql_linting_this_sounds_cool.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.pythonpodcast.com/sqlfluff-sql-linter-episode-318/"&gt;https://www.pythonpodcast.com/sqlfluff-sql-linter-episode-318/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Jun 2021 21:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-06-17:/2021_06_17-sql_linting_this_sounds_cool.html</guid><category>Technologies</category><category>#python</category><category>SQL</category></item><item><title>Real Math (symbolic math, like mathematicians do) and a spreadsheet-like feedback loop</title><link>https://slott56.github.io/2021_06_01-real_math_symbolic_math_like_mathematicians_do_and_a_spreadsheet_like_feedback_loop.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/replacing-a-spreadsheet/"&gt;https://slott56.github.io/replacing-a-spreadsheet/&lt;/a&gt;. This document is
really exciting (to me).&lt;/p&gt;
&lt;p&gt;This is still shaky -- I'm still learning -- but it's a very cool
combination of Python components
&lt;a class="reference external" href="https://docs.sympy.org/latest/index.html"&gt;sympy&lt;/a&gt; and &lt;a class="reference external" href="https://jupyterlab.readthedocs.io/en/stable/"&gt;Jupyter
Lab&lt;/a&gt;. As a bonus,
&lt;a class="reference external" href="https://jupyterbook.org/intro.html"&gt;Jupyter{Book}&lt;/a&gt; appeals to me as
a writer. There's an aspect of literate programing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Jun 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-06-01:/2021_06_01-real_math_symbolic_math_like_mathematicians_do_and_a_spreadsheet_like_feedback_loop.html</guid><category>Technologies</category><category>#python</category><category>jupyter lab</category><category>spreadsheet</category><category>sympy</category></item><item><title>Python's Protocol Annotation vs. Duck Typing</title><link>https://slott56.github.io/2021_05_25-pythons_protocol_annotation_vs_duck_typing.html</link><description>&lt;p&gt;Let's talk about profound confusion.&lt;/p&gt;
&lt;p&gt;I got an email with a subject of this, &amp;quot;Python's Protocol Reduces
Reliance on Duck Typing&amp;quot;. The resulting conversation led to this nugget:
&amp;quot;... my current project could use protocols in Python, and thus I didn't
need to rely on duck typing and instead could use …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 May 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-05-25:/2021_05_25-pythons_protocol_annotation_vs_duck_typing.html</guid><category>Technologies</category><category>#python</category><category>duck typing</category><category>protocols</category><category>annotations</category><category>type hints</category></item><item><title>OpenMarine and Signal-K</title><link>https://slott56.github.io/2021_04_20-openmarine_and_signal_k.html</link><description>&lt;p&gt;I heard about these less than a week ago.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://openmarine.net/openplotter"&gt;https://openmarine.net/openplotter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/openplotter/pypilot"&gt;https://github.com/openplotter/pypilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://signalk.org/installation.html"&gt;https://signalk.org/installation.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is very interesting. Very interesting.&lt;/p&gt;
&lt;p&gt;I have a partially complete IoT anchor alarm.&lt;/p&gt;
&lt;p&gt;The idea of leveraging the boat's other devices through a Signal-K
interface is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Apr 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-04-20:/2021_04_20-openmarine_and_signal_k.html</guid><category>Technologies</category><category>arduino</category><category>#python</category><category>CircuitPlayground</category><category>boat</category><category>IoT</category><category>RaspberryPi</category></item><item><title>A 5-point framework for Python performance management</title><link>https://slott56.github.io/2021_04_06-a_5_point_framework_for_python_performance_management.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://medium.com/capital-one-tech/a-5-point-framework-for-python-performance-management-5af2be5739d9"&gt;A 5-Point Framework For Python Performance
Management&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It seems straight-forward to me. Have goals. Measure your ability to
meet them.&lt;/p&gt;
&lt;p&gt;I don't see too many teams doing this, though.&lt;/p&gt;
&lt;p&gt;I could be wrong, but, I think performance is left to arguments and
complaints, not solid engineering.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Apr 2021 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-04-06:/2021_04_06-a_5_point_framework_for_python_performance_management.html</guid><category>Technologies</category><category>performance</category><category>#python</category></item><item><title>Recommended Books</title><link>https://slott56.github.io/2021_03_19-recommended_books.html</link><description>&lt;p&gt;I get asked about good books for beginners. Here's an example:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;What Python books do you recommend for novices so they can learn
from beginner to advanced?&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;For me, this is nearly impossible to answer.&lt;/p&gt;
&lt;p&gt;&amp;quot;Beginner&amp;quot; is often undefined. I have to turn this around and ask what
you already …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 19 Mar 2021 07:33:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-03-19:/2021_03_19-recommended_books.html</guid><category>Technologies</category><category>#python</category><category>tutorial</category></item><item><title>The "The reader won't know what that means" Comment</title><link>https://slott56.github.io/2021_02_16-the_the_reader_wont_know_what_that_means_comment.html</link><description>&lt;p&gt;I have to admit, it's very difficult to respond to this comment. I have
to fight down the urge to say things like &amp;quot;The Reader is not an idiot,&amp;quot;
or &amp;quot;At some point, we have to assume they've seen a computer before.&amp;quot;&lt;/p&gt;
&lt;p&gt;AFAIK there's little or no useful data data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Feb 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-02-16:/2021_02_16-the_the_reader_wont_know_what_that_means_comment.html</guid><category>Technologies</category><category>writing</category></item><item><title>The Awkwardness of Fundamental Definitions</title><link>https://slott56.github.io/2021_02_13-the_awkwardness_of_fundamental_definitions.html</link><description>&lt;p&gt;A pragmatic description of a language (like Python) from axiomatic -- or
really axiom-like -- foundations is exasperatingly hard. I don't think I
have any answers, but I sure do have a lot of challenges. I think
there's a path that involves a lot of &amp;quot;don't look down -- just edge
along the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 13 Feb 2021 13:45:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-02-13:/2021_02_13-the_awkwardness_of_fundamental_definitions.html</guid><category>Technologies</category><category>writing</category></item><item><title>Diagrams and UML notation</title><link>https://slott56.github.io/2021_01_05-diagrams_and_uml_notation.html</link><description>&lt;p&gt;When I started in this business I was given a flowcharting template.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://americanhistory.si.edu/collections/object-groups/flowcharting-templates"&gt;https://americanhistory.si.edu/collections/object-groups/flowcharting-templates&lt;/a&gt;.
I'm pretty sure I had one of
these: &lt;a class="reference external" href="https://americanhistory.si.edu/collections/search/object/nmah_690078"&gt;https://americanhistory.si.edu/collections/search/object/nmah_690078&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Since then, things have changed a little.&lt;/p&gt;
&lt;p&gt;I fondly recall using the Rational Rose …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Jan 2021 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2021-01-05:/2021_01_05-diagrams_and_uml_notation.html</guid><category>Technologies</category><category>plantuml</category><category>UML</category></item><item><title>How to avoid writing a clickbait headline. (Click for details.)</title><link>https://slott56.github.io/2020_12_24-how_to_avoid_writing_a_clickbait_headline_click_for_details.html</link><description>&lt;p&gt;It's hard to write shameless promotional material.&lt;/p&gt;
&lt;p&gt;I already wrote the books, isn't that bold enough?&lt;/p&gt;
&lt;p&gt;It isn't, though.&lt;/p&gt;
&lt;blockquote&gt;
Packt’s Head of Product, Oli Huggins, said: “We believe in helping
to serve and support the global developer community. By selling
our eBooks and Videos for $5, we hope to …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Dec 2020 08:33:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-12-24:/2020_12_24-how_to_avoid_writing_a_clickbait_headline_click_for_details.html</guid><category>Books</category><category>#python</category><category>modern python cookbook</category><category>@PacktAuthors</category><category>packtpub</category></item><item><title>Inelegant Python</title><link>https://slott56.github.io/2020_12_16-inelegant_python.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.geeksforgeeks.org/find-the-smallest-positive-number-missing-from-an-unsorted-array/"&gt;https://www.geeksforgeeks.org/find-the-smallest-positive-number-missing-from-an-unsorted-array/&lt;/a&gt;
This seems to be a popular coding interview problem.&lt;/p&gt;
&lt;p&gt;The Python code shown on the site seems almost maliciously misleading.&lt;/p&gt;
&lt;p&gt;The full problem is this:&lt;/p&gt;
&lt;blockquote&gt;
You are given an unsorted array with both positive and negative
elements. You have to find the smallest positive …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Dec 2020 08:54:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-12-16:/2020_12_16-inelegant_python.html</guid><category>Technologies</category><category>complexity</category><category>#python</category></item><item><title>Mind the Gap -- mypy's slight lag behind Python 3.9</title><link>https://slott56.github.io/2020_11_10-mind_the_gap_mypys_slight_lag_behind_python_39.html</link><description>&lt;p&gt;Working on a new book. Fun stuff. It's going to cover Python 3.9.&lt;/p&gt;
&lt;p&gt;I'm adding the type hints material. And that means &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0585/#forward-compatibility"&gt;PEP
585&lt;/a&gt;.
Which means type hints for generics can use the generic types. We can
use list[int] instead of List[int] and avoid from typing import …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Nov 2020 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-11-10:/2020_11_10-mind_the_gap_mypys_slight_lag_behind_python_39.html</guid><category>Technologies</category><category>mypy</category><category>PEP</category><category>#python</category><category>type hints</category></item><item><title>"Python doesn’t do tail recursion" -- wait, what?</title><link>https://slott56.github.io/2020_11_07-python_doesnt_do_tail_recursion_wait_what.html</link><description>&lt;p&gt;Yes, that's what the email said.&lt;/p&gt;
&lt;p&gt;I was -- well -- shocked. Too shocked to be polite. Content Warning:
much snark follows.&lt;/p&gt;
&lt;div class="section" id="bluf-tail-recursion-is-not-tail-recursion-optimization"&gt;
&lt;h2&gt;BLUF: Tail Recursion is not Tail Recursion Optimization.&lt;/h2&gt;
&lt;p&gt;Eventually, it became clear they were worried about tail recursion
&lt;strong&gt;optimization&lt;/strong&gt;. Maybe I'm too focused on words, but I think words
matter …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 07 Nov 2020 15:36:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-11-07:/2020_11_07-python_doesnt_do_tail_recursion_wait_what.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category></item><item><title>Python 3.9 Rearranging typing and collections.abc</title><link>https://slott56.github.io/2020_10_27-python_39_rearranging_typing_and_collectionsabc.html</link><description>&lt;p&gt;This is glorious.&lt;/p&gt;
&lt;p&gt;There was this sort of awkward shoving match between &lt;tt class="docutils literal"&gt;typing&lt;/tt&gt; and
&lt;tt class="docutils literal"&gt;collections.abc&lt;/tt&gt;. Both had generic type definitions and it was --
often -- unclear how to use them.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0585"&gt;PEP 585&lt;/a&gt;. Now they are
all unified into a much happier family.&lt;/p&gt;
&lt;p&gt;And. We wind up writing things like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Oct 2020 08:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-10-27:/2020_10_27-python_39_rearranging_typing_and_collectionsabc.html</guid><category>Technologies</category><category>#python</category><category>type hints</category></item><item><title>Type Hints to extend built-in structures</title><link>https://slott56.github.io/2020_10_20-type_hints_to_extend_built_in_structures.html</link><description>&lt;p&gt;Working on revisions to a book. Fun stuff.
See &lt;a class="reference external" href="https://www.packtpub.com/product/python-3-object-oriented-programming/9781849511261"&gt;https://www.packtpub.com/product/python-3-object-oriented-programming/9781849511261&lt;/a&gt;
I may have the privilege of working with Dusty.&lt;/p&gt;
&lt;p&gt;I've been using &lt;strong&gt;mypy&lt;/strong&gt; for all my 2nd edition changes, but not in
--strict mode.&lt;/p&gt;
&lt;p&gt;I've decided to ramp things up, and switch to strict …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Oct 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-10-20:/2020_10_20-type_hints_to_extend_built_in_structures.html</guid><category>Technologies</category><category>#python</category><category>type hints</category></item><item><title>Sources of Confusion: a "mea culpa" [Updated]</title><link>https://slott56.github.io/2020_10_14-sources_of_confusion_a_mea_culpa_updated.html</link><description>&lt;p&gt;I am not patient. I have been dismissed as one who does not suffer
fools gladly.&lt;/p&gt;
&lt;p&gt;This is a bad attitude, and I absolutely suffer from it. No denials
here. I'm aware it limits my ability to help the deeply confused.&lt;/p&gt;
&lt;p&gt;My personal failing is not being patient enough to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Oct 2020 08:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-10-14:/2020_10_14-sources_of_confusion_a_mea_culpa_updated.html</guid><category>Technologies</category><category>#python</category></item><item><title>The Python Podcast __init__</title><link>https://slott56.github.io/2020_10_06-the_python_podcast___init__.html</link><description>&lt;p&gt;Check out
&lt;a class="reference external" href="https://www.pythonpodcast.com/steven-lott-learn-to-code-episode-283/"&gt;https://www.pythonpodcast.com/steven-lott-learn-to-code-episode-283/&lt;/a&gt;.
This was a fun conversation on Python and learning.&lt;/p&gt;
&lt;p&gt;We didn't talk about my books in detail. Instead, we talked about
learning and what it takes to get closer to mastery.&lt;/p&gt;
&lt;p&gt;It's a thing I worry about. I suspect other writers worry about …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Oct 2020 20:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-10-06:/2020_10_06-the_python_podcast___init__.html</guid><category>Books</category><category>#python</category><category>podcast</category><category>packtpub</category><category>mastering object-oriented python</category></item><item><title>One of the Modern Python Cookbook Recipes</title><link>https://slott56.github.io/2020_09_15-one_of_the_modern_python_cookbook_recipes.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://opendatascience.com/removing-items-from-a-set-remove-pop-and-difference/"&gt;https://opendatascience.com/removing-items-from-a-set-remove-pop-and-difference/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This puts the focus on a few important set operations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Sep 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-09-15:/2020_09_15-one_of_the_modern_python_cookbook_recipes.html</guid><category>Books</category><category>@PacktAuthors</category><category>#python</category><category>modern python cookbook</category></item><item><title>Open Source Support Ideas</title><link>https://slott56.github.io/2020_09_09-open_source_support_ideas.html</link><description>&lt;p&gt;&amp;quot;... [I] am thinking of building an in house conda forge, or buying a
solution, or paying someone to set something up.&amp;quot;&lt;/p&gt;
&lt;p&gt;The build v. Buy decision. This is always hard. Really hard.&lt;/p&gt;
&lt;p&gt;We used to ask &amp;quot;What's your business? Is it building software or making
widgets?&amp;quot;&lt;/p&gt;
&lt;p&gt;And (for some) the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 09 Sep 2020 19:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-09-09:/2020_09_09-open_source_support_ideas.html</guid><category>Technologies</category><category>open source</category><category>conda</category></item><item><title>A Comprehensive Introduction to Python</title><link>https://slott56.github.io/2020_09_01-a_comprehensive_introduction_to_python.html</link><description>&lt;p&gt;Python 101, by Michael Driscoll. 545 pages, available from leanpub.com
in a variety of formats. Available soon in hardcover.&lt;/p&gt;
&lt;p&gt;The modern Python programming language is a large topic. A book on a
programming language has to be seen as a collection of several large
topics.&lt;/p&gt;
&lt;p&gt;At its core, a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Sep 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-09-01:/2020_09_01-a_comprehensive_introduction_to_python.html</guid><category>Books</category><category>#python</category></item><item><title>Another shiny new MacBook pro</title><link>https://slott56.github.io/2020_08_27-another_shiny_new_macbook_pro.html</link><description>&lt;p&gt;See {filename}/blog/2014/03/2014_03_20-shiny_new_macbook_pro.rst&lt;/p&gt;
&lt;p&gt;At the time (2014), the 8Gb machine was way more than adequate for all
my needs as a writer.&lt;/p&gt;
&lt;p&gt;Enter bloat.&lt;/p&gt;
&lt;p&gt;Mac OS Catalina has essentially filled this machine to the breaking
point. Six short years is the lifespan. Things (generally) work, but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Aug 2020 07:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-08-27:/2020_08_27-another_shiny_new_macbook_pro.html</guid><category>Technologies</category><category>arduino</category><category>macosx</category><category>CircuitPlayground</category><category>macintosh</category><category>hardware</category></item><item><title>Modern Python Cookbook 2e -- Out with the old</title><link>https://slott56.github.io/2020_08_11-modern_python_cookbook_2e_out_with_the_old.html</link><description>&lt;p&gt;Most of the things that got cut were (to me) obviously obsolete. For
example, replacing collections.namedtuple with typing.NamedTuple seemed
like a clear example of obsolete. A reviewer really thought I should
skip all NamedTuple and use frozen data classes.&lt;/p&gt;
&lt;p&gt;More important are some things that I learned about …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Aug 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-08-11:/2020_08_11-modern_python_cookbook_2e_out_with_the_old.html</guid><category>Books</category><category>@PacktAuthors</category><category>#python</category><category>modern python cookbook</category></item><item><title>Why Python is not the programming language of the future -- a response</title><link>https://slott56.github.io/2020_08_01-why_python_is_not_the_programming_language_of_the_future_a_response.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://towardsdatascience.com/why-python-is-not-the-programming-language-of-the-future-30ddc5339b66"&gt;https://towardsdatascience.com/why-python-is-not-the-programming-language-of-the-future-30ddc5339b66&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is an interesting article with some important points. And. It has
some points that I disagree with.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Speed. This is a narrow perspective. numpy and pandas are fast, dask
is fast. A great many Python ecosystem packages are fast. This
complaint seems to be …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 01 Aug 2020 08:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-08-01:/2020_08_01-why_python_is_not_the_programming_language_of_the_future_a_response.html</guid><category>Technologies</category><category>#python</category></item><item><title>Modern Python Cookbook Journey</title><link>https://slott56.github.io/2020_07_30-modern_python_cookbook_journey.html</link><description>&lt;p&gt;For the author, a book is a journey.&lt;/p&gt;
&lt;p&gt;Writing something new, the author describes a path the reader can
follow to get from -- well -- anywhere the reader might be to the
author's suggested destination. Not everyone makes the whole trip.
And not everyone arrives at the hoped-for destination.&lt;/p&gt;
&lt;p&gt;Second editions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 Jul 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-07-30:/2020_07_30-modern_python_cookbook_journey.html</guid><category>Books</category><category>#python</category><category>modern python cookbook</category><category>@PacktAuthors</category><category>marketing promotion</category></item><item><title>Modern Python Cookbook 2nd ed -- Advance Copies -- DM me</title><link>https://slott56.github.io/2020_07_28-modern_python_cookbook_2nd_ed_advance_copies_dm_me.html</link><description>&lt;p&gt;This is your &amp;quot;why wait&amp;quot; invitation.&lt;/p&gt;
&lt;p&gt;Advanced copies will be available.&lt;/p&gt;
&lt;p&gt;IF.&lt;/p&gt;
&lt;p&gt;And this is a big &amp;quot;if&amp;quot;.&lt;/p&gt;
&lt;p&gt;You have to write a blurb.&lt;/p&gt;
&lt;p&gt;I'll be putting you in contact with Packt marketing folks who will
get you your advanced copy so you can write blurbs and reviews and --
well …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Jul 2020 08:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-07-28:/2020_07_28-modern_python_cookbook_2nd_ed_advance_copies_dm_me.html</guid><category>Technologies</category><category>#python</category><category>modern python cookbook</category></item><item><title>Over-Solving or Solving Problems You Don't Have</title><link>https://slott56.github.io/2020_07_25-over_solving_or_solving_problems_you_dont_have.html</link><description>&lt;p&gt;Sometimes we call them &amp;quot;Belt and Braces&amp;quot; solutions. As a former
suspenders person who switched to belts, the idea of wearing both is a
little like over-engineering. In the unlikely event of catastrophic
failure of one system, your pants can still remain properly hoist.
There's a weird, but defensible reason …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 25 Jul 2020 08:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-07-25:/2020_07_25-over_solving_or_solving_problems_you_dont_have.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>haversine</category><category>complexity</category><category>object-oriented design</category><category>Design Principles</category><category>SOLID</category><category>navigation</category></item><item><title>Overcoming Incuriosity -- Sailing Over The Horizon</title><link>https://slott56.github.io/2020_06_02-overcoming_incuriosity_sailing_over_the_horizon.html</link><description>&lt;p&gt;I'm in regular contact with a few folks who seem remarkably incurious.
Seem.
Perhaps they're curious about something other than software. I don't
know.
But I do know they're remarkably incurious about software. And are
trying to write Python applications.
I know some people don't sail out of sight of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Jun 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-06-02:/2020_06_02-overcoming_incuriosity_sailing_over_the_horizon.html</guid><category>Technologies</category><category>#python</category><category>architecture</category></item><item><title>Modern Python Cookbook 2nd ed -- big milestone</title><link>https://slott56.github.io/2020_05_26-modern_python_cookbook_2nd_ed_big_milestone.html</link><description>&lt;p&gt;Whew.
Chapter rewrites finished.
Technical reviews in process.
Things are going pretty well. Look for Packt to publish this in the next
few months. Details will be posted.
Now. For LinkedIn Learning course recordings.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 May 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-05-26:/2020_05_26-modern_python_cookbook_2nd_ed_big_milestone.html</guid><category>Technologies</category><category>#python</category></item><item><title>The COBOL-to-SomeBetterLang Translator</title><link>https://slott56.github.io/2020_04_14-the_cobol_to_somebetterlang_translator.html</link><description>&lt;p&gt;Here's a popular idea.&lt;/p&gt;
&lt;blockquote&gt;
... a COBOL-to-X translator, where X is a more-modern programming
language ...&lt;/blockquote&gt;
&lt;p&gt;This is a noble aspiration.&lt;/p&gt;
&lt;p&gt;In principle -- down deep -- all programming can be reduced to an
idealized Turing Machine.&lt;/p&gt;
&lt;p&gt;This means that we *should* be able to locate all the state changes
in a given spaghetti-bowl …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Apr 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-04-14:/2020_04_14-the_cobol_to_somebetterlang_translator.html</guid><category>Technologies</category><category>#python</category><category>COBOL</category></item><item><title>Why Isn't COBOL Dead? Or Why Didn't It Evolve?</title><link>https://slott56.github.io/2020_04_07-why_isnt_cobol_dead_or_why_didnt_it_evolve.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Here's part of the question:&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
Why didn't COBOL evolve more successfully?&lt;/blockquote&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
FORTRAN, OTOH, has survived precisely because it--and more
importantly, related tools, esp compilers--has evolved to
solve/overcome many (certainly not all!) of the sorts of pain-points
you describe, while retaining the significant performance edge that
(IMHO, ICBW) prevents challengers …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Apr 2020 21:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-04-07:/2020_04_07-why_isnt_cobol_dead_or_why_didnt_it_evolve.html</guid><category>Technologies</category><category>COBOL</category><category>#python</category><category>fortran</category></item><item><title>The COBOL Problem</title><link>https://slott56.github.io/2020_04_07-the_cobol_problem.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/audreywatters/status/1246609613203505152"&gt;https://twitter.com/audreywatters/status/1246609613203505152&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The tweet has since been deleted. Here's the old text&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Pet peeve: technologists who sneer at the longevity of programming languages like COBOL. Ain't nobody made it to the moon on react.js. And nobody is willing to replace critical aging software with your …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Apr 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-04-07:/2020_04_07-the_cobol_problem.html</guid><category>Technologies</category><category>COBOL</category><category>#python</category><category>data migration</category></item><item><title>70% of Modern Python Cookbook 2e...</title><link>https://slott56.github.io/2020_03_17-70_of_modern_python_cookbook_2e.html</link><description>&lt;p&gt;At this point, we're closing in on 9/13 (70%) of the way through the
2nd edition rewrite.&lt;/p&gt;
&lt;p&gt;Important changes.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Type Hints&lt;/li&gt;
&lt;li&gt;Type Hints&lt;/li&gt;
&lt;li&gt;Type Hints&lt;/li&gt;
&lt;/ol&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;First.&lt;/dt&gt;
&lt;dd&gt;Every single class, method, or function has to be changed to
add hints. Every. Single. One. This is kind of huge. The book …&lt;/dd&gt;&lt;/dl&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Mar 2020 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-03-17:/2020_03_17-70_of_modern_python_cookbook_2e.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category><category>modern python cookbook</category></item><item><title>Stingray Reader Pervasively Bad Decision</title><link>https://slott56.github.io/2020_02_25-stingray_reader_pervasively_bad_decision.html</link><description>&lt;p&gt;I made some bad decisions when I wrote this a few years
ago: &lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;https://github.com/slott56/Stingray-Reader&lt;/a&gt;. Really bad. And.
Recently, I've burdened myself with conflicting goals. Ugh.&lt;/p&gt;
&lt;p&gt;I need to upgrade to Python 3.8, and add type hints. This exposed
somes badness.&lt;/p&gt;
&lt;p&gt;See {filename/blog/2020/01 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Feb 2020 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-02-25:/2020_02_25-stingray_reader_pervasively_bad_decision.html</guid><category>Technologies</category><category>stingray reader</category><category>Design Principles</category><category>object-oriented design</category><category>type hints</category></item><item><title>Interesting Data Restructuring Problem</title><link>https://slott56.github.io/2020_02_18-interesting_data_restructuring_problem.html</link><description>&lt;p&gt;This seemed like an interesting problem. I hope this isn't someone's
take-home homework or an interview question. It seemed organic enough
when I found out about it.&lt;/p&gt;
&lt;p&gt;Given a document like this...&lt;/p&gt;
&lt;pre class="literal-block"&gt;
doc = {
    &amp;quot;key&amp;quot;: &amp;quot;the key&amp;quot;,
    &amp;quot;tag1&amp;quot;: [&amp;quot;list&amp;quot;, &amp;quot;of&amp;quot;, &amp;quot;values&amp;quot;],
    &amp;quot;tag2&amp;quot;: [&amp;quot;another&amp;quot;, &amp;quot;list&amp;quot;, &amp;quot;here&amp;quot;],
    &amp;quot;tag3&amp;quot;: [&amp;quot;lorem&amp;quot;, &amp;quot;ipsum&amp;quot;, &amp;quot;dolor&amp;quot;],
}
&lt;/pre&gt;
&lt;p&gt;We want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Feb 2020 20:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-02-18:/2020_02_18-interesting_data_restructuring_problem.html</guid><category>Technologies</category><category>algorithm</category><category>#python</category></item><item><title>Dictionary clear() as a code smell</title><link>https://slott56.github.io/2020_02_06-dictionary_clear_as_a_code_smell.html</link><description>&lt;p&gt;Using the clear() method of a dict isn't *wrong*. But. The reasons
have to be investigated. I got a question about this code not working
&amp;quot;properly.&amp;quot; (&amp;quot;Properly&amp;quot;? Seems too vague to be useful.)&lt;/p&gt;
&lt;p&gt;Here's a summary of the example.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
final_list = []
temp_dict = {}
for obj in some_source:
    cool_function(obj, temp_dict)
    final_list.append …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Feb 2020 16:50:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-02-06:/2020_02_06-dictionary_clear_as_a_code_smell.html</guid><category>Technologies</category><category>#python</category><category>data structure</category><category>algorithm</category></item><item><title>Stingray Reader Rewrite</title><link>https://slott56.github.io/2020_01_31-stingray_reader_rewrite.html</link><description>&lt;p&gt;See {filename}/blog/2020/01/2020_01_26-stingrayreader_upgrade.rst&lt;/p&gt;
&lt;p&gt;This drifted into some serious rethinking of bad design decisions.
(If someone else did this, I'd call it weak, and suggest
improvements. It was me. It was bad. I'm a bad programmer and I feel
bad about it.)&lt;/p&gt;
&lt;p&gt;An an example, there's this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 31 Jan 2020 10:39:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-01-31:/2020_01_31-stingray_reader_rewrite.html</guid><category>Technologies</category><category>stingray reader</category><category>#python</category><category>type hints</category></item><item><title>StingrayReader Upgrade</title><link>https://slott56.github.io/2020_01_26-stingrayreader_upgrade.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See &lt;a class="reference external" href="https://github.com/slott56/Stingray-Reader"&gt;https://github.com/slott56/Stingray-Reader&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;It's time to add type hints.&lt;/div&gt;
&lt;div class="line"&gt;And.&lt;/div&gt;
&lt;div class="line"&gt;Learn some interesting lessons.&lt;/div&gt;
&lt;div class="line"&gt;Here's the interesting problem:&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
some_data = {name: source[name] for name in the_names}
the_object = SomeClass(**some_data)
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;While valid, this concerns &lt;strong&gt;mypy&lt;/strong&gt;.&lt;/div&gt;
&lt;div class="line"&gt;The point here is to have a flexible source of data, source. Perhaps …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 26 Jan 2020 12:27:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-01-26:/2020_01_26-stingrayreader_upgrade.html</guid><category>Technologies</category><category>stingray reader</category><category>#python</category><category>type hints</category></item><item><title>The Wrong Abstraction Problem</title><link>https://slott56.github.io/2020_01_14-the_wrong_abstraction_problem.html</link><description>&lt;p&gt;For the last week I've been working with some legacy code that reveals
a kind of problem I hadn't really seen before.&lt;/p&gt;
&lt;p&gt;I'm calling it the &lt;strong&gt;Wrong Abstraction&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I want to contrast this with the &lt;strong&gt;Leaky Abstraction&lt;/strong&gt;, where
implementation details are revealed and raise havoc.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Wrong Abstraction&lt;/strong&gt; problem seems …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jan 2020 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-01-14:/2020_01_14-the_wrong_abstraction_problem.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Patreon Book Idea</title><link>https://slott56.github.io/2020_01_07-patreon_book_idea.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="https://www.patreon.com/posts/32521611"&gt;Additional, Related
Content&lt;/a&gt;&amp;quot;. It's one of the
posts here: &lt;a class="reference external" href="https://www.patreon.com/slott"&gt;https://www.patreon.com/slott&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I think there's space for a &lt;em&gt;Building Skills in Functional Python&lt;/em&gt;
title next to the &lt;em&gt;Building Skills in OO Design&lt;/em&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jan 2020 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2020-01-07:/2020_01_07-patreon_book_idea.html</guid><category>Technologies</category><category>functional python programming</category><category>#python</category></item><item><title>Christmas Ornament</title><link>https://slott56.github.io/2019_12_31-christmas_ornament.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://github.com/slott56/cpx-xmas-ornament"&gt;https://github.com/slott56/cpx-xmas-ornament&lt;/a&gt;
You'll need a Circuit Playground Express
&lt;a class="reference external" href="https://www.adafruit.com/product/3333"&gt;https://www.adafruit.com/product/3333&lt;/a&gt;
Install the code. Enjoy the noise and blinky lights.
The MML translation isn't as complete as you might like. The upper/lower
case for the various commands isn't handled quite as cleanly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Dec 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-12-31:/2019_12_31-christmas_ornament.html</guid><category>Technologies</category><category>#python</category><category>CircuitPlayground</category></item><item><title>Walrusing Around</title><link>https://slott56.github.io/2019_12_26-walrusing_around.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This is -- well -- it is what it is. I don't have to like it.&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt;&amp;gt; t_s = (8063599, 0)
&amp;gt;&amp;gt;&amp;gt; fields = [(t_s := divmod(t_s[0], b))[1] for b in (60, 60, 24, 7)]
&amp;gt;&amp;gt;&amp;gt; list(reversed(fields + [t_s[0]]))
[13, 2, 7, 53, 19]
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;It works and shows how the assignment operator works …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Dec 2019 12:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-12-26:/2019_12_26-walrusing_around.html</guid><category>Technologies</category><category>walrus</category><category>#python</category></item><item><title>Plannng a Linked-in Learning Course (and using the := walrus operator)</title><link>https://slott56.github.io/2019_12_17-plannng_a_linked_in_learning_course_and_using_the_walrus_operator.html</link><description>&lt;p&gt;I've recorded two courses for LinkedIn
Learning &lt;a class="reference external" href="https://www.linkedin.com/learning/me"&gt;https://www.linkedin.com/learning/me&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Let me emphasize that their production values take a lot of work.
While I think I'm a pretty good live presenter, a few days in the
recording booth with a producer, reveals all my weaknesses. so. um …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Dec 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-12-17:/2019_12_17-plannng_a_linked_in_learning_course_and_using_the_walrus_operator.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>Data Science</category></item><item><title>Functional programming design pattern: Nested Iterators == Flattening</title><link>https://slott56.github.io/2019_12_15-functional_programming_design_pattern_nested_iterators_flattening.html</link><description>&lt;p&gt;Here's a functional programming design pattern I uncovered. This may
not be news to you, but it was a surprise to me. It cropped up when
looking at something that needs parallelization to reduced the
elapsed run time.&lt;/p&gt;
&lt;p&gt;Consider this data collection process.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for h in some_high_level_collection(arg1):
    for l …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 15 Dec 2019 10:29:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-12-15:/2019_12_15-functional_programming_design_pattern_nested_iterators_flattening.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category></item><item><title>Creating Palindromes -- if possible -- from a string of letters.</title><link>https://slott56.github.io/2019_12_04-creating_palindromes_if_possible_from_a_string_of_letters.html</link><description>&lt;p&gt;This can be an interesting exercise. I think it is something that can
help people learn to code well. I found this in the LinkedIn Python
community:  &lt;a class="reference external" href="https://www.linkedin.com/groups/25827/"&gt;https://www.linkedin.com/groups/25827/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The Palindrome Problem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Make a function that makes a palindrome out of the letters in a
string …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 04 Dec 2019 19:07:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-12-04:/2019_12_04-creating_palindromes_if_possible_from_a_string_of_letters.html</guid><category>Technologies</category><category>#python</category></item><item><title>Refactoring</title><link>https://slott56.github.io/2019_11_26-refactoring.html</link><description>&lt;p&gt;Follow my Patreon: &lt;a class="reference external" href="https://www.patreon.com/bePatron?u=26087626"&gt;Become a
Patron!&lt;/a&gt;
I'll try to focus on my Building Skills in OO Design book there. I'm
thinking of adding some more code examples. Is that a good idea?
Maybe that should be the higher-level Patreon benefit?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Nov 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-11-26:/2019_11_26-refactoring.html</guid><category>Technologies</category><category>building skills books</category><category>patreon</category></item><item><title>Python 3.8 features</title><link>https://slott56.github.io/2019_11_19-python_38_features.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avatar" src="https://pbs.twimg.com/profile_images/952818577719091200/rBCQPkA9_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Real Python(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/realpython?s=11"&gt;&amp;#64;realpython&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/realpython/status/1191720517910376449?s=11"&gt;11/5/19, 6:14AM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;📺🐍 Cool New Features in Python 3.8 &lt;a class="reference external" href="https://t.co/1sv8l2Vgyr"&gt;realpython.com/courses/cool-n…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://realpython.com/courses/cool-new-features-python-38/"&gt;Cool New Features in Python
3.8&lt;/a&gt; lists
some of the things that could become part of The Modern Python
Cookbook 2e. I'm working with Packt on a plan …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Nov 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-11-19:/2019_11_19-python_38_features.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Python 2 Remediation</title><link>https://slott56.github.io/2019_11_12-python_2_remediation.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://medium.com/capital-one-tech/python-2-remediation-and-problems-at-sea-a58e805d6468"&gt;https://medium.com/capital-one-tech/python-2-remediation-and-problems-at-sea-a58e805d6468&lt;/a&gt;
We're about out of time for this effort.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Nov 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-11-12:/2019_11_12-python_2_remediation.html</guid><category>Technologies</category><category>#python</category></item><item><title>Building Skills in OO Design</title><link>https://slott56.github.io/2019_11_03-building_skills_in_oo_design.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.patreon.com/posts/30995708"&gt;https://www.patreon.com/posts/30995708&lt;/a&gt;
I've (finally) gotten the book content upgraded to Python 3.7.
I've also deleted all the previous versions of the book. I had been
keeping them on my web server because -- well -- because I don't know
why. They go back to at least …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 03 Nov 2019 17:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-11-03:/2019_11_03-building_skills_in_oo_design.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category><category>OO design</category></item><item><title>State Change and NoSQL Databases</title><link>https://slott56.github.io/2019_10_22-state_change_and_nosql_databases.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Let's take another look at F. L. Stevens spreadsheet with agencies and
agents. It's -- of course -- an unholy mess. Why? It's difficult to
handle state change and deduplication.&lt;/div&gt;
&lt;div class="line"&gt;Let's look at state changes.&lt;/div&gt;
&lt;div class="line"&gt;The author needs URL's and names and a list of genres the agent is
interested in. This …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Oct 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-10-22:/2019_10_22-state_change_and_nosql_databases.html</guid><category>Technologies</category><category>#python</category><category>noSQL</category></item><item><title>Apple's Numbers and the All-in-One CSV export</title><link>https://slott56.github.io/2019_10_15-apples_numbers_and_the_all_in_one_csv_export.html</link><description>&lt;p&gt;Author F. L. Stevens has a hellishly complex (and irregular)
spreadsheet with agents, agencies, and query status. (This is how
fiction gets marketed: querying agents.) The spreadsheet has become
unmanageably complex, with multiple pages. Each page has multiple
tables. Buried in this are three &amp;quot;interesting&amp;quot; tables with agent query
information …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Oct 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-10-15:/2019_10_15-apples_numbers_and_the_all_in_one_csv_export.html</guid><category>Technologies</category><category>#python</category><category>spreadsheet</category></item><item><title>Spreadsheet Regrets</title><link>https://slott56.github.io/2019_10_08-spreadsheet_regrets.html</link><description>&lt;p&gt;I can't emphasize this enough.&lt;/p&gt;
&lt;p&gt;Some people, when confronted with a problem, think&lt;/p&gt;
&lt;p&gt;“I know, I'll use a spreadsheet.”   Now they have two problems.&lt;/p&gt;
&lt;p&gt;(This was originally about regular expressions. And AWK.
See &lt;a class="reference external" href="http://regex.info/blog/2006-09-15/247"&gt;http://regex.info/blog/2006-09-15/247&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Fiction writer F. L. Stevens got a list of literary agents …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Oct 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-10-08:/2019_10_08-spreadsheet_regrets.html</guid><category>Technologies</category><category>#python</category><category>data conversion</category><category>beautiful soup</category><category>spreadsheet</category></item><item><title>Packt Data Unlocked Promotion</title><link>https://slott56.github.io/2019_09_10-packt_data_unlocked_promotion.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://bit.ly/DataUnlockedTwitter"&gt;http://bit.ly/DataUnlockedTwitter&lt;/a&gt;
You can't go wrong with these kinds of discounts.
#DataUnlocked&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="your-blog-was-excellent-your-blog-is-very-much-to"&gt;
&lt;h2&gt;Your blog was excellent. Your blog is very much to...&lt;/h2&gt;
&lt;p&gt;Navinika&amp;lt;&lt;a class="reference external" href="mailto:noreply&amp;#64;blogger.com"&gt;noreply&amp;#64;blogger.com&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;2019-11-22 12:20:27.350000-05:00&lt;/p&gt;
&lt;p&gt;Your blog was excellent. Your blog is very much to useful for me, Thanks
for …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Sep 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-09-10:/2019_09_10-packt_data_unlocked_promotion.html</guid><category>Technologies</category><category>packtpub</category></item><item><title>Finally Planning the Rewrite of Building Skills in Object-Oriented Design</title><link>https://slott56.github.io/2019_09_03-finally_planning_the_rewrite_of_building_skills_in_object_oriented_design.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.itmaybeahack.com/buildingskills/oodesign.html#book-oodesign"&gt;Building Skills in Object-Oriented
Design&lt;/a&gt;
for the old content, which has a number of features that hold up well
over time.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;A graduated series of exercises to build up large, complete
applications is important.&lt;/li&gt;
&lt;li&gt;It covers a lot of skills essential to building real applications --
unit testing, integration, code …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Sep 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-09-03:/2019_09_03-finally_planning_the_rewrite_of_building_skills_in_object_oriented_design.html</guid><category>Technologies</category><category>building skills books</category></item><item><title>Coping with Windows via AWS</title><link>https://slott56.github.io/2019_08_13-coping_with_windows_via_aws.html</link><description>&lt;p&gt;For a training class, I needed to address The Windows Problem™. TWP is
the my summary of all the non-standard features of Windows in its
various inconsistent incarnations.&lt;/p&gt;
&lt;p&gt;Any training class that involves &amp;quot;install Python&amp;quot; inevitably involves at
least one Windows user who can't get their PATH set correctly. It's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Aug 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-08-13:/2019_08_13-coping_with_windows_via_aws.html</guid><category>Technologies</category><category>windows</category><category>#python</category><category>conda</category></item><item><title>Mastering Object-Oriented Python 2nd ed</title><link>https://slott56.github.io/2019_07_05-mastering_object_oriented_python_2nd_ed.html</link><description>&lt;p&gt;The
book &lt;a class="reference external" href="https://www.packtpub.com/programming/mastering-object-oriented-python-second-edition"&gt;https://www.packtpub.com/programming/mastering-object-oriented-python-second-edition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some new chapters.&lt;/p&gt;
&lt;p&gt;Type hints almost everywhere.&lt;/p&gt;
&lt;p&gt;The
examples &lt;a class="reference external" href="https://github.com/PacktPublishing/Mastering-Object-Oriented-Python-Second-Edition"&gt;https://github.com/PacktPublishing/Mastering-Object-Oriented-Python-Second-Edition&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you want to write a review, DM me on twitter
&lt;a class="reference external" href="https://twitter.com/s_lott"&gt;&amp;#64;s_lott&lt;/a&gt; I can add you to the list
for freebies in exchange for a review.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 05 Jul 2019 17:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-07-05:/2019_07_05-mastering_object_oriented_python_2nd_ed.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Python Podcasts</title><link>https://slott56.github.io/2019_07_01-python_podcasts.html</link><description>&lt;p&gt;The list: &lt;a class="reference external" href="https://dbader.org/blog/ultimate-list-of-python-podcasts"&gt;https://dbader.org/blog/ultimate-list-of-python-podcasts&lt;/a&gt;.
For the last 3 years, I've been doing a weekly webinar on Python -- at
work. I've done about a 100 of them, and they've had a pretty good
response.
Each one was live and I didn't try to record them. There's enough going …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 01 Jul 2019 18:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-07-01:/2019_07_01-python_podcasts.html</guid><category>Technologies</category><category>#python</category><category>podcast</category></item><item><title>HumbleBundle -- Functional Python Programming -- Through July 1</title><link>https://slott56.github.io/2019_06_20-humblebundle_functional_python_programming_through_july_1.html</link><description>&lt;p&gt;See this &lt;a class="reference external" href="https://www.humblebundle.com/"&gt;https://www.humblebundle.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This is amazing to me.&lt;/p&gt;
&lt;blockquote&gt;
Humble Bundle sells games, ebooks, software, and other digital
content. Our mission is to support charity while providing awesome
content to customers at great prices. We launched in 2010 with a
single two-week Humble Indie Bundle, but we have …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Jun 2019 13:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-06-20:/2019_06_20-humblebundle_functional_python_programming_through_july_1.html</guid><category>Technologies</category><category>#python</category><category>humblebundle</category><category>packtpub</category><category>functional python programming</category></item><item><title>The Pythonista app for iPad</title><link>https://slott56.github.io/2019_06_18-the_pythonista_app_for_ipad.html</link><description>&lt;p&gt;Let me start my review with &amp;quot;wow!&amp;quot;&lt;/p&gt;
&lt;p&gt;Python 3.6 on the iPad. Works. Nicely. Easy to use. Reliable.
Rock-Solid.&lt;/p&gt;
&lt;p&gt;I'm not switching to iPad as my primary platform any time in the near
future.  But. For certain kinds of small and tightly focused hackery,
this is really nice.&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jun 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-06-18:/2019_06_18-the_pythonista_app_for_ipad.html</guid><category>Technologies</category><category>education</category><category>#python</category></item><item><title>Circuit Python on the Gemma M0 -- The Red Ranger Beacon</title><link>https://slott56.github.io/2019_06_11-circuit_python_on_the_gemma_m0_the_red_ranger_beacon.html</link><description>&lt;p&gt;PyCon 2018 Swag included a Gemma m0.
(&lt;a class="reference external" href="https://www.adafruit.com/product/3501"&gt;https://www.adafruit.com/product/3501&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;PyCon 2019 Swag included a Circuit Playground Express.
See &lt;a class="reference external" href="https://learn.adafruit.com/adafruit-circuit-playground-express/circuitpython-quickstart"&gt;https://learn.adafruit.com/adafruit-circuit-playground-express/circuitpython-quickstart&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both of these are (to me) amazing. They mount as USB devices; there’s
a code.py file that’s automatically run …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jun 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-06-11:/2019_06_11-circuit_python_on_the_gemma_m0_the_red_ranger_beacon.html</guid><category>Technologies</category><category>Gemma</category><category>#python</category><category>CircuitPlayground</category><category>IoT</category></item><item><title>Probabilistic Data Structures</title><link>https://slott56.github.io/2019_06_04-probabilistic_data_structures.html</link><description>&lt;p&gt;Interesting data structures with &lt;strong&gt;O&lt;/strong&gt;(&lt;em&gt;n&lt;/em&gt;) performance. This can help
to unscramble &lt;strong&gt;O&lt;/strong&gt;(&lt;em&gt;n&lt;/em&gt;²) problems allowing progress.
&lt;a class="reference external" href="https://pdsa.readthedocs.io/en/latest/index.html"&gt;https://pdsa.readthedocs.io/en/latest/index.html&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jun 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-06-04:/2019_06_04-probabilistic_data_structures.html</guid><category>Technologies</category><category>data structure</category><category>algorithm</category><category>#python</category></item><item><title>Rules for Debugging</title><link>https://slott56.github.io/2019_05_28-rules_for_debugging.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Here's the situation.&lt;/div&gt;
&lt;div class="line"&gt;Someone wrote code. It didn't do what they assumed it would do.&lt;/div&gt;
&lt;div class="line"&gt;They come to me for help.&lt;/div&gt;
&lt;div class="line"&gt;Here are my rules for debugging. All of them.&lt;/div&gt;
&lt;div class="line"&gt;1. Try something else.&lt;/div&gt;
&lt;/div&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;I don't have any other or more clever advice. When I look at someone's
broken code …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 May 2019 14:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-05-28:/2019_05_28-rules_for_debugging.html</guid><category>Technologies</category><category>passive-aggressive programmer</category><category>Programming Languages</category></item><item><title>Hacker Laws</title><link>https://slott56.github.io/2019_05_21-hacker_laws.html</link><description>&lt;p&gt;Pretty funny: &lt;a class="reference external" href="https://github.com/dwmkerr/hacker-laws"&gt;https://github.com/dwmkerr/hacker-laws&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 May 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-05-21:/2019_05_21-hacker_laws.html</guid><category>Technologies</category><category>Design Principles</category></item><item><title>PyCon 2019</title><link>https://slott56.github.io/2019_05_14-pycon_2019.html</link><description>&lt;p&gt;There are some things I could say.&lt;/p&gt;
&lt;p&gt;But.&lt;/p&gt;
&lt;p&gt;You can come to understand it yourself, also.&lt;/p&gt;
&lt;p&gt;Go here: &lt;a class="reference external" href="https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ"&gt;https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Start with the keynotes. &lt;a class="reference external" href="https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ/search?query=keynote"&gt;https://www.youtube.com/channel/UCxs2IIVXaEHHA4BtTiWZ2mQ/search?query=keynote&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For me, one of the top presentations was this &lt;a class="reference external" href="https://www.youtube.com/watch?v=9G2s1TN9QQY"&gt;https://www.youtube.com …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 May 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-05-14:/2019_05_14-pycon_2019.html</guid><category>Technologies</category><category>pycon</category><category>#python</category></item><item><title>Fiction Writers and Query Letters</title><link>https://slott56.github.io/2019_05_07-fiction_writers_and_query_letters.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://flstevens.itmaybeahack.com/writing-world-building-and/"&gt;http://flstevens.itmaybeahack.com/writing-world-building-and/&lt;/a&gt; for
some back-story on F. L. Stevens and the need to write a *lot* of
query letters to agents for fiction. (The non-fiction industry is
entirely different; there are acquisition editors who look for
technical contributors.)&lt;/p&gt;
&lt;p&gt;There's a tiny possibility of a Query Manager …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 May 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-05-07:/2019_05_07-fiction_writers_and_query_letters.html</guid><category>Technologies</category><category>#python</category></item><item><title>PyLit-3 Maintenance, Love and Care</title><link>https://slott56.github.io/2019_04_09-pylit_3_maintenance_love_and_care.html</link><description>&lt;p&gt;The PyLit tool dates from 2009. Here's a historical
reference: &lt;a class="reference external" href="http://wiki.c2.com/?PyLit"&gt;http://wiki.c2.com/?PyLit&lt;/a&gt;
It was Python 2. It had some minor problems. I forked it and cleaned it
up for Python 3.
Then I set it aside for a few years (six or so.)
Dusting it off. Rearranging …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Apr 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-04-09:/2019_04_09-pylit_3_maintenance_love_and_care.html</guid><category>Technologies</category><category>literate programming</category><category>PyLit</category><category>#python</category></item><item><title>Python and pathlib and Windows -- this problem has been solved -- and yet...</title><link>https://slott56.github.io/2019_03_26-python_and_pathlib_and_windows_this_problem_has_been_solved_and_yet.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The Passive-Aggressive Programmer strikes again. A sad story of
sadness.&lt;/div&gt;
&lt;div class="line"&gt;I tell everyone to stop using os.path and use pathlib. Everyone.
Here's the link: &lt;a class="reference external" href="https://docs.python.org/3/library/pathlib.html"&gt;https://docs.python.org/3/library/pathlib.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;It's essential to realize the semantic richness of OS filesystem
paths. They're not simply strings. They have …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Mar 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-03-26:/2019_03_26-python_and_pathlib_and_windows_this_problem_has_been_solved_and_yet.html</guid><category>Technologies</category><category>windows</category><category>#python</category></item><item><title>Don't Solve My Problem.</title><link>https://slott56.github.io/2019_03_19-dont_solve_my_problem.html</link><description>&lt;p&gt;Two and a half examples of &amp;quot;Don't solve the problem I described.
Provide the implementation I dream about.&amp;quot;&lt;/p&gt;
&lt;div class="section" id="can-t-use-enums-for-constants"&gt;
&lt;h2&gt;Can't Use Enums for Constants&lt;/h2&gt;
&lt;p&gt;I was asked to see this because sometimes there's just too much
abstraction
&lt;a class="reference external" href="https://stackoverflow.com/questions/2668355/how-much-abstraction-is-too-much"&gt;https://stackoverflow.com/questions/2668355/how-much-abstraction-is-too-much&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The accepted answer links to some useful design …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Mar 2019 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-03-19:/2019_03_19-dont_solve_my_problem.html</guid><category>Technologies</category><category>Design Principles</category></item><item><title>Python's multi-threading and the GIL</title><link>https://slott56.github.io/2019_03_18-pythons_multi_threading_and_the_gil.html</link><description>&lt;p&gt;Got this in an email.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Python's multi-threading module seems not efficient because of the
global interpreter lock?&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Yep.&lt;/p&gt;
&lt;blockquote&gt;
Is the trick is to use &amp;quot;&lt;a class="reference external" href="https://docs.python.org/3/library/threading.html#thread-local-data"&gt;Thread-Local
Data&lt;/a&gt;&amp;quot;?&lt;/blockquote&gt;
&lt;p&gt;Nope.&lt;/p&gt;
&lt;div class="section" id="it-gets-worse"&gt;
&lt;h2&gt;It Gets Worse&lt;/h2&gt;
&lt;p&gt;Interestingly, there was no further ask. The questioner had decided on
thread-local data because the questioner had decided to focus …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 18 Mar 2019 07:36:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-03-18:/2019_03_18-pythons_multi_threading_and_the_gil.html</guid><category>Technologies</category><category>dask</category><category>#python</category><category>multiprocessing</category><category>threads</category></item><item><title>Python exceptions considered an anti-pattern</title><link>https://slott56.github.io/2019_03_05-python_exceptions_considered_an_anti_pattern.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern"&gt;https://sobolevn.me/2019/02/python-exceptions-considered-an-antipattern&lt;/a&gt;
While eloquent and thorough, I remain unconvinced that this is a
significant improvement over try/except.
It's common enough in some functional languages to have strong support
and a long, successful history.
I think it replaces one problem with another. It's not a &amp;quot;solution …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Mar 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-03-05:/2019_03_05-python_exceptions_considered_an_anti_pattern.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category></item><item><title>On the uselessness of Enum -- wait, what?</title><link>https://slott56.github.io/2019_02_12-on_the_uselessness_of_enum_wait_what.html</link><description>&lt;p&gt;Had a question about an enumerated set of constant values.
&amp;quot;Where do I put these constants?&amp;quot; they asked. It was clear what they
wanted. This is another variation on their personal quest which can be
called &amp;quot;I want Python to have CONST or Final.&amp;quot; It's kind of tedious when
a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Feb 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-02-12:/2019_02_12-on_the_uselessness_of_enum_wait_what.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Python Enhancement Proposal -- Floating an Idea</title><link>https://slott56.github.io/2019_02_05-python_enhancement_proposal_floating_an_idea.html</link><description>&lt;p&gt;Consider the following code&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def max(m: int, n: int) -&amp;gt; int:
    if m &amp;gt;= n:
        return m
    elif n &amp;gt;= m:
        return n
    else:
        raise Exception(f&amp;quot;Design Error: {vars()}&amp;quot;)
&lt;/pre&gt;
&lt;p&gt;There's a question about else: clause and the exception raised there.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;It's impossible. In this specific case, a little algebra can provide …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Feb 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-02-05:/2019_02_05-python_enhancement_proposal_floating_an_idea.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>object-oriented design</category><category>complexity</category><category>Design Principles</category><category>PEP</category></item><item><title>Eager and Lazy Properties</title><link>https://slott56.github.io/2019_01_29-eager_and_lazy_properties.html</link><description>&lt;p&gt;See this&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Dear Pythonista lazyweb: If I have a property spam and the
attribute that backs it is _spam, what do we call that? The
&amp;quot;backing attribute&amp;quot;? The &amp;quot;original property&amp;quot;? Something else? Is
there an official term for this?&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Al Sweigart (&amp;#64;AlSweigart) &lt;a class="reference external" href="https://twitter.com/AlSweigart/status/1090348010041528321?ref_src=twsrc%5Etfw"&gt;January 29,
2019&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My answer was -- frankly -- vague …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Jan 2019 21:30:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-29:/2019_01_29-eager_and_lazy_properties.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category></item><item><title>Things that start badly</title><link>https://slott56.github.io/2019_01_29-things_that_start_badly.html</link><description>&lt;p&gt;Today's Example of Starting Badly: Building HTML.&lt;/p&gt;
&lt;p&gt;The code has a super-simple email message with
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;f&amp;quot;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;p&amp;gt;stuff&lt;/span&gt; &lt;span class="pre"&gt;{data}&amp;lt;/p&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;quot;&lt;/span&gt;&lt;/tt&gt;. It was jammed
into an email object along with the text version. All very nice.
For a moment, I considered suggesting that f-string substitution
wasn't a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Jan 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-29:/2019_01_29-things_that_start_badly.html</guid><category>Technologies</category><category>mako</category><category>#python</category><category>jinja</category></item><item><title>Code Review</title><link>https://slott56.github.io/2019_01_24-code_review.html</link><description>&lt;p&gt;I can't actually share all the code. So this feels incomplete. But I
can share what I said about the code. Then you can look at your code
and decide if you've got similar problems to fix.&lt;/p&gt;
&lt;p&gt;My responses were these. I'll expand on them below.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;This appears to be …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Jan 2019 07:55:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-24:/2019_01_24-code_review.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category></item><item><title>Read this: 10 Reasons to Learn Python in 2019</title><link>https://slott56.github.io/2019_01_22-read_this_10_reasons_to_learn_python_in_2019.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://dzone.com/articles/why-every-programmer-should-learn-python"&gt;10 Reasons to Learn Python in 2019&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I want to dwell on #4 for a moment.&lt;/p&gt;
&lt;p&gt;The Python community actually has a &lt;a class="reference external" href="https://www.python.org/psf/codeofconduct/"&gt;Code of Conduct&lt;/a&gt;. We try to
stick by it and conferences will have reporting mechanisms in place so
we can educate folks who are being inconsiderate or …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Jan 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-22:/2019_01_22-read_this_10_reasons_to_learn_python_in_2019.html</guid><category>Technologies</category><category>#python</category><category>community</category><category>virtual-environments</category><category>conda</category></item><item><title>Super-picky Writing Advice</title><link>https://slott56.github.io/2019_01_15-super_picky_writing_advice.html</link><description>&lt;p&gt;There are patterns to bad writing. I'll give some examples based on a
blog post I was sent. It's also based -- indirectly -- on some of
proposals I saw for PyCon and PyDataDC.&lt;/p&gt;
&lt;p&gt;For the conference calls for papers, I can ask a few questions of the
author, but that's about …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Jan 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-15:/2019_01_15-super_picky_writing_advice.html</guid><category>Technologies</category><category>writing</category><category>pycon</category><category>#python</category></item><item><title>NumFocus and PyData</title><link>https://slott56.github.io/2019_01_08-numfocus_and_pydata.html</link><description>&lt;p&gt;Videos are up from PyDataDC 2018.  See all the PyData talks at &lt;a class="reference external" href="https://www.youtube.com/user/PyDataTV"&gt;PyDataTV
on YouTube&lt;/a&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Jan 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-08:/2019_01_08-numfocus_and_pydata.html</guid><category>Technologies</category><category>pydata</category><category>#python</category></item><item><title>PyCon Call for Proposals</title><link>https://slott56.github.io/2019_01_01-pycon_call_for_proposals.html</link><description>&lt;p&gt;PyCon CFP closes in a day or so.
See &lt;a class="reference external" href="https://us.pycon.org/2019/speaking/"&gt;https://us.pycon.org/2019/speaking/&lt;/a&gt; for details.&lt;/p&gt;
&lt;p&gt;After looking at 100's of proposals there are several broad
categories.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Some cool stuff I wrote (or helped write, or contributed to)&lt;/li&gt;
&lt;li&gt;Some cool aspect of Python the language&lt;/li&gt;
&lt;li&gt;Some cool thing happening …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Jan 2019 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2019-01-01:/2019_01_01-pycon_call_for_proposals.html</guid><category>Technologies</category><category>pycon</category><category>#python</category></item><item><title>Using Python instead of bash</title><link>https://slott56.github.io/2018_11_13-using_python_instead_of_bash.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://medium.com/capital-one-tech/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989"&gt;Bashing the Bash — Replacing Shell Scripts with
Python&lt;/a&gt;
for some concrete examples of stuff you can do in Python or the shell.&lt;/p&gt;
&lt;p&gt;And yes, it's a good, workable idea.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;It's unit testable.&lt;/li&gt;
&lt;li&gt;It's easier to read.&lt;/li&gt;
&lt;li&gt;It may be faster. Not that you'd notice unless you've really made
a …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Nov 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-11-13:/2018_11_13-using_python_instead_of_bash.html</guid><category>Technologies</category><category>bash</category><category>#python</category></item><item><title>PyData 2018 Washington, DC</title><link>https://slott56.github.io/2018_11_06-pydata_2018_washington_dc.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://pydata.org/dc2018/"&gt;https://pydata.org/dc2018/&lt;/a&gt;
You do need to get your tickets ASAP. The
&lt;a class="reference external" href="https://pydata.org/dc2018/schedule/"&gt;schedule&lt;/a&gt; is fabulous.
Hotel rooms are still available, so don't waste any time getting
connected.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Nov 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-11-06:/2018_11_06-pydata_2018_washington_dc.html</guid><category>Technologies</category><category>pydata</category><category>numfocus</category><category>#python</category></item><item><title>The SourceForge vs. GitHub Conundrum</title><link>https://slott56.github.io/2018_10_30-the_sourceforge_vs_github_conundrum.html</link><description>&lt;p&gt;Or &amp;quot;When is it time to move?&amp;quot;&lt;/p&gt;
&lt;p&gt;I've got &lt;a class="reference external" href="https://sourceforge.net/projects/stingrayreader/"&gt;https://sourceforge.net/projects/stingrayreader/&lt;/a&gt; which has
been on SourceForge since forever.&lt;/p&gt;
&lt;p&gt;Really since about 2014. Not that long. But. Maybe long enough?&lt;/p&gt;
&lt;p&gt;The velocity of change is relatively slow.&lt;/p&gt;
&lt;p&gt;However.&lt;/p&gt;
&lt;p&gt;(And this is a big however.) SourceForge seems kind of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 30 Oct 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-10-30:/2018_10_30-the_sourceforge_vs_github_conundrum.html</guid><category>Technologies</category><category>open source</category><category>stingray reader</category><category>github</category><category>source forge</category></item><item><title>The Edge of the Envelope</title><link>https://slott56.github.io/2018_10_16-the_edge_of_the_envelope.html</link><description>&lt;p&gt;I don't -- generally -- think of myself as an edge-of-the-envelope
developer. I'm a tried-and-proven kind of engineer. I want stuff that's
been around for years, with a long history of changes.
Except.
Today.
Currently, I'm revising &lt;a class="reference external" href="https://www.packtpub.com/application-development/mastering-object-oriented-python"&gt;Mastering Object-Oriented
Python&lt;/a&gt;.
Second Edition.
That means upgrading everything to Python 3.7 with full …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Oct 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-10-16:/2018_10_16-the_edge_of_the_envelope.html</guid><category>Technologies</category><category>#python</category><category>mypy</category><category>mastering object-oriented python</category></item><item><title>Data Modeling Nightmare -- XML, HTML, and Markdown</title><link>https://slott56.github.io/2018_09_18-data_modeling_nightmare_xml_html_and_markdown.html</link><description>&lt;p&gt;Here's a particularly tangled and difficult problem. It arises because
I have another blog. Specifically this: &lt;a class="reference external" href="http://www.itmaybeahack.com/TeamRedCruising/"&gt;Team Red
Cruising&lt;/a&gt;. And it's
an unholy mess.&lt;/p&gt;
&lt;p&gt;There are two important features of the &lt;em&gt;Team Red Cruising&lt;/em&gt; blog.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;It's managed with off-line editor(s) so I can write posts from the
boat and …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Sep 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-09-18:/2018_09_18-data_modeling_nightmare_xml_html_and_markdown.html</guid><category>Technologies</category><category>#python</category><category>xml</category><category>content management</category><category>blogging</category><category>HTML</category><category>markdown</category></item><item><title>Handy Flask Configuration -- Bookmark the original article</title><link>https://slott56.github.io/2018_09_04-handy_flask_configuration_bookmark_the_original_article.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/429285908953579520/InZKng9-_normal.jpeg" /&gt;
&lt;p&gt;&lt;strong&gt;Pycoders Weekly(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/pycoders?s=11"&gt;&amp;#64;pycoders&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/pycoders/status/1030123521983348736?s=11"&gt;8/16/18, 12:06 PM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Configure Python 3, Flask andGunicorn on Ubuntu 18.04 LTS –&lt;a class="reference external" href="https://t.co/1oB0nJXeeG"&gt;bit.ly/2vRZYQR&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We worked through this about a year ago, &lt;strong&gt;without&lt;/strong&gt; the help of this
post. Having the article would have saved us some time and effort. You
should …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Sep 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-09-04:/2018_09_04-handy_flask_configuration_bookmark_the_original_article.html</guid><category>Technologies</category><category>gunicorn</category><category>flask</category><category>#python</category></item><item><title>Cool success story of Cython</title><link>https://slott56.github.io/2018_08_28-cool_success_story_of_cython.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/952818577719091200/rBCQPkA9_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Real Python(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/realpython?s=11"&gt;&amp;#64;realpython&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/realpython/status/1024472543237992449?s=11"&gt;7/31/18, 9:51PM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;A multi-core Python HTTPserver (much) faster than Go(spoiler: Cython)`nexedi.com/NXD-Blog.Multi… &amp;lt;&lt;a class="reference external" href="https://t.co/mlRqTMwmxu"&gt;https://t.co/mlRqTMwmxu&lt;/a&gt;&amp;gt;`__&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.nexedi.com/NXD-Blog.Multicore.Python.HTTP.Server"&gt;https://www.nexedi.com/NXD-Blog.Multicore.Python.HTTP.Server&lt;/a&gt;
This is handy. It makes perfect sense that Python -- with a little
help …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Aug 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-08-28:/2018_08_28-cool_success_story_of_cython.html</guid><category>Technologies</category><category>#python</category><category>type hints</category></item><item><title>Python Dependency Management</title><link>https://slott56.github.io/2018_08_21-python_dependency_management.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://tech.instacart.com/freezing-pythons-dependency-hell-in-2018-f1076d625241"&gt;Freezing Python’s Dependency Hell in
2018&lt;/a&gt;
Excellent advice.
Excepot for the &amp;quot;Don't use Anaconda.&amp;quot; Yes. It's a big download. Odds are
good you'll need most of it. So. Just do it now.
The (miniconda + environment.yml) as an entry point is really good. The
&amp;quot;rely on people to actually …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Aug 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-08-21:/2018_08_21-python_dependency_management.html</guid><category>Technologies</category><category>Anaconda</category><category>#python</category></item><item><title>Why is Python so slow?</title><link>https://slott56.github.io/2018_08_14-why_is_python_so_slow.html</link><description>&lt;p&gt;This is brilliant.
&lt;a class="reference external" href="https://hackernoon.com/why-is-python-so-slow-e5074b6fe55b?source=emailShare-f2cdc4351994-1532050239"&gt;Why is Python so
slow?&lt;/a&gt;
by Anthony Shaw
It covers three aspects of the implementation in a respectable level of
detail. Helpful information. Bookmark it to help stop pointless
bickering with people who don't understand the value of getting
something to run right now vs. getting something …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Aug 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-08-14:/2018_08_14-why_is_python_so_slow.html</guid><category>Technologies</category><category>#python</category></item><item><title>Mastering Object-Oriented Python -- 2nd Edition</title><link>https://slott56.github.io/2018_07_24-mastering_object_oriented_python_2nd_edition.html</link><description>&lt;p&gt;It's time to revise &lt;a class="reference external" href="https://www.packtpub.com/application-development/mastering-object-oriented-python"&gt;Mastering Object-Oriented
Python&lt;/a&gt;.
While the previous edition is solidly focused on Python3, it lacks
some important features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;F-Strings&lt;/li&gt;
&lt;li&gt;Type Hints&lt;/li&gt;
&lt;li&gt;types.NamedTuple&lt;/li&gt;
&lt;li&gt;Data Classes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So. There's some stuff to add. I don't think there's too much to take
away. I plan to make some things a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Jul 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-07-24:/2018_07_24-mastering_object_oriented_python_2nd_edition.html</guid><category>Books</category><category>#python</category><category>@PacktAuthors</category><category>packtpub</category><category>mastering object-oriented python</category></item><item><title>Patient Crawling and Possible Phishing</title><link>https://slott56.github.io/2018_07_17-patient_crawling_and_possible_phishing.html</link><description>&lt;p&gt;Once every few months I get an email like this. What is it? Phishing?&lt;/p&gt;
&lt;p&gt;I've finally looked into it, and learned two important lessons.&lt;/p&gt;
&lt;p&gt;Here's the body of the email.&lt;/p&gt;
&lt;blockquote&gt;
Hello there,
Your page
&lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/iblog/C364310209/E20080407095503.html"&gt;http://www.itmaybeahack.com/homepage/iblog/C364310209/E20080407095503.html&lt;/a&gt;
has some good references to cyber security …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Jul 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-07-17:/2018_07_17-patient_crawling_and_possible_phishing.html</guid><category>Technologies</category><category>scam</category><category>security</category></item><item><title>Type Hinting Edge Case</title><link>https://slott56.github.io/2018_07_10-type_hinting_edge_case.html</link><description>&lt;p&gt;Warning. I'm new to this. Yes, my book Functional Python Programming
-- 2nd ed -- is full of type hints. But my examples are all
(intentionally) &lt;em&gt;relatively&lt;/em&gt; simple. There are edge cases that I do
not pretend to understand.&lt;/p&gt;
&lt;p&gt;Here's a fun one. Start here&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lazy PyTwitter: Is there some way with …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jul 2018 08:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-07-10:/2018_07_10-type_hinting_edge_case.html</guid><category>Technologies</category><category>#python</category><category>type hints</category></item><item><title>10 common security gotchas in Python and how to avoid them</title><link>https://slott56.github.io/2018_07_10-10_common_security_gotchas_in_python_and_how_to_avoid_them.html</link><description>&lt;p&gt;First, read this: &lt;a class="reference external" href="https://hackernoon.com/10-common-security-gotchas-in-python-and-how-to-avoid-them-e19fbe265e03?source=emailShare-879bf4230309-1531218424"&gt;10 common security gotchas in Python and how to avoid
them&lt;/a&gt;
by Anthony Shaw&lt;/p&gt;
&lt;p&gt;Of these, most are important, but not specific to Python at all. Only
items 3, 4, 7, and 8 are pretty specific to Python. They talk about the
assert statement, some timing vulnerabilities …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jul 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-07-10:/2018_07_10-10_common_security_gotchas_in_python_and_how_to_avoid_them.html</guid><category>Technologies</category><category>#python</category><category>security</category></item><item><title>Coping with a Spreadsheet Database</title><link>https://slott56.github.io/2018_07_02-coping_with_a_spreadsheet_database.html</link><description>&lt;p&gt;A common way to save persistent, important data is a spreadsheet. It
provides a handy, potentially normalized store that's readily
accessible with minimal tooling. It has a UI usable by people with a
spectrum of skills.&lt;/p&gt;
&lt;p&gt;Sadly.&lt;/p&gt;
&lt;p&gt;There's a core conflict:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The advantages of spreadsheets-as-database are numerous.&lt;/li&gt;
&lt;li&gt;The disadvantage is …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 02 Jul 2018 19:18:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-07-02:/2018_07_02-coping_with_a_spreadsheet_database.html</guid><category>Technologies</category><category>#python</category><category>spreadsheet</category><category>software design</category><category>stingray reader</category></item><item><title>PyCon 2018 Highlights</title><link>https://slott56.github.io/2018_05_16-pycon_2018_highlights.html</link><description>&lt;p&gt;And yes, this is truncated because I left early, and missed some
important things. I'm going to have to catch on
YouTube &lt;a class="reference external" href="https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ/videos"&gt;https://www.youtube.com/channel/UCsX05-2sVSH7Nx3zuk3NYuQ/videos&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=lpWvYxEW09k"&gt;Stacy Morse - Code Reviews Using Art Critique Principles - PyCon
2018&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=zQeYx87mfyw"&gt;Jake VanderPlas - Performance Python: Seven Strategies for
Optimizing Your Numerical
Code …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 May 2018 20:57:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-05-16:/2018_05_16-pycon_2018_highlights.html</guid><category>Technologies</category><category>pycon</category><category>#python</category></item><item><title>Functional Python Programming 2e -- Type Hints!</title><link>https://slott56.github.io/2018_05_07-functional_python_programming_2e_type_hints.html</link><description>&lt;p&gt;You might want to look into this: &lt;a class="reference external" href="https://www.packtpub.com/application-development/functional-python-programming-second-edition"&gt;Functional Python Programming -
Second
Edition&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let's talk about the type hints, shall we?&lt;/p&gt;
&lt;p&gt;Most of the examples have had type hints added. This means running
everything through mypy. And it also means running everything through
doctest, as well.&lt;/p&gt;
&lt;p&gt;More important than the technical …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 07 May 2018 09:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-05-07:/2018_05_07-functional_python_programming_2e_type_hints.html</guid><category>Technologies</category><category>#python</category><category>@PacktAuthors</category><category>functional python programming</category><category>type hints</category></item><item><title>Misunderstanding OO Programming</title><link>https://slott56.github.io/2018_05_01-misunderstanding_oo_programming.html</link><description>&lt;p&gt;Read this. &lt;a class="reference external" href="https://medium.com/&amp;#64;cscalfani/goodbye-object-oriented-programming-a59cda4c0e53?source=linkShare-879bf4230309-1524537370"&gt;Goodbye, Object Oriented Programming&lt;/a&gt;
I like this because parts of it are wrong, and parts are based on
peculiarities of specific languages which aren’t problems in other languages.&lt;/p&gt;
&lt;p&gt;The “wrong” things are on a spectrum. At one end are things almost
right. The other end is hoped-for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 May 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-05-01:/2018_05_01-misunderstanding_oo_programming.html</guid><category>Technologies</category><category>object-oriented design</category><category>#python</category><category>object-oriented language</category></item><item><title>Should I use x.__len__() or len(x)?</title><link>https://slott56.github.io/2018_04_21-should_i_use_x__len___or_lenx.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;In the context of providing type hints, someone had a function like
this.&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
def f(x: Sized) -&amp;gt; Whatever: ...
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;And, since sized objects have a __len__() method it seemed sensible
to use x.__len__(). It was a good question about the use of special
methods.&lt;/div&gt;
&lt;div class="line"&gt;My advice is to avoid using …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 21 Apr 2018 09:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-04-21:/2018_04_21-should_i_use_x__len___or_lenx.html</guid><category>Technologies</category><category>#python</category></item><item><title>RESTful Web Services Design</title><link>https://slott56.github.io/2018_04_03-restful_web_services_design.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This -- &lt;a class="reference external" href="https://medium.freecodecamp.org/rest-is-the-new-soap-97ff6c09896d"&gt;REST is the new
SOAP&lt;/a&gt;
-- has so many demolished strawman arguments that it feels like
looking at a van Gogh painting of people harvesting wheat.&lt;/div&gt;
&lt;div class="line"&gt;I won't dive into listing all the strawmen. Most of my responses are
approximately &amp;quot;How is that an actual problem?&amp;quot; or &amp;quot;Yes, it was …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Apr 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-04-03:/2018_04_03-restful_web_services_design.html</guid><category>Technologies</category><category>REST</category></item><item><title>Functional Python Programming 2e -- Now With Type Hints</title><link>https://slott56.github.io/2018_03_27-functional_python_programming_2e_now_with_type_hints.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="https://www.packtpub.com/application-development/functional-python-programming-second-edition"&gt;Functional Python Programming, 2nd
ed.&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;This has been fun to cleanup some rambling, reset the math to be sure
it's actually right.&lt;/div&gt;
&lt;div class="line"&gt;And.&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Type Hints&lt;/strong&gt;.&lt;/div&gt;
&lt;div class="line"&gt;Almost every example has had type hints added.&lt;/div&gt;
&lt;div class="line"&gt;(And I raised the pylint scores be rearranging some spacing and
what-not.)&lt;/div&gt;
&lt;div class="line"&gt;Bonus. We will be moving …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Mar 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-03-27:/2018_03_27-functional_python_programming_2e_now_with_type_hints.html</guid><category>Technologies</category><category>@PacktAuthors</category><category>#python</category></item><item><title>HATEOAS is useless? Or not used enough?</title><link>https://slott56.github.io/2018_03_20-hateoas_is_useless_or_not_used_enough.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://medium.com/&amp;#64;andreasreiser94/why-hateoas-is-useless-and-what-that-means-for-rest-a65194471bc8"&gt;Why HATEOAS is useless and what that means for
REST&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The article provides a background leading up to these observations:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;There are very few good tools to create a REST API using this style&lt;/li&gt;
&lt;li&gt;There are no clients widely used to consume these types of APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &amp;quot;useless&amp;quot; in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Mar 2018 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-03-20:/2018_03_20-hateoas_is_useless_or_not_used_enough.html</guid><category>Technologies</category><category>REST</category><category>API Design</category></item><item><title>Python Interviews</title><link>https://slott56.github.io/2018_03_09-python_interviews.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The #Python Interviews book is out. Mike Driscoll interviewed a bunch
of Python experts. And me, too. get 30% off the Amazon paperback
version of the book using the code 30PYTHON: &lt;a class="reference external" href="https://goo.gl/5A3uhq"&gt;https://goo.gl/5A3uhq&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Here's a flavor of how this went:&lt;/div&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;strong&gt;Driscoll&lt;/strong&gt;: So how did you end up becoming …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Mar 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-03-09:/2018_03_09-python_interviews.html</guid><category>Technologies</category><category>@PacktAuthors</category><category>packtpub</category><category>#python</category></item><item><title>Python Interviews -- Coming Soon from Packt</title><link>https://slott56.github.io/2018_03_05-python_interviews_coming_soon_from_packt.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.packtpub.com/web-development/python-interviews"&gt;https://www.packtpub.com/web-development/python-interviews&lt;/a&gt;
I'm honored.
I'll be studying what the other folks have to say in here. Being in the
Python community means respecting other's views. And that means
understanding them.
This looks like fun because it isn't *deeply* technical, it's about
people and technology.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 05 Mar 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-03-05:/2018_03_05-python_interviews_coming_soon_from_packt.html</guid><category>Technologies</category><category>@PacktAuthors</category><category>#python</category></item><item><title>The SQL-based relational database isn't perfection? Whoa if true</title><link>https://slott56.github.io/2018_02_08-the_sql_based_relational_database_isnt_perfection_whoa_if_true.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Yes, there are people for whom document databases (and the file
system) are confusing and weird.&lt;/div&gt;
&lt;div class="line"&gt;I was sent this: &lt;a class="reference external" href="https://www.datasciencecentral.com/profiles/blogs/relational-algebra-is-the-root-of-sql-problems"&gt;Relational Algebra Is the Root of SQL
Problems&lt;/a&gt;
which is really brilliant and provides some helpful concrete examples
of stuff SQL is really bad at.&lt;/div&gt;
&lt;div class="line"&gt;The accompanying email was filled …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 08 Feb 2018 19:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-02-08:/2018_02_08-the_sql_based_relational_database_isnt_perfection_whoa_if_true.html</guid><category>Technologies</category><category>design</category><category>noSQL</category></item><item><title>Spec to Gherkin to Code: A Relay Play based on Swagger and OAS</title><link>https://slott56.github.io/2018_02_06-spec_to_gherkin_to_code_a_relay_play_based_on_swagger_and_oas.html</link><description>&lt;p&gt;Recent publications elsewhere: &lt;a class="reference external" href="https://medium.com/capital-one-developers/spec-to-gherkin-to-code-902e346bb9aa"&gt;Spec to Gherkin to
Code&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Feb 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-02-06:/2018_02_06-spec_to_gherkin_to_code_a_relay_play_based_on_swagger_and_oas.html</guid><category>Technologies</category><category>gherkin</category><category>#python</category><category>swagger</category></item><item><title>PyCon 2018 Program Committee</title><link>https://slott56.github.io/2018_01_23-pycon_2018_program_committee.html</link><description>&lt;p&gt;I was &amp;quot;volunteered&amp;quot; by a colleague to help the program committee for
&lt;a class="reference external" href="https://us.pycon.org/2018/about/"&gt;PyCon 2018&lt;/a&gt;. I rarely think of
myself as qualified for this kind of thing. Yes. I have six books on
Python (with a seventh on the way) but the PSF folks are brilliant and
dedicated and hard-working, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Jan 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-01-23:/2018_01_23-pycon_2018_program_committee.html</guid><category>Technologies</category><category>pycon</category></item><item><title>I've decided on Windows -- Please help justify my choice</title><link>https://slott56.github.io/2018_01_16-ive_decided_on_windows_please_help_justify_my_choice.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;After many words, the email chain I received netted out to this:&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I can't teach myself data science on my crappy old Windows machine.&lt;/li&gt;
&lt;li&gt;I've decided to get a new Windows machine. Here are the specs.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;My response was a mixture of incredulity and bafflement.&lt;/div&gt;
&lt;div class="line"&gt;It appears that two things …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Jan 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-01-16:/2018_01_16-ive_decided_on_windows_please_help_justify_my_choice.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Code Rewrites and How They Create Value -- Stop Fighting Against It</title><link>https://slott56.github.io/2018_01_09-code_rewrites_and_how_they_create_value_stop_fighting_against_it.html</link><description>&lt;p&gt;TL;DR -- To remove doubts and questions, rewrite it.&lt;/p&gt;
&lt;p&gt;Many, many people are confronted with the request to maintain someone
else's code.&lt;/p&gt;
&lt;p&gt;Either it's open source, and you have to make formal PR's visible to
the world.&lt;/p&gt;
&lt;p&gt;Or it's &amp;quot;enterprise&amp;quot; in-house software, and you have to make PR's
visible to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Jan 2018 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2018-01-09:/2018_01_09-code_rewrites_and_how_they_create_value_stop_fighting_against_it.html</guid><category>Technologies</category><category>test-driven reverse engineering</category></item><item><title>The TLA Problem -- Over-Engineering Three-Letter Acronyms</title><link>https://slott56.github.io/2017_12_19-the_tla_problem_over_engineering_three_letter_acronyms.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Here's something we can gleefully over-engineer. Because anything
worth doing is worth over-engineering until it morphs into a different
kind of problem.&lt;/div&gt;
&lt;div class="line"&gt;I'm unclear on the backstory, so try not to ask &amp;quot;why are we doing
this?&amp;quot; I think it has something to do with code camp and there are …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Dec 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-12-19:/2017_12_19-the_tla_problem_over_engineering_three_letter_acronyms.html</guid><category>Technologies</category><category>#python</category><category>architecture</category></item><item><title>Ordered Keys in Dictionaries</title><link>https://slott56.github.io/2017_12_16-ordered_keys_in_dictionaries.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/73450913/IMG_0202_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Raymond Hettinger(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/raymondh?refsrc=email&amp;amp;s=11"&gt;&amp;#64;raymondh&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;12/15/17, 11:40 AM &lt;a class="reference external" href="https://twitter.com/raymondh/status/941709626545864704?refsrc=email&amp;amp;s=11"&gt;https://twitter.com/raymondh/status/941709626545864704?refsrc=email&amp;amp;s=11&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/search?q=%23python&amp;amp;src=hash"&gt;#python&lt;/a&gt; news: 😀&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/gvanrossum"&gt;&amp;#64;gvanrossum&lt;/a&gt; just pronounced that dicts are now guaranteed to retain insertion order. This is the end of a long journey.&lt;/p&gt;
&lt;/blockquote&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 16 Dec 2017 08:42:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-12-16:/2017_12_16-ordered_keys_in_dictionaries.html</guid><category>Technologies</category><category>#python</category></item><item><title>The Business of Book Promotions</title><link>https://slott56.github.io/2017_12_12-the_business_of_book_promotions.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;It is hard (for me) to promote my books. It seems like empty vanity. I
realize that it's not -- promotion is essential -- but it's difficult.&lt;/div&gt;
&lt;div class="line"&gt;Packt just send a raft of detailed information for authors. Some
things they suggest I do.&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;✅Referrals. Want a &amp;quot;free&amp;quot; Python book? The &amp;quot;free&amp;quot; is …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Dec 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-12-12:/2017_12_12-the_business_of_book_promotions.html</guid><category>Technologies</category><category>@PacktAuthors</category><category>#python</category><category>marketing promotion</category></item><item><title>Functional Requirements and Use Cases -- even for "simple" things</title><link>https://slott56.github.io/2017_12_05-functional_requirements_and_use_cases_even_for_simple_things.html</link><description>&lt;p&gt;In the mailbag I found this nonsense, doomed to inevitable failure:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;As I get more serious about this data science stuff, it has become
obvious that a windows machine is not the way to go. ...
Q1: What other things should I think about and consider while
shopping for a new …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Dec 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-12-05:/2017_12_05-functional_requirements_and_use_cases_even_for_simple_things.html</guid><category>Architecture &amp; Design</category><category>requirements</category><category>use case</category><category>architecture</category></item><item><title>DC API User Group - December Edition</title><link>https://slott56.github.io/2017_11_28-dc_api_user_group_december_edition.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.meetup.com/DC-Web-API-User-Group"&gt;https://www.meetup.com/DC-Web-API-User-Group&lt;/a&gt;
&lt;a class="reference external" href="https://www.meetup.com/DC-Web-API-User-Group/events/245014240/"&gt;https://www.meetup.com/DC-Web-API-User-Group/events/245014240/&lt;/a&gt;
Nice bunch of people. Nice facility. Good discussions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Nov 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-11-28:/2017_11_28-dc_api_user_group_december_edition.html</guid><category>Technologies</category><category>API Design</category><category>meetup</category></item><item><title>CI/CD DevOps and Python</title><link>https://slott56.github.io/2017_11_14-cicd_devops_and_python.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.slideshare.net/ITRevolution/does-sfo-2016-topo-pal-devops-at-capital-one"&gt;https://www.slideshare.net/ITRevolution/does-sfo-2016-topo-pal-devops-at-capital-one&lt;/a&gt; for
the 16 gates that separate a good idea from secure, productive use of
software. While a lot of DevOps folks like the idea, when it comes to
implementing it for Python apps, they get confused.&lt;/p&gt;
&lt;p&gt;The confusion seems to stem from Python's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Nov 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-11-14:/2017_11_14-cicd_devops_and_python.html</guid><category>Technologies</category><category>DevOps</category><category>#python</category><category>continuous integration</category><category>continuous deployment</category></item><item><title>Python Type Hinting -- generally easy until you find your design flaws</title><link>https://slott56.github.io/2017_11_07-python_type_hinting_generally_easy_until_you_find_your_design_flaws.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Adding type hints is easy and fun. Seriously. It's not a lot of work.&lt;/div&gt;
&lt;div class="line"&gt;Until.&lt;/div&gt;
&lt;div class="line"&gt;Until you find a piece of code that does more than what you sort-of
thought it kind-of did.&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
def null_aware_func(x):
    if x is None:
         return x
    return 2.2*x**1.05
&lt;/pre&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;This is …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Nov 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-11-07:/2017_11_07-python_type_hinting_generally_easy_until_you_find_your_design_flaws.html</guid><category>Technologies</category><category>#python</category></item><item><title>Some Reading</title><link>https://slott56.github.io/2017_10_31-some_reading.html</link><description>&lt;p&gt;Higher-Order Functions. A really cool idea. Javascript isn't my favorite
language.
&lt;a class="reference external" href="https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528"&gt;https://medium.freecodecamp.org/higher-order-functions-in-javascript-d9101f9cf528&lt;/a&gt;
This, on the other hand, is huge: trunk-based development.
&lt;a class="reference external" href="https://codeburst.io/trunk-based-development-vs-git-flow-a0212a6cae64"&gt;https://codeburst.io/trunk-based-development-vs-git-flow-a0212a6cae64&lt;/a&gt;
I'm really tired of having a dev branch with periodic commits to master
so we can deploy from master. It's so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Oct 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-10-31:/2017_10_31-some_reading.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Programming by Search, Copy, and Paste Leads to Epic Fail</title><link>https://slott56.github.io/2017_10_27-programming_by_search_copy_and_paste_leads_to_epic_fail.html</link><description>&lt;p&gt;In a way, this is about an epic fail attempting copy-and-paste coding.
But really, this is about thinking outside the box. The issue -- to me
-- comes from failing to see the box. Here's the body of the email,
edited slightly.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;...how determine when a file has completed downloading. It would …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 27 Oct 2017 18:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-10-27:/2017_10_27-programming_by_search_copy_and_paste_leads_to_epic_fail.html</guid><category>Technologies</category><category>Design Principles</category><category>#python</category><category>architecture</category></item><item><title>Why I like Functional Composition</title><link>https://slott56.github.io/2017_10_17-why_i_like_functional_composition.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;After spending years developing a level of mastery over Object
Oriented Design Patterns, I'm having a lot of fun understanding
Functional Design Patterns.&lt;/div&gt;
&lt;div class="line"&gt;The OO Design Patterns are helpful because they're concrete
expressions of the S. O. L. I. D. design principles. Much of the &amp;quot;Gang
of Four&amp;quot; book demonstrates …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Oct 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-10-17:/2017_10_17-why_i_like_functional_composition.html</guid><category>Technologies</category><category>functional python programming</category><category>functional programming</category><category>#python</category></item><item><title>Python Exercises</title><link>https://slott56.github.io/2017_10_10-python_exercises.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.ynonperek.com/2017/09/21/python-exercises/amp/"&gt;https://www.ynonperek.com/2017/09/21/python-exercises/amp/&lt;/a&gt;
This seems very cool. These look like some pretty cool problems. It
includes debugging and unit testing, so there's a lot of core skills
covered by these exercises.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Oct 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-10-10:/2017_10_10-python_exercises.html</guid><category>Technologies</category><category>#python</category></item><item><title>Learning to Code</title><link>https://slott56.github.io/2017_09_28-learning_to_code.html</link><description>&lt;p&gt;I know folks who struggle with the core concepts of writing software.
Some of them are IT professionals. With jobs. They can't really code. It
seems like they don't understand it.
Maybe &lt;a class="reference external" href="https://medium.freecodecamp.org/a-gentler-introduction-to-programming-707453a79ee8"&gt;a gentler introduction to
programming&lt;/a&gt;
will help?
I have my doubts. The folks who seem to struggle the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Sep 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-09-28:/2017_09_28-learning_to_code.html</guid><category>Technologies</category><category>learning</category><category>Programming Languages</category></item><item><title>Learning About Data Science</title><link>https://slott56.github.io/2017_09_26-learning_about_data_science.html</link><description>&lt;p&gt;I work with data scientists. I am not a scientist.&lt;/p&gt;
&lt;p&gt;This kind of thing on &lt;a class="reference external" href="https://www.linkedin.com/groups/25827/25827-6311977646569984004"&gt;scikit
learn&lt;/a&gt;
is helpful for understanding what they're trying to do and how I can
help.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Sep 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-09-26:/2017_09_26-learning_about_data_science.html</guid><category>News</category><category>Data Science</category><category>pydata</category></item><item><title>Three Unsolvable Problems in Computing</title><link>https://slott56.github.io/2017_09_19-three_unsolvable_problems_in_computing.html</link><description>&lt;p&gt;The three unsolvable problems in computing:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Naming&lt;/li&gt;
&lt;li&gt;Distributed Cache Coherence&lt;/li&gt;
&lt;li&gt;Off-By-One Errors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's talk about naming.&lt;/p&gt;
&lt;p&gt;The project team decided to call the server component &amp;quot;FlaskAPI&amp;quot;.&lt;/p&gt;
&lt;p&gt;Seriously.&lt;/p&gt;
&lt;p&gt;It serves information about two kinds of resources: images and running
instances of images. (Yes, it's a kind of kubernetes/dockyard lite
that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Sep 2017 08:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-09-19:/2017_09_19-three_unsolvable_problems_in_computing.html</guid><category>Technologies</category><category>#python</category><category>flask</category><category>architecture</category><category>microservices</category></item><item><title>The No Code Approach to Software and Why It Might Be Bad</title><link>https://slott56.github.io/2017_09_12-the_no_code_approach_to_software_and_why_it_might_be_bad.html</link><description>&lt;p&gt;Start
here: &lt;a class="reference external" href="https://www.forbes.com/sites/jasonbloomberg/2017/07/20/the-low-codeno-code-movement-more-disruptive-than-you-realize/#98cfc4a722a3"&gt;https://www.forbes.com/sites/jasonbloomberg/2017/07/20/the-low-codeno-code-movement-more-disruptive-than-you-realize/#98cfc4a722a3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm not impressed. I have been not impressed for 40 years and many
previous incarnations of this idea of replacing code with UX.&lt;/p&gt;
&lt;p&gt;Of course, I'm biased. I create code. Tools that remove the need to
create …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Sep 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-09-12:/2017_09_12-the_no_code_approach_to_software_and_why_it_might_be_bad.html</guid><category>Technologies</category><category>knowledge capture</category><category>Design Principles</category></item><item><title>Seven Performance Tips</title><link>https://slott56.github.io/2017_09_05-seven_performance_tips.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/896029760576512001/-aQIRO0R_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Packt(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/packtpub?refsrc=email&amp;amp;s=11"&gt;&amp;#64;PacktPub&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/packtpub/status/904645223942422528?refsrc=email&amp;amp;s=11"&gt;9/4/17, 6:00 AM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Want to improve your &lt;a class="reference external" href="https://twitter.com/search?q=%23Python&amp;amp;src=hash"&gt;#Python&lt;/a&gt;
performance? We've got 7 great tips for you: &lt;a class="reference external" href="https://t.co/I0dwFX5jmV"&gt;bit.ly/28YiGeE&lt;/a&gt;
via &lt;a class="reference external" href="https://twitter.com/ggzes"&gt;&amp;#64;ggzes&lt;/a&gt; &lt;a class="reference external" href="https://twitter.com/search?q=%23CodingTips&amp;amp;src=hash"&gt;#CodingTips&lt;/a&gt;
&lt;a class="reference external" href="https://t.co/cGhoGyTSS9"&gt;pic.twitter.com/cGhoGyTSS9&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
I have one thing to add: Learn to use the profiler and timeit. They
will eliminate and hand-wringing …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Sep 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-09-05:/2017_09_05-seven_performance_tips.html</guid><category>Technologies</category><category>performance</category><category>#python</category></item><item><title>The Pipeline Question when Bashing the Bash</title><link>https://slott56.github.io/2017_08_29-the_pipeline_question_when_bashing_the_bash.html</link><description>&lt;p&gt;Background: &lt;a class="reference external" href="https://medium.com/capital-one-developers/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989"&gt;https://medium.com/capital-one-developers/bashing-the-bash-replacing-shell-scripts-with-python-d8d201bc0989&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And this&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I wonder how/why python did not pick up some sort/form of pipe
operator. 🤨
(although coroutine does have .send method 🤔)&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Ivan Pejić (&amp;#64;nadrimajstor) &lt;a class="reference external" href="https://twitter.com/nadrimajstor/status/901235806714679296"&gt;August 26,
2017&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The answer to this is interesting because there are two kinds of
parallelism. I like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Aug 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-08-29:/2017_08_29-the_pipeline_question_when_bashing_the_bash.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>bash</category><category>software design</category></item><item><title>Refusing to Code. Or. How to help the incurious?</title><link>https://slott56.github.io/2017_08_08-refusing_to_code_or_how_to_help_the_incurious.html</link><description>&lt;p&gt;The emphasis on code is important. Code defines the behavior of systems
-- for the most part Once upon a time, we used clever mechanical
designs, or discrete electronic components. The InternetofThings idea
exists because high-powered general-purposes CPU's are ubiquitous.&lt;/p&gt;
&lt;p&gt;A DevOps mantra is &amp;quot;infrastructure as code&amp;quot;. The entire deployment is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Aug 2017 08:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-08-08:/2017_08_08-refusing_to_code_or_how_to_help_the_incurious.html</guid><category>Technologies</category><category>#python</category><category>learning</category></item><item><title>Other Entries Other Blogs</title><link>https://slott56.github.io/2017_08_08-other_entries_other_blogs.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://medium.com/&amp;#64;s_lott"&gt;https://medium.com/&amp;#64;s_lott&lt;/a&gt;
Plus, of course, lots of other stuff from lots of other folks. Enjoy.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Aug 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-08-08:/2017_08_08-other_entries_other_blogs.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>noSQL</category></item><item><title>JSON vs. XML: The battle for format supremacy may be wasted energy - SD Times</title><link>https://slott56.github.io/2017_08_01-json_vs_xml_the_battle_for_format_supremacy_may_be_wasted_energy_sd_times.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://sdtimes.com/json-vs-xml-battle-format-supremacy-may-wasted-energy/"&gt;http://sdtimes.com/json-vs-xml-battle-format-supremacy-may-wasted-energy/&lt;/a&gt;
This article seems silly. Perhaps I missed something important.
I'm not sure who's still litigating the JSON vs. XML, but it seems like
it's more-or-less done.
XHTML/XML for HTML things.
JSON for everything else.
Maybe there are people still wringing their hands over this. AFAIK …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Aug 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-08-01:/2017_08_01-json_vs_xml_the_battle_for_format_supremacy_may_be_wasted_energy_sd_times.html</guid><category>Technologies</category><category>json</category><category>xml</category></item><item><title>The "My Code Is Precious To Me" Conundrum</title><link>https://slott56.github.io/2017_07_25-the_my_code_is_precious_to_me_conundrum.html</link><description>&lt;p&gt;I suspect some people sweat so hard over each line of code that it
becomes precious. Valuable. An investment wrung from their very soul. Or
something.
When they ask for comments, it becomes difficult.
The Pull Request context can be challenging. There the code is, beaten
into submission after Herculean …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Jul 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-07-25:/2017_07_25-the_my_code_is_precious_to_me_conundrum.html</guid><category>Technologies</category><category>Design Principles</category></item><item><title>Yet Another Python Problem List</title><link>https://slott56.github.io/2017_07_18-yet_another_python_problem_list.html</link><description>&lt;p&gt;This was a cool thing to see in my Twitter feed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/779041781413507072/TaqJsdzS_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Dan Bader(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org?refsrc=email&amp;amp;s=11"&gt;&amp;#64;dbader_org&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org/status/876994766227075072?refsrc=email&amp;amp;s=11"&gt;6/19/17, 10:47PM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Why Python Is Not My FavoriteLanguage&amp;quot;&lt;a class="reference external" href="https://t.co/Nq4p3zZr6s"&gt;zenhack.net/2016/12/25/why…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;More Problems with Python. Here's the short list.
1. Encapsulation (Inheritance, really.)
2. With Statement
3. Decorators
4. Duck …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jul 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-07-18:/2017_07_18-yet_another_python_problem_list.html</guid><category>Technologies</category><category>#python</category></item><item><title>Extracting Data Subsets and Design By Composition</title><link>https://slott56.github.io/2017_07_11-extracting_data_subsets_and_design_by_composition.html</link><description>&lt;p&gt;The request was murky. It evolved over time to this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Create a function file_record_selection(train.csv, 2, 100,
train_2_100.csv)&lt;/p&gt;
&lt;p&gt;First parameter: input file name (train.csv)&lt;/p&gt;
&lt;p&gt;Second parameter: first record to include (2)&lt;/p&gt;
&lt;p&gt;Third parameter: last record to include (100)&lt;/p&gt;
&lt;p&gt;Fourth parameter: output file name (train_2_100.csv)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fundamentally, this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jul 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-07-11:/2017_07_11-extracting_data_subsets_and_design_by_composition.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category></item><item><title>Python and Performance</title><link>https://slott56.github.io/2017_07_05-python_and_performance.html</link><description>&lt;p&gt;Real Question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the standard problems that keeps coming up over and over is
the parsing of url's. A sub-problem is the parsing of domain and
sub-domains and getting a count.&lt;/p&gt;
&lt;p&gt;For example&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.theatlantic.com/video/index/374880/living-alone-on-a-sailboat/"&gt;https://www.theatlantic.com/video/index/374880/living-alone-on-a-sailboat/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It would be nice to parse the received …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 05 Jul 2017 09:48:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-07-05:/2017_07_05-python_and_performance.html</guid><category>Technologies</category><category>performance</category><category>#python</category></item><item><title>OOP and FP -- Objects vs. Functional -- Avoiding reductionist thinking</title><link>https://slott56.github.io/2017_06_27-oop_and_fp_objects_vs_functional_avoiding_reductionist_thinking.html</link><description>&lt;p&gt;Real Quote (lightly edited to remove tangential nonsense.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Recently, I watched a video and it stated that OO is about nouns and
Functional programming is about the verbs. Also, ... Aspect-Oriented
Programming with the e Verification Language  by David Robinson&lt;/p&gt;
&lt;p&gt;It would be nice to have a blog post which summarized …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Jun 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-27:/2017_06_27-oop_and_fp_objects_vs_functional_avoiding_reductionist_thinking.html</guid><category>Technologies</category><category>object-oriented programming</category><category>#python</category><category>functional programming</category></item><item><title>NMEA Data Acquisition -- An IoT Exercise with Python</title><link>https://slott56.github.io/2017_06_20-nmea_data_acquisition_an_iot_exercise_with_python.html</link><description>&lt;p&gt;Here's the code: &lt;a class="reference external" href="https://github.com/slott56/NMEA-Tools"&gt;https://github.com/slott56/NMEA-Tools&lt;/a&gt;. This is Python
code to do some Internet of Things (IoT) stuff. Oddly, even when
things connected by a point-to-point serial interface, it's still
often called IoT. Even though there's no &amp;quot;Internetworking.&amp;quot;&lt;/p&gt;
&lt;p&gt;Some IoT projects have a common arc: exploration, modeling, filtering …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jun 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-20:/2017_06_20-nmea_data_acquisition_an_iot_exercise_with_python.html</guid><category>Technologies</category><category>#python</category><category>IoT</category><category>internet of things</category><category>nmea</category></item><item><title>Python Resources</title><link>https://slott56.github.io/2017_06_16-python_resources.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://opensource.com/tags/python"&gt;https://opensource.com/tags/python&lt;/a&gt;
Red Hat was an early adopter, putting Python-based tools into their
distros.
Sadly, they've also lagged behind. They haven't gotten much beyond
Python 2.6 or maybe 2.7.
RHEL is really good. Except for the Python problem.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 16 Jun 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-16:/2017_06_16-python_resources.html</guid><category>Technologies</category><category>#python</category><category>linux</category></item><item><title>Another "Problems With Python" List</title><link>https://slott56.github.io/2017_06_13-another_problems_with_python_list.html</link><description>&lt;p&gt;This: &lt;a class="reference external" href="https://darkf.github.io/posts/problems-i-have-with-python.html"&gt;https://darkf.github.io/posts/problems-i-have-with-python.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Summary.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Slow.&lt;/li&gt;
&lt;li&gt;Threads.&lt;/li&gt;
&lt;li&gt;Legacy Python 2 Code.&lt;/li&gt;
&lt;li&gt;Some Inconsistencies.&lt;/li&gt;
&lt;li&gt;Functional Programming.&lt;/li&gt;
&lt;li&gt;Class Definitions Don't Have Enough Features.&lt;/li&gt;
&lt;li&gt;Switch Statement.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Responses.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Find the 20% that needs a speedup and write that in C. Most of the
time that's already available in numpy. The …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Jun 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-13:/2017_06_13-another_problems_with_python_list.html</guid><category>Technologies</category><category>#python</category></item><item><title>Some Important Reading</title><link>https://slott56.github.io/2017_06_09-some_important_reading.html</link><description>&lt;p&gt;Several things:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://medium.com/&amp;#64;robertgrosse/generating-64-bit-hash-collisions-to-dos-python-5b21404a5306?source=emailShare-f2cdc4351994-1495320567"&gt;Generating 64 bit hash collisions to DOS
Python&lt;/a&gt;
by Robert Grosse&lt;/p&gt;
&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/779041781413507072/TaqJsdzS_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Dan Bader (&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org?refsrc=email&amp;amp;s=11"&gt;&amp;#64;dbader_org&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org/status/872260319447580672?refsrc=email&amp;amp;s=11"&gt;6/6/17, 9:14 PM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Python job scheduling made simple: &lt;a class="reference external" href="https://t.co/f28YzUHuab"&gt;schedule.readthedocs.io&lt;/a&gt; |                                   |&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Jun 2017 08:13:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-09:/2017_06_09-some_important_reading.html</guid><category>Technologies</category><category>#python</category></item><item><title>An Epic Fail Example</title><link>https://slott56.github.io/2017_06_06-an_epic_fail_example.html</link><description>&lt;p&gt;What's the most Epic Fail I've ever seen?&lt;/p&gt;
&lt;p&gt;I was a traveling consulting for almost 35 years. I saw a lot. I did
learn from epic fail scenarios. But. I haven't really spent a lot of
time thinking about the lessons learned there. I never have a glib
answer to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Jun 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-06-06:/2017_06_06-an_epic_fail_example.html</guid><category>Technologies</category><category>epic fail</category><category>database design</category></item><item><title>Ancient Software and A Small Value of "Works"</title><link>https://slott56.github.io/2017_05_30-ancient_software_and_a_small_value_of_works.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Blaming people for using ancient software is really weird.
There’s no other context where we demand constant replacement
of things that work&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Pinboard (&amp;#64;Pinboard) &lt;a class="reference external" href="https://twitter.com/Pinboard/status/863127228531519489"&gt;May 12, 2017&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm not sold about this argument at all.&lt;/p&gt;
&lt;p&gt;The &amp;quot;constant replacement&amp;quot; issue has two sides to it. If you follow
the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 30 May 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-30:/2017_05_30-ancient_software_and_a_small_value_of_works.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Python under XCode?!? Cool. Sort of.</title><link>https://slott56.github.io/2017_05_23-python_under_xcode_cool_sort_of.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/779041781413507072/TaqJsdzS_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Dan Bader (&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org?refsrc=email&amp;amp;s=11"&gt;&amp;#64;dbader_org&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org/status/860687313352970240?refsrc=email&amp;amp;s=11"&gt;5/5/17, 10:47 PM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;Running Python in Xcode: Step by Step&amp;quot;
&lt;a class="reference external" href="https://t.co/xukNX2yyu3"&gt;ericasadun.com/2016/12/04/run…&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thanks for the link. There's a fair amount of &amp;quot;this doesn't seem to
be what Xcode was designed to do.&amp;quot; But it does seem to work.
I'll …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 May 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-23:/2017_05_23-python_under_xcode_cool_sort_of.html</guid><category>Technologies</category><category>macosx</category><category>#python</category></item><item><title>Needless Complexity -- Creating Havoc Leads to Mistakes</title><link>https://slott56.github.io/2017_05_16-needless_complexity_creating_havoc_leads_to_mistakes.html</link><description>&lt;p&gt;I received the worst code example ever. The. Worst.&lt;/p&gt;
&lt;p&gt;Here's the email.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I have hurriedly created a blog post titled [omitted] at the url
below
[also omitted]
...
Unfortunately, I am neither an algorithm expert or a Python expert.
However, I am willing to jump in.&lt;/p&gt;
&lt;p&gt;Please review the Python code …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 May 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-16:/2017_05_16-needless_complexity_creating_havoc_leads_to_mistakes.html</guid><category>Technologies</category><category>algorithm</category><category>#python</category><category>analysis</category></item><item><title>Literate Programming Life Cycle</title><link>https://slott56.github.io/2017_05_13-literate_programming_life_cycle.html</link><description>&lt;p&gt;The question is a deep one. What is the Literate Programming Life
Cycle? Why is it so difficult? What are the three barriers and how do
we cross them?&lt;/p&gt;
&lt;p&gt;Here's most of the original question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Last week I threw together an F# script to parse markdown-style
text into one or …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 13 May 2017 10:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-13:/2017_05_13-literate_programming_life_cycle.html</guid><category>Technologies</category><category>#python</category><category>F#</category><category>literate programming</category></item><item><title>Fizz Buzz Overthought, Project Euler #1, and Unit Tests</title><link>https://slott56.github.io/2017_05_09-fizz_buzz_overthought_project_euler_1_and_unit_tests.html</link><description>&lt;p&gt;This. &lt;a class="reference external" href="http://www.tomdalling.com/blog/software-design/fizzbuzz-in-too-much-detail/"&gt;http://www.tomdalling.com/blog/software-design/fizzbuzz-in-too-much-detail/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And many other thoughts on overthinking fizz buzz. I'm going to
overthink it, also. Why not?&lt;/p&gt;
&lt;p&gt;This is a problem where the obvious unit test may not cover the cases
properly. See &lt;a class="reference external" href="https://projecteuler.net/problem=1"&gt;https://projecteuler.net/problem=1&lt;/a&gt; for a unit test case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 May 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-09:/2017_05_09-fizz_buzz_overthought_project_euler_1_and_unit_tests.html</guid><category>Technologies</category><category>functional python programming</category><category>#python</category></item><item><title>Functional Python, Literate Programming &amp; Trello Board Analysis</title><link>https://slott56.github.io/2017_05_02-functional_python_literate_programming_trello_board_analysis.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The general advice to people using Kanban/Agile Project boards of
various kinds is this:&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Stop Starting -- Start Finishing&lt;/strong&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.agilebuddha.com/agile/agile-thinking-stop-starting-start-finishing/"&gt;http://www.agilebuddha.com/agile/agile-thinking-stop-starting-start-finishing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.allaboutagile.com/stop-starting-start-finishing-unfinished-work-is-debt/"&gt;http://www.allaboutagile.com/stop-starting-start-finishing-unfinished-work-is-debt/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.leanagiletraining.com/key-problems/stop-starting-start-finishing/"&gt;http://www.leanagiletraining.com/key-problems/stop-starting-start-finishing/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;em&gt;etc&lt;/em&gt;.&lt;/div&gt;
&lt;div class="line"&gt;There's a lot of this advice. Some of it is helpful.&lt;/div&gt;
&lt;div class="line"&gt;Many tools …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 May 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-05-02:/2017_05_02-functional_python_literate_programming_trello_board_analysis.html</guid><category>Technologies</category><category>#python</category><category>literate programming</category><category>functional python programming</category></item><item><title>Modules vs. Monoliths vs. Microservices:</title><link>https://slott56.github.io/2017_04_25-modules_vs_monoliths_vs_microservices.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/779041781413507072/TaqJsdzS_normal.jpg" /&gt;
&lt;p&gt;&lt;strong&gt;Dan Bader(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org?refsrc=email&amp;amp;s=11"&gt;&amp;#64;dbader_org&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/dbader_org/status/855565565485887488?refsrc=email&amp;amp;s=11"&gt;4/21/17, 7:35 PM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Worth a read: &amp;quot;Modules vs. Microservices&amp;quot; (and how to find a middle ground)&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://t.co/5qrDhkSl7R"&gt;oreilly.com/ideas/modules-…&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;don't trick yourself into a microservices-only mindset&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Thanks for sharing.&lt;/p&gt;
&lt;p&gt;The referenced post gives you the freedom to have a &amp;quot;big-ish&amp;quot;
microservice. My …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Apr 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-25:/2017_04_25-modules_vs_monoliths_vs_microservices.html</guid><category>Technologies</category><category>gherkin</category><category>#python</category><category>tdd</category></item><item><title>The JavaScript phenomenon is a mass psychosis</title><link>https://slott56.github.io/2017_04_20-the_javascript_phenomenon_is_a_mass_psychosis.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://medium.com/&amp;#64;richardeng/the-javascript-phenomenon-is-a-mass-psychosis-57adebb09359?source=emailShare-f2cdc4351994-1491088025"&gt;The JavaScript phenomenon is a mass
psychosis&lt;/a&gt;
by Richard Kenneth Eng&lt;/p&gt;
&lt;p&gt;Interesting read.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Apr 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-20:/2017_04_20-the_javascript_phenomenon_is_a_mass_psychosis.html</guid><category>Technologies</category><category>#python</category><category>javascript</category></item><item><title>AWS "Serverless" Architecture Update -- Python 3.6 News</title><link>https://slott56.github.io/2017_04_19-aws_serverless_architecture_update_python_36_news.html</link><description>&lt;p&gt;This:
&lt;a class="reference external" href="https://aws.amazon.com/about-aws/whats-new/2017/04/aws-lambda-supports-python-3-6/"&gt;https://aws.amazon.com/about-aws/whats-new/2017/04/aws-lambda-supports-python-3-6/&lt;/a&gt;
You can now use Python 3.6 Lambdas. This changes things dramatically. We
can now write faster, simpler, less quirky code using the
latest-and-greatest Python.&lt;/p&gt;
&lt;p&gt;If you want to configure a server in the cloud, consider
this: &lt;a class="reference external" href="https://wiki.ubuntu.com/Python"&gt;https://wiki.ubuntu …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 19 Apr 2017 09:30:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-19:/2017_04_19-aws_serverless_architecture_update_python_36_news.html</guid><category>Technologies</category><category>#python</category><category>aws</category><category>lambda</category><category>cloud</category></item><item><title>Top Ten Articles from 2016</title><link>https://slott56.github.io/2017_04_18-top_ten_articles_from_2016.html</link><description>&lt;p&gt;This: &lt;a class="reference external" href="https://medium.mybridge.co/python-top-10-articles-for-the-past-year-v-2017-6033ae8c65c9"&gt;Python Top 10 Articles for the Past
Year (v.2017)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In particular, this: &lt;a class="reference external" href="https://eev.ee/blog/2016/07/31/python-faq-why-should-i-use-python-3/"&gt;Python FAQ: Why should I use
Python 3?&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Apr 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-18:/2017_04_18-top_ten_articles_from_2016.html</guid><category>Technologies</category><category>#python</category></item><item><title>Cool Work Environment</title><link>https://slott56.github.io/2017_04_11-cool_work_environment.html</link><description>&lt;p&gt;Parts of this were shot on my floor of my building.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://apple.co/business-capital-one"&gt;http://apple.co/business-capital-one&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To find out more,
visit &lt;a class="reference external" href="https://developer.capitalone.com/community/?io=true"&gt;https://developer.capitalone.com/community/?io=true&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Apr 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-11:/2017_04_11-cool_work_environment.html</guid><category>Technologies</category><category>apple</category><category>#python</category><category>tools</category></item><item><title>Coding and "Inspiration"</title><link>https://slott56.github.io/2017_04_04-coding_and_inspiration.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;img alt="Twitter Avater" src="https://pbs.twimg.com/profile_images/437332968768425984/hy1HDtPo_normal.jpeg" /&gt;
&lt;p&gt;&lt;strong&gt;Data Science Renee(&lt;/strong&gt;&lt;a class="reference external" href="https://twitter.com/becomingdatasci?refsrc=email&amp;amp;s=11"&gt;&amp;#64;BecomingDataSci&lt;/a&gt;&lt;strong&gt;)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://twitter.com/becomingdatasci/status/848262128050073601?refsrc=email&amp;amp;s=11"&gt;4/1/17, 3:53 PM&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Thread. Coding is inherently  frustrating. Expect that. But
with puzzle-solving healthy  attitude, keep going. Don't give up on yourself!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://t.co/8tXSQBXH7L"&gt;twitter.com/IsabellaGhemen…&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This thread includes some interesting topics. What hit me was the
idea of &amp;quot;inspiration-driven coding.&amp;quot;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Do you …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Apr 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-04-04:/2017_04_04-coding_and_inspiration.html</guid><category>Technologies</category><category>Design Principles</category><category>architecture</category></item><item><title>Linked-in Learning: Migrating from Python 2.7 to Python 3</title><link>https://slott56.github.io/2017_03_28-linked_in_learning_migrating_from_python_27_to_python_3.html</link><description>&lt;p&gt;Migrating from Python 2.7 to Python 3
with: Steven Lott
...is now available on LinkedIn Learning:
&lt;a class="reference external" href="https://www.linkedin.com/learning/migrating-from-python-2-7-to-python-3"&gt;https://www.linkedin.com/learning/migrating-from-python-2-7-to-python-3&lt;/a&gt;
and on Lynda.com:
&lt;a class="reference external" href="https://www.lynda.com/Python-tutorials/Migrating-from-Python-2-7-Python-3/560887-2.html"&gt;https://www.lynda.com/Python-tutorials/Migrating-from-Python-2-7-Python-3/560887-2.html&lt;/a&gt;
Course Description:
Are you still using Python 2.7? If you've been meaning to make …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Mar 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-03-28:/2017_03_28-linked_in_learning_migrating_from_python_27_to_python_3.html</guid><category>Technologies</category><category>continuous migration</category><category>#python</category></item><item><title>Simple CSV Transformations</title><link>https://slott56.github.io/2017_03_19-simple_csv_transformations.html</link><description>&lt;p&gt;Here's an interesting question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I came across your blog post &amp;quot;&lt;a class="reference external" href="https://github.com/slott56/introduction-python-csv"&gt;Introduction to using Python to
process CSV
files&lt;/a&gt;&amp;quot; as I'm
looking to do something I'd &lt;em&gt;think&lt;/em&gt; is easy in Python but I don't
know how to do it.&lt;/p&gt;
&lt;p&gt;I simply want to examine a column then create a new column …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 19 Mar 2017 07:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-03-19:/2017_03_19-simple_csv_transformations.html</guid><category>Technologies</category><category>csv</category><category>#python</category></item><item><title>Strange "I Hate Python" Concerns. Mostly nonsensical.</title><link>https://slott56.github.io/2017_03_14-strange_i_hate_python_concerns_mostly_nonsensical.html</link><description>&lt;p&gt;rom a troll-bait thread asking the argumentative question &amp;quot;why do
people use Python&amp;quot;? The answers were, oddly, a long list of strange,
nonsensical complaints. And a few logical fallacies. Here are all the
ones I could parse:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&amp;quot;It's the FORTRAN of our times.&amp;quot;&lt;/li&gt;
&lt;li&gt;It's the COBOL of our times.&lt;/li&gt;
&lt;li&gt;&amp;quot;deep …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Mar 2017 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-03-14:/2017_03_14-strange_i_hate_python_concerns_mostly_nonsensical.html</guid><category>Technologies</category><category>#python</category></item><item><title>Chain of Command Example</title><link>https://slott56.github.io/2017_03_07-chain_of_command_example.html</link><description>&lt;p&gt;One objective of the &lt;strong&gt;Chain of Command&lt;/strong&gt; design pattern is to be
able to write a bunch of functions that link together. The form a
chain of alternative implementations. The idea is the have
alternatives that vary in their ability to compute a correct answer.
If algorithm 1 doesn’t …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Mar 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-03-07:/2017_03_07-chain_of_command_example.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category></item><item><title>Open roles. Want to do more Python? Call us.</title><link>https://slott56.github.io/2017_03_02-open_roles_want_to_do_more_python_call_us.html</link><description>&lt;p&gt;Cloud/DevOps Engineer&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://capitalone.wd1.myworkdayjobs.com/Capital_One/job/Vienna-VA/Senior-Software-Engineer-DevOps_R19760-1"&gt;https://capitalone.wd1.myworkdayjobs.com/Capital_One/job/Vienna-VA/Senior-Software-Engineer-DevOps_R19760-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Polyglot Software Engineer&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://capitalone.wd1.myworkdayjobs.com/Capital_One/job/Vienna-VA/Senior-Software-Engineer-Polyglot_R19761-1"&gt;https://capitalone.wd1.myworkdayjobs.com/Capital_One/job/Vienna-VA/Senior-Software-Engineer-Polyglot_R19761-1&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 02 Mar 2017 20:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-03-02:/2017_03_02-open_roles_want_to_do_more_python_call_us.html</guid><category>Technologies</category><category>python</category><category>CapitalOne Jobs</category></item><item><title>Intro to Python CSV Processing for Actual Beginners</title><link>https://slott56.github.io/2017_02_21-intro_to_python_csv_processing_for_actual_beginners.html</link><description>&lt;p&gt;I've written a lot about CSV processing. Here are some
examples {tag}csv.&lt;/p&gt;
&lt;p&gt;It crops up in my books. A lot.&lt;/p&gt;
&lt;p&gt;In all cases, though, I make the implicit assumption that my readers
already know a lot of Python. This is a disservice to anyone who's
getting started.&lt;/p&gt;
&lt;div class="section" id="getting-started"&gt;
&lt;h2&gt;Getting Started …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Feb 2017 07:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-02-21:/2017_02_21-intro_to_python_csv_processing_for_actual_beginners.html</guid><category>Technologies</category><category>#python</category><category>tutorial</category><category>jupyter notebook</category><category>csv</category></item><item><title>Coding Camp vs. Computer Science</title><link>https://slott56.github.io/2017_02_11-coding_camp_vs_computer_science.html</link><description>&lt;p&gt;Step 1, read this: &amp;quot;&lt;a class="reference external" href="http://www.geekwire.com/2015/dear-geekwire-a-coding-bootcamp-is-not-a-replacement-for-a-computer-science-degree/?fb_action_ids=10206556712931323&amp;amp;fb_action_types=og.likes"&gt;Dear GeekWire: A coding bootcamp is not a
replacement for a computer science
degree&lt;/a&gt;&amp;quot;.
It's short, it won't hurt.&lt;/p&gt;
&lt;p&gt;I got this comment.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;The world runs in legacy code and the cs degrees focus on leading
edge&lt;/p&gt;
&lt;p&gt;Most of what is learned in cs [is] never …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 11 Feb 2017 09:54:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-02-11:/2017_02_11-coding_camp_vs_computer_science.html</guid><category>Technologies</category><category>innovation</category><category>education</category></item><item><title>NoSQL Database Doesn’t Mean No Schema</title><link>https://slott56.github.io/2017_02_08-nosql_database_doesnt_mean_no_schema.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="https://medium.com/capital-one-developers/nosql-database-doesnt-mean-no-schema-a824d591034e"&gt;NoSQL Database Doesn’t Mean No
Schema&lt;/a&gt;
It was fun to write. And the code works really nicely.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Feb 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-02-08:/2017_02_08-nosql_database_doesnt_mean_no_schema.html</guid><category>Technologies</category><category>#python</category><category>noSQL</category><category>jsonschema</category><category>swagger</category><category>json</category><category>schema migration</category></item><item><title>Writing Tools</title><link>https://slott56.github.io/2017_02_07-writing_tools.html</link><description>&lt;p&gt;Read
this: &lt;a class="reference external" href="http://thesweetsetup.com/apps/our-favorite-pro-writing-app-for-mac/"&gt;http://thesweetsetup.com/apps/our-favorite-pro-writing-app-for-mac/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What I have been doing instead of using these sophisticated,
integrated writing tools?&lt;/p&gt;
&lt;p&gt;I use OmniOutliner. &lt;a class="reference external" href="https://www.omnigroup.com/omnioutliner"&gt;https://www.omnigroup.com/omnioutliner&lt;/a&gt; I've used
it for years. It does a lot of things. Most notably, I can create
multiple columns so that I can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Feb 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-02-07:/2017_02_07-writing_tools.html</guid><category>Technologies</category><category>RST</category><category>docutils</category><category>writing</category><category>epub</category><category>tools</category></item><item><title>Improving the epub format -- hacking your ebooks</title><link>https://slott56.github.io/2017_01_31-improving_the_epub_format_hacking_your_ebooks.html</link><description>&lt;p&gt;From a reader.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I recently purchased a copy of 'Modern Python Cookbook' but I found
that the code listings in the epub file were indented which caused a
problem when reading on my tablet. (I reverted to epub as the PDF
version froze in the Bookari ereader software.)&lt;/p&gt;
&lt;p&gt;I unzipped …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Jan 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-01-31:/2017_01_31-improving_the_epub_format_hacking_your_ebooks.html</guid><category>Technologies</category><category>#python</category><category>epub</category></item><item><title>Irrelevant Feature Comparison</title><link>https://slott56.github.io/2017_01_17-irrelevant_feature_comparison.html</link><description>&lt;p&gt;A Real Email.&lt;/p&gt;
&lt;blockquote&gt;
So, please consider creating a blog post w/ a title something like
&amp;quot;Solving the Fred Flintstone Problem using Monads in Python and
Haskell&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;First. There's this: &lt;a class="reference external" href="https://pypi.python.org/pypi/PyMonad/"&gt;https://pypi.python.org/pypi/PyMonad/&lt;/a&gt; and
this: &lt;a class="reference external" href="http://www.valuedlessons.com/2008/01/monads-in-python-with-nice-syntax.html"&gt;http://www.valuedlessons.com/2008/01/monads-in-python-with-nice-syntax.html&lt;/a&gt;.
Also, see &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Type_class"&gt;https://en.wikipedia …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Jan 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-01-17:/2017_01_17-irrelevant_feature_comparison.html</guid><category>Technologies</category><category>#python</category><category>GW-Basic</category><category>haskell</category></item><item><title>The Depths of Degradation or How to Reduce</title><link>https://slott56.github.io/2017_01_09-the_depths_of_degradation_or_how_to_reduce.html</link><description>&lt;p&gt;Let's talk real-world functional programming. Disclosure: I'm a fan of
functional programming in Python.
(This: &lt;a class="reference external" href="https://www.packtpub.com/application-development/functional-python-programming"&gt;https://www.packtpub.com/application-development/functional-python-programming&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;The usual culprits for functional programming are map(), filter(),
generator functions, and the various comprehensions. This is very
pleasant and can lead to succinct, expressive code.&lt;/p&gt;
&lt;p&gt;The reduce operation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 09 Jan 2017 11:42:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-01-09:/2017_01_09-the_depths_of_degradation_or_how_to_reduce.html</guid><category>Technologies</category><category>map-reduce</category><category>functional python programming</category><category>#python</category></item><item><title>The "Build Script" Idea</title><link>https://slott56.github.io/2017_01_03-the_build_script_idea.html</link><description>&lt;p&gt;In compiled languages, the build script or makefile is pretty
important. Java has maven (and gradle and ant) for this job.&lt;/p&gt;
&lt;p&gt;Python doesn't really have much for this. Mostly because it's
needless.&lt;/p&gt;
&lt;p&gt;However.&lt;/p&gt;
&lt;p&gt;Some folks like the idea of a build script. I've been asked for
suggestions.&lt;/p&gt;
&lt;p&gt;First and foremost …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jan 2017 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2017-01-03:/2017_01_03-the_build_script_idea.html</guid><category>Technologies</category><category>sphinx</category><category>#python</category><category>pylint</category><category>pytest</category><category>tools</category><category>mypy</category></item><item><title>The Royal Road</title><link>https://slott56.github.io/2016_12_20-the_royal_road.html</link><description>&lt;p&gt;Warning: Long Boring Anecdote: Conclusions will be drawn from a single example.&lt;/p&gt;
&lt;p&gt;First, this quote:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;All your suggestions were great if I had wanted to do a systematic
study and truly understand. The goal is to understand and learn as
little as possible to be able to undertake the code …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Dec 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-12-20:/2016_12_20-the_royal_road.html</guid><category>Technologies</category><category>pandas</category><category>learning</category><category>#python</category></item><item><title>Amazing how Windows is “special.”</title><link>https://slott56.github.io/2016_12_13-amazing_how_windows_is_special.html</link><description>&lt;p&gt;Here's the quote:&lt;/p&gt;
&lt;blockquote&gt;
...it is amazing how Windows is “special.” Back when ..., special
things had to be done for Windows. Python continues the tradition w/
an entire section in its doco titled “3. Using Python on Windows”&lt;/blockquote&gt;
&lt;p&gt;I wasn't sure what to make of this.&lt;/p&gt;
&lt;p&gt;It appeared that they want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-12-13:/2016_12_13-amazing_how_windows_is_special.html</guid><category>Technologies</category><category>#python</category><category>windows</category><category>POSIX</category><category>linux</category></item><item><title>A Reason for Avoiding Programming</title><link>https://slott56.github.io/2016_11_29-a_reason_for_avoiding_programming.html</link><description>&lt;p&gt;From someone in the process of becoming a data scientist. They had a
question on regular expressions, which made almost no sense. It appears
that the core concepts of ETL -- Extracting source data, Transforming it
into a useful form and the Loading into some persistent storage for
long-term analysis -- had …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Nov 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-11-29:/2016_11_29-a_reason_for_avoiding_programming.html</guid><category>Technologies</category><category>#python</category><category>spreadsheet</category><category>Data Science</category><category>scipy</category></item><item><title>Handling Irregular File Formats</title><link>https://slott56.github.io/2016_11_28-handling_irregular_file_formats.html</link><description>&lt;p&gt;This is a common issue. We have a file which was printed for human
consumption. Consequently, it has many different kinds of lines.&lt;/p&gt;
&lt;p&gt;These are the two kinds of lines of interest:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;900296268 4/9/16 Mobility, Data Mining and Privacy Expired&lt;/p&gt;
&lt;p&gt;900295204 4/1/16 Pro .NET Best Practices …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Nov 2016 08:05:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-11-28:/2016_11_28-handling_irregular_file_formats.html</guid><category>Technologies</category><category>#python</category><category>regular expressions</category><category>physical format</category><category>logical layout</category></item><item><title>The Modern Python Cookbook</title><link>https://slott56.github.io/2016_11_22-the_modern_python_cookbook.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://www.packtpub.com/application-development/modern-python-cookbook"&gt;https://www.packtpub.com/application-development/modern-python-cookbook&lt;/a&gt;
This is a large (!) collection of recipes, focused on Python 3,
exclusively.
It's much easier to write about the version of Python I actually use
each day, and leave the old, quirky, slow Python 2 behind. This book
doesn't have any &amp;quot;this will …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-11-22:/2016_11_22-the_modern_python_cookbook.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Lynda.com Discounts, including SOLID Programming Principles</title><link>https://slott56.github.io/2016_11_16-lyndacom_discounts_including_solid_programming_principles.html</link><description>&lt;p&gt;For Python Programmers: &lt;a class="reference external" href="https://www.lynda.com/Programming-Languages-tutorials/SOLID-Programming-Principles/471978-2.html?lpk35=9090&amp;amp;utm_medium=ldc-partner&amp;amp;utm_source=CMPRC&amp;amp;utm_content=524&amp;amp;utm_campaign=CD20442&amp;amp;bid=524&amp;amp;aid=CD20442"&gt;SOLID Programming
Principles&lt;/a&gt;
&lt;a class="reference external" href="https://www.lynda.com/trial/StevenLott"&gt;https://www.lynda.com/trial/StevenLott&lt;/a&gt; should get your a discount on
&lt;strong&gt;all&lt;/strong&gt; Lynda.com courses.
Feel free to share the links.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Nov 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-11-16:/2016_11_16-lyndacom_discounts_including_solid_programming_principles.html</guid><category>Technologies</category><category>Design Principles</category><category>#python</category><category>SOLID</category></item><item><title>PyData DC 2016 -- YouTube Channel</title><link>https://slott56.github.io/2016_11_08-pydata_dc_2016_youtube_channel.html</link><description>&lt;p&gt;All The
Talks: &lt;a class="reference external" href="https://www.youtube.com/playlist?list=PLGVZCDnMOq0qLoYpkeySVtfdbQg1A_GiB"&gt;https://www.youtube.com/playlist?list=PLGVZCDnMOq0qLoYpkeySVtfdbQg1A_GiB&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You will learn a lot.&lt;/p&gt;
&lt;p&gt;Me: &lt;a class="reference external" href="https://www.youtube.com/watch?v=Zx3t7g2KU2Q&amp;amp;index=38&amp;amp;list=PLGVZCDnMOq0qLoYpkeySVtfdbQg1A_GiB"&gt;Steven Lott | NoSQL doesn't mean No
Schema&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.youtube.com/watch?v=pK8NCdfYq-M&amp;amp;index=45&amp;amp;list=PLGVZCDnMOq0qLoYpkeySVtfdbQg1A_GiB"&gt;Steven Lott | The Five Kinds of Python
Functions&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;You may learn something from my presentations.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Nov 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-11-08:/2016_11_08-pydata_dc_2016_youtube_channel.html</guid><category>Technologies</category><category>video</category><category>#python</category><category>pydata</category></item><item><title>PyData DC 2016 -- The Five Kinds of Python Functions [Updated]</title><link>https://slott56.github.io/2016_10_26-pydata_dc_2016_the_five_kinds_of_python_functions_updated.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://slott56.github.io/five-kinds-of-python-functions"&gt;https://slott56.github.io/five-kinds-of-python-functions&lt;/a&gt;
Update: &lt;a class="reference external" href="https://www.youtube.com/watch?v=pK8NCdfYq-M&amp;amp;index=45&amp;amp;list=PLGVZCDnMOq0qLoYpkeySVtfdbQg1A_GiB"&gt;Steven Lott | The Five Kinds of Python
Functions&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Oct 2016 07:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-10-26:/2016_10_26-pydata_dc_2016_the_five_kinds_of_python_functions_updated.html</guid><category>Technologies</category><category>pydata</category><category>#python</category><category>functional python programming</category></item><item><title>Speakers advice</title><link>https://slott56.github.io/2016_10_25-speakers_advice.html</link><description>&lt;p&gt;First. Read this: &lt;a class="reference external" href="http://webapplog.com/10-conf-donts/"&gt;http://webapplog.com/10-conf-donts/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some additional thoughts on the don't list.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Avoid&lt;/strong&gt; reading to your audience unless you are a poet, journalist,
judge or politician. Poets and journalists are paid to write well and
read there words well. Judges and politicians are paid to be ultra
precise …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Oct 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-10-25:/2016_10_25-speakers_advice.html</guid><category>Technologies</category><category>presentation</category></item><item><title>Optimizing complex generator expressions [Updated]</title><link>https://slott56.github.io/2016_10_20-optimizing_complex_generator_expressions_updated.html</link><description>&lt;p&gt;See this: &lt;a class="reference external" href="https://twitter.com/jakevdp/status/786920174595158018"&gt;https://twitter.com/jakevdp/status/786920174595158018&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The core expression is similar to this&lt;/p&gt;
&lt;pre class="literal-block"&gt;
y = (f(x) for x in L if f(x) is not None)
&lt;/pre&gt;
&lt;p&gt;There are a lot of variations on the filter. The point is that the
function appears twice in the above expression.&lt;/p&gt;
&lt;p&gt;We …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Oct 2016 19:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-10-20:/2016_10_20-optimizing_complex_generator_expressions_updated.html</guid><category>Technologies</category><category>generator expressions</category><category>functional python programming</category><category>#python</category></item><item><title>Alternatives to PowerPoint (or Keynote) for Presentations</title><link>https://slott56.github.io/2016_10_04-alternatives_to_powerpoint_or_keynote_for_presentations.html</link><description>&lt;p&gt;This: &lt;a class="reference external" href="https://opensource.com/business/16/9/alternatives-powerpoint"&gt;https://opensource.com/business/16/9/alternatives-powerpoint&lt;/a&gt;
Missing from the list? The S5-based &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/slide-shows.html"&gt;slide-show
tools&lt;/a&gt;
that are part of docutils.
The only issue with S5 is that you need to carefully review each and
every page to be sure you material fits. There's no autosizing of the
fonts, or …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Oct 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-10-04:/2016_10_04-alternatives_to_powerpoint_or_keynote_for_presentations.html</guid><category>Technologies</category><category>open source</category><category>presentation</category></item><item><title>Database Schema Migration</title><link>https://slott56.github.io/2016_09_27-database_schema_migration.html</link><description>&lt;p&gt;Some
thoughts: &lt;a class="reference external" href="http://workingwithdevs.com/delivering-databases-migrations-vs-state/"&gt;http://workingwithdevs.com/delivering-databases-migrations-vs-state/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This covers a lot of ground on the &lt;strong&gt;Declarative vs. Procedural&lt;/strong&gt;
question. It explains a lot of the considerations that lead to
choosing a procedural schema evolution vs. a declarative schema with
an implied change sequence to migrate to each new declared state.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Sep 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-09-27:/2016_09_27-database_schema_migration.html</guid><category>Technologies</category><category>data migration</category><category>database design</category><category>database administration</category><category>schema migration</category></item><item><title>Bad Trends and Sloppy Velocity</title><link>https://slott56.github.io/2016_09_21-bad_trends_and_sloppy_velocity.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read
this: &lt;a class="reference external" href="https://www.linkedin.com/pulse/story-points-evil-brad-black-in-the-market"&gt;https://www.linkedin.com/pulse/story-points-evil-brad-black-in-the-market&lt;/a&gt;-&lt;/div&gt;
&lt;div class="line"&gt;There are good quotes from Ron Jeffries on the worthlessness of story
points. (I've heard this from other Agile Consultants, also.) Story
Points are a political hack to make management stop measuring the
future.&lt;/div&gt;
&lt;div class="line"&gt;The future is very hard to measure. The …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 21 Sep 2016 18:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-09-21:/2016_09_21-bad_trends_and_sloppy_velocity.html</guid><category>Technologies</category><category>agile</category><category>project management</category></item><item><title>What was I thinking?</title><link>https://slott56.github.io/2016_09_20-what_was_i_thinking.html</link><description>&lt;p&gt;Check out this idiocy: &lt;a class="reference external" href="https://github.com/slott56/py-false"&gt;https://github.com/slott56/py-false&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;What is the point? Seriously. What. The. Actual. Heck?&lt;/p&gt;
&lt;p&gt;I think of it this way.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Languages are a cool thing. Especially programming languages where
there's an absolute test -- the Turing machine -- for completeness.&lt;/li&gt;
&lt;li&gt;The Forth-like stack language is a cool thing …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Sep 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-09-20:/2016_09_20-what_was_i_thinking.html</guid><category>Technologies</category><category>#python</category><category>py-false</category><category>interpreted</category><category>Programming Languages</category><category>forth</category></item><item><title>On One Aspect of Design Patterns -- Flexibility</title><link>https://slott56.github.io/2016_09_13-on_one_aspect_of_design_patterns_flexibility.html</link><description>&lt;p&gt;Something I forget to think about is the degree of detail or
granularity of design patterns.  I have my own viewpoint and I often
assume that others share it.&lt;/p&gt;
&lt;p&gt;Here's a quote from an email describing the PLoP (Pattern Languages of
Programs) patterns as quite distinct from the Gang of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Sep 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-09-13:/2016_09_13-on_one_aspect_of_design_patterns_flexibility.html</guid><category>Technologies</category><category>design</category><category>mastering object-oriented python</category></item><item><title>Programming language correlates with salary?</title><link>https://slott56.github.io/2016_09_06-programming_language_correlates_with_salary.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.bignerdranch.com/blog/which-programming-language-will-earn-you-the-highest-salary/"&gt;https://www.bignerdranch.com/blog/which-programming-language-will-earn-you-the-highest-salary/&lt;/a&gt;
Okay. I like that.
I wonder what the r&lt;sup&gt;2&lt;/sup&gt; value is.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Sep 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-09-06:/2016_09_06-programming_language_correlates_with_salary.html</guid><category>Technologies</category><category>#python</category></item><item><title>Obscure Standards, Packaged Products, Latent Bugs</title><link>https://slott56.github.io/2016_08_30-obscure_standards_packaged_products_latent_bugs.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="http://jeffq.com/blog/the-ethernet-pause-frame/"&gt;http://jeffq.com/blog/the-ethernet-pause-frame/&lt;/a&gt;
Fascinating.
A world of interconnected devices in which we place a kind of implicit
trust. There's little visibility for ordinary consumers. It takes a
skilled specialist to determine that there are flaws in a product.
It's not that the system is &amp;quot;flaky.&amp;quot;
It's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 30 Aug 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-08-30:/2016_08_30-obscure_standards_packaged_products_latent_bugs.html</guid><category>Technologies</category><category>internet of things</category><category>architecture</category></item><item><title>On Generator Functions, Yield and Return</title><link>https://slott56.github.io/2016_08_26-on_generator_functions_yield_and_return.html</link><description>&lt;p&gt;Here's the question, lightly edited to remove the garbage. (Sometimes
I'm charitable and call it &amp;quot;rambling&amp;quot;. Today, I'm not feeling
charitable about the garbage writing style filled with strange
assumptions instead of questions.)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;someone asked if you could have both a yield and a return in the same
... function/iterator …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 26 Aug 2016 07:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-08-26:/2016_08_26-on_generator_functions_yield_and_return.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category><category>generator functions</category></item><item><title>Twelve Important Design Patterns</title><link>https://slott56.github.io/2016_08_16-twelve_important_design_patterns.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read this: &lt;a class="reference external" href="http://12factor.net/"&gt;http://12factor.net/&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Then. After reading it. Read it again to be sure you've got it. It's
dense with best practices.&lt;/div&gt;
&lt;div class="line"&gt;Now that you've read it, make yourself a Quality Engineering
checklist.&lt;/div&gt;
&lt;div class="line"&gt;I. Codebase: One codebase tracked in revision control, many deploys&lt;/div&gt;
&lt;div class="line"&gt;II. Dependencies: Explicitly declare and isolate …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Aug 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-08-16:/2016_08_16-twelve_important_design_patterns.html</guid><category>Technologies</category><category>#python</category><category>flask</category><category>WebServices</category><category>REST</category></item><item><title>That Feeling When... You're reading your own documentation because it's useful and (mostly) correct</title><link>https://slott56.github.io/2016_08_09-that_feeling_when_youre_reading_your_own_documentation_because_its_useful_and_mostly_correct.html</link><description>&lt;p&gt;I'm looking at code (as a man does) and I can't remember if there's a
class that does X. There's a lot of code. I wrote almost all of it. And
-- maybe it's the gin -- but I just can't recall if there's an X. It
seems like there should be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Aug 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-08-09:/2016_08_09-that_feeling_when_youre_reading_your_own_documentation_because_its_useful_and_mostly_correct.html</guid><category>Technologies</category><category>RST</category><category>sphinx</category><category>docutils</category></item><item><title>Lamenting the Death of Object-Oriented Programming. (Sigh) Again?</title><link>https://slott56.github.io/2016_08_02-lamenting_the_death_of_object_oriented_programming_sigh_again.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://medium.com/&amp;#64;cscalfani/goodbye-object-oriented-programming-a59cda4c0e53#.oe5r8bgir"&gt;Goodbye, Object Oriented
Programming&lt;/a&gt;.
I don't want to say that the entire article is bunk. It's not. It raises
a few good points. Points which I thought were pretty well known.
What's aggravating is that this lamentation is overly broad.  It treats
all languages as if they're Java or …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Aug 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-08-02:/2016_08_02-lamenting_the_death_of_object_oriented_programming_sigh_again.html</guid><category>Technologies</category><category>functional programming</category><category>object-oriented design</category><category>object-oriented language</category></item><item><title>Another Python to the Rescue Story -- Creating a DSL from Python Class Definitions</title><link>https://slott56.github.io/2016_07_26-another_python_to_the_rescue_story_creating_a_dsl_from_python_class_definitions.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://medium.com/capital-one-developers/automating-nosql-database-builds-a-python-to-the-rescue-story-that-never-gets-old-1d9adbcf6792#.8xp69yxqj"&gt;https://medium.com/capital-one-developers/automating-nosql-database-builds-a-python-to-the-rescue-story-that-never-gets-old-1d9adbcf6792#.8xp69yxqj&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Jul 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-07-26:/2016_07_26-another_python_to_the_rescue_story_creating_a_dsl_from_python_class_definitions.html</guid><category>Technologies</category><category>#python</category></item><item><title>Getting Rid of the Gang-of-Four Design Patterns is Nonsense</title><link>https://slott56.github.io/2016_07_12-getting_rid_of_the_gang_of_four_design_patterns_is_nonsense.html</link><description>&lt;p&gt;Someone found Yet Another Post (YAP™) insisting that the Gang of Four
(GOF™) patterns were on their last legs. The email was misleading,
because this is not precisely what the article said. The bottom-line
was that Design Patterns in general are merely a response to gaps in
the underlying programming …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jul 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-07-12:/2016_07_12-getting_rid_of_the_gang_of_four_design_patterns_is_nonsense.html</guid><category>Technologies</category><category>C</category><category>#python</category><category>functional programming</category><category>object-oriented design</category><category>java</category></item><item><title>Why Python? (Sad Follow-up)</title><link>https://slott56.github.io/2016_06_21-why_python_sad_follow_up.html</link><description>&lt;p&gt;In &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2016_06_07-why_python_whats_it_good_for_how_is_it_special.html"&gt;Why Python?&lt;/a&gt;&amp;quot;
I linked to a deep and sophisticated analysis of programming
languages. Anyway, I thought it was a deep and sophisticated analysis.&lt;/p&gt;
&lt;p&gt;I got a reply that shows how wrong I was. Here's the quote:&lt;/p&gt;
&lt;p&gt;The point is that the Python ecosystem has a lot to offer. We …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jun 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-06-21:/2016_06_21-why_python_sad_follow_up.html</guid><category>Technologies</category><category>#python</category><category>scipy</category></item><item><title>Continuous Data Migration</title><link>https://slott56.github.io/2016_06_14-continuous_data_migration.html</link><description>&lt;p&gt;See {filename}/blog/2016/06/2016_06_10-database_conversion_or_schema_migration.rst&lt;/p&gt;
&lt;p&gt;People talk about CI/CD (Continuous Integration/Continuous
Deployment).&lt;/p&gt;
&lt;p&gt;They also need to talk about CM (Continuous Migration).&lt;/p&gt;
&lt;p&gt;&amp;quot;Wait, what?&amp;quot; you ask.&lt;/p&gt;
&lt;p&gt;When we roll out a new version of the software (CD) there are three
common situations.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The new software uses the …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jun 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-06-14:/2016_06_14-continuous_data_migration.html</guid><category>Technologies</category><category>data conversion</category><category>data migration</category><category>continuous migration</category><category>database design</category><category>continuous deployment</category><category>continuous integration</category></item><item><title>Database Conversion or Schema Migration</title><link>https://slott56.github.io/2016_06_10-database_conversion_or_schema_migration.html</link><description>&lt;p&gt;I was told a horror story about a bad database schema migration. Let's
call the author of the horror story HPL.&lt;/p&gt;
&lt;p&gt;HPL related a tale of woeful conversion problems from a mismanaged
schema migration.&lt;/p&gt;
&lt;p&gt;While I could feel HPL's pain, the reasons given for their pain were
wrong. They didn't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 10 Jun 2016 07:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-06-10:/2016_06_10-database_conversion_or_schema_migration.html</guid><category>Technologies</category><category>data conversion</category><category>database administration</category><category>software process improvement</category><category>agile</category><category>schema migration</category></item><item><title>Why Python? What's it good for? How is it special?</title><link>https://slott56.github.io/2016_06_07-why_python_whats_it_good_for_how_is_it_special.html</link><description>&lt;p&gt;First. The question is moot. It's a programming language. It's good for
programming.
When I push back, folks try to produce languages which exist only in
certain pigeon holes.
&amp;quot;You know. PHP is for web and JavaScript runs in the browser. What's
Python for?&amp;quot;
The PHP and JavaScript examples aren't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jun 2016 19:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-06-07:/2016_06_07-why_python_whats_it_good_for_how_is_it_special.html</guid><category>Technologies</category><category>#python</category></item><item><title>Why rewrite a shell script in Python?</title><link>https://slott56.github.io/2016_06_07-why_rewrite_a_shell_script_in_python.html</link><description>&lt;p&gt;Here's the actual quote:&lt;/p&gt;
&lt;blockquote&gt;
Why would you need to rewrite a working script in python ? Was there
any business direction towards this ?&lt;/blockquote&gt;
&lt;p&gt;This was an unexpected response. And unwelcome. I guess I called their
baby ugly.&lt;/p&gt;
&lt;p&gt;The short answer is that the shell script language is perhaps one of
the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jun 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-06-07:/2016_06_07-why_rewrite_a_shell_script_in_python.html</guid><category>Technologies</category><category>#python</category><category>bash</category><category>ksh</category><category>shell</category></item><item><title>The Lynda.com Experience</title><link>https://slott56.github.io/2016_05_03-the_lyndacom_experience.html</link><description>&lt;p&gt;One word: &amp;quot;wow&amp;quot;
More words: &amp;quot;Helping shy people get up and do what needs to be done.&amp;quot;
Yes, that's Garrison Keillor's tag line for one of the &amp;quot;sponsors&amp;quot; of &amp;quot;A
Prairie Home Companion&amp;quot;: the Powdermilk Biscuits company.  (&lt;em&gt;Heavens.
they're tasty and expeditious&lt;/em&gt;.)
The folks at Lynda are truly great at …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 May 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-05-03:/2016_05_03-the_lyndacom_experience.html</guid><category>Technologies</category><category>writing</category><category>video</category><category>lynda</category></item><item><title>A NoSQL Conversation</title><link>https://slott56.github.io/2016_04_19-a_nosql_conversation.html</link><description>&lt;p&gt;This cropped up recently. It's part of a &amp;quot;replace Mongo with
Relational DB&amp;quot; conversation.&lt;/p&gt;
&lt;p&gt;I'm going to elide the conversation down to five key points. The
three post-hoc nonsensical ideas, and the two real points.&lt;/p&gt;
&lt;p&gt;What's (to me) very telling is that someone else published the five
reasons in this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Apr 2016 18:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-04-19:/2016_04_19-a_nosql_conversation.html</guid><category>Technologies</category><category>mongodb</category><category>SQL</category><category>noSQL</category></item><item><title>The GUI Problem</title><link>https://slott56.github.io/2016_04_05-the_gui_problem.html</link><description>&lt;p&gt;I write Microservices. And not-so-micro Services. API's.&lt;/p&gt;
&lt;p&gt;I got this email recently.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Goal: get you to consider adding Gooey to your Python tool set&amp;quot;
&amp;quot;Gooey
What it's for: Turn a console-based Python program into one that sports
a platform-native GUI.
Why it's great: Presenting people, especially rank-and-file users, with
a …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Apr 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-04-05:/2016_04_05-the_gui_problem.html</guid><category>Technologies</category><category>#python</category><category>API Design</category><category>microservices</category></item><item><title>The Data Structures and Algorithms Problem</title><link>https://slott56.github.io/2016_03_29-the_data_structures_and_algorithms_problem.html</link><description>&lt;p&gt;Here's a snippet of an email&lt;/p&gt;
&lt;blockquote&gt;
In big data / data science, the curse of dimensionality keeps showing
up over and over. A good place to start is the wiki article “&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Curse_of_dimensionality"&gt;curse
of
dimensionality&lt;/a&gt;.”
The issue seems to be that a lot of these big data / data science
people have not …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Mar 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-03-29:/2016_03_29-the_data_structures_and_algorithms_problem.html</guid><category>Architecture &amp; Design</category><category>algorithm</category><category>dimensional data</category><category>Data Science</category></item><item><title>The Composite Builder Pattern, an Example of Declarative Programming [Update]</title><link>https://slott56.github.io/2016_03_17-the_composite_builder_pattern_an_example_of_declarative_programming_update.html</link><description>&lt;p&gt;I'm calling this the &lt;strong&gt;Composite Builder&lt;/strong&gt; pattern. This may have
other names, but I haven't seen them. It could simply be lack of
research into prior art. I suspect this isn't very new. But I thought
it was cool way to do some declarative Python programming.&lt;/p&gt;
&lt;p&gt;Here's the concept.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Mar 2016 08:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-03-17:/2016_03_17-the_composite_builder_pattern_an_example_of_declarative_programming_update.html</guid><category>Technologies</category><category>#python</category><category>functional python programming</category></item><item><title>PacktPub Looking For Python Projects</title><link>https://slott56.github.io/2016_03_15-packtpub_looking_for_python_projects.html</link><description>&lt;p&gt;Do you have a good project? Do you want to write?
The acquisition folks at Packt are looking for this:
&amp;quot;... demonstrate 4-5 projects over the course of the chapters in order
to demonstrate how to build scalable Python projects from scratch. These
projects cover some of the most important concepts …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Mar 2016 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-03-15:/2016_03_15-packtpub_looking_for_python_projects.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Dexy and word-processing toolchains</title><link>https://slott56.github.io/2016_03_01-dexy_and_word_processing_toolchains.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.dexy.it/"&gt;http://www.dexy.it&lt;/a&gt;
Wow. That seems cool.
I write. A lot.
I've tried a lot of tool chains. A lot. And I mean non-trivial &amp;quot;try&amp;quot;.
Whole books.  Hundreds of pages.
&lt;a class="reference external" href="https://pypi.python.org/pypi/leo/5.1"&gt;LEO&lt;/a&gt; + my own HTML Templates.
A lot of fun at first.  An outliner that generates RST is a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Mar 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-03-01:/2016_03_01-dexy_and_word_processing_toolchains.html</guid><category>Technologies</category><category>RST</category><category>#python</category><category>LaTeX</category><category>xml</category></item><item><title>SQL Hegemony and Document Databases</title><link>https://slott56.github.io/2016_02_16-sql_hegemony_and_document_databases.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;A surpassingly strange question is this: &amp;quot;How do I get the data out of
MongoDB into a spreadsheet?&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;The variation is &amp;quot;How can we load the MongoDB data into a relational
database?&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;I'm always perplexed by this question. It has a subtext that I find
baffling. The subtext is this …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Feb 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-02-16:/2016_02_16-sql_hegemony_and_document_databases.html</guid><category>Technologies</category><category>#python</category><category>noSQL</category><category>SQL</category><category>mongodb</category></item><item><title>The Spike Solution</title><link>https://slott56.github.io/2016_02_09-the_spike_solution.html</link><description>&lt;p&gt;I've had a lingering question about the &amp;quot;spike solution&amp;quot; phrase.
What's the etymology of this?&lt;/p&gt;
&lt;p&gt;For a long time, I thought of spike as in &amp;quot;nailing down some details.&amp;quot;&lt;/p&gt;
&lt;p&gt;Today, I found this: &lt;a class="reference external" href="http://agiledictionary.com/209/spike/"&gt;http://agiledictionary.com/209/spike/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I was wrong. I'm happy to see this explanation.&lt;/p&gt;
&lt;p&gt;The phrase appears …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Feb 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-02-09:/2016_02_09-the_spike_solution.html</guid><category>Technologies</category><category>etymology</category><category>Programming Languages</category></item><item><title>Why I don't want to share your screen -- OR -- What I learned from stackoverflow</title><link>https://slott56.github.io/2016_02_02-why_i_dont_want_to_share_your_screen_or_what_i_learned_from_stackoverflow.html</link><description>&lt;p&gt;I know it sounds arrogant, but I don't want to share your screen to sort
out a Python programming problem. I have two reasons and I think one of
them is a good one.&lt;/p&gt;
&lt;p&gt;It's both pedagogical and personal.&lt;/p&gt;
&lt;p&gt;Personally, I'm often left breathless by demos. Watching the cursor
fly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Feb 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-02-02:/2016_02_02-why_i_dont_want_to_share_your_screen_or_what_i_learned_from_stackoverflow.html</guid><category>Technologies</category><category>#python</category><category>training</category><category>building skills</category></item><item><title>SQL Hegemony -- the "Pivot Table" problem</title><link>https://slott56.github.io/2016_01_19-sql_hegemony_the_pivot_table_problem.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;As far as I can tell, the &lt;strong&gt;Pivot Table Problem™&lt;/strong&gt; only exists for
people who have actively put on blinders so that they can only see
data one way.&lt;/div&gt;
&lt;div class="line"&gt;This leads to the following.&lt;/div&gt;
&lt;div class="line"&gt;The context appears to be millions of rows of data. Hundreds of
columns.  It appears that …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Jan 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-01-19:/2016_01_19-sql_hegemony_the_pivot_table_problem.html</guid><category>Technologies</category><category>#python</category><category>database design</category><category>SQL</category></item><item><title>"Learn Python" is growing</title><link>https://slott56.github.io/2016_01_12-learn_python_is_growing.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://dzone.com/articles/learn-python-overtakes-learn-java"&gt;https://dzone.com/articles/learn-python-overtakes-learn-java&lt;/a&gt;
I've seen companies making sincere enterprise-wide commitments to doing
all data analysis in Python. There's no reason for quants and analysts
to struggle with Java.
I field one or two questions a week from folks pushing the in-house
envelope on data acquisition.
I also field …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jan 2016 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2016-01-12:/2016_01_12-learn_python_is_growing.html</guid><category>Technologies</category><category>#python</category><category>java</category></item><item><title>SQL Hegemony -- a sad state of affairs</title><link>https://slott56.github.io/2015_12_29-sql_hegemony_a_sad_state_of_affairs.html</link><description>&lt;p&gt;It appears that there are people who don't recognize SQL as a
tradeoff.&lt;/p&gt;
&lt;p&gt;Here's a complex two-part question that can only come from folks who
firmly believe in the magic of SQL.&lt;/p&gt;
&lt;p&gt;The sentence that got my attention was &amp;quot;Python has basically made SQL
obsolete as a language for data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Dec 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-12-29:/2015_12_29-sql_hegemony_a_sad_state_of_affairs.html</guid><category>Technologies</category><category>#python</category><category>performance</category><category>SQL</category><category>scalability</category></item><item><title>Coming Soon: Python for Secret Agents Part II</title><link>https://slott56.github.io/2015_12_22-coming_soon_python_for_secret_agents_part_ii.html</link><description>&lt;p&gt;I guess it's like a movie franchise or a series of novels. The first one
was popular. So, write a second story with similar characters.
You can check find part I
here: &lt;a class="reference external" href="http://www.amazon.com/gp/product/B00N2RWMMW/ref=dp-kindle-redirect?ie=UTF8&amp;amp;btkr=1"&gt;http://www.amazon.com/gp/product/B00N2RWMMW/ref=dp-kindle-redirect?ie=UTF8&amp;amp;btkr=1&lt;/a&gt;
and
here: &lt;a class="reference external" href="https://www.packtpub.com/hardware-and-creative/python-secret-agents"&gt;https://www.packtpub …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Dec 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-12-22:/2015_12_22-coming_soon_python_for_secret_agents_part_ii.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category><category>python for secret agents</category></item><item><title>Writing About Code -- Or -- Why I love RST</title><link>https://slott56.github.io/2015_12_15-writing_about_code_or_why_i_love_rst.html</link><description>&lt;p&gt;I blog. I write books. I write code. There are profound tool-chain
issues in all three of these. Mostly, I'm tired of shabby &amp;quot;What You
See Is All You Get&amp;quot; editing.&lt;/p&gt;
&lt;p&gt;First. I use this blogger site as well as a
&lt;a class="reference external" href="https://www.jivesoftware.com/"&gt;Jive-based&lt;/a&gt; site at work. They're
handy. But. There are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Dec 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-12-15:/2015_12_15-writing_about_code_or_why_i_love_rst.html</guid><category>Technologies</category><category>PyLit</category><category>literate programming</category></item><item><title>Lynda and Educational Content</title><link>https://slott56.github.io/2015_12_08-lynda_and_educational_content.html</link><description>&lt;p&gt;Just found &lt;a class="reference external" href="http://www.lynda.com/"&gt;http://www.lynda.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Unlike random YouTube videos, these are professionally edited.&lt;/p&gt;
&lt;p&gt;Not everything on YouTube is poorly edited. Some are really good.&lt;/p&gt;
&lt;p&gt;Having done a few webcasts for O'Reilly (and I have another scheduled
for January 2016,) I know that my &amp;quot;you knows&amp;quot; -- you know -- and my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Dec 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-12-08:/2015_12_08-lynda_and_educational_content.html</guid><category>Technologies</category><category>webcast</category><category>education</category></item><item><title>Python Big Picture -- What's the "roadmap"? [Revised]</title><link>https://slott56.github.io/2015_12_08-python_big_picture_whats_the_roadmap_revised.html</link><description>&lt;p&gt;Here's an interesting idea: &lt;a class="reference external" href="http://www.xmind.net/m/WvfC/"&gt;http://www.xmind.net/m/WvfC/&lt;/a&gt;
This is associated with the following question: &amp;quot;I've had a hard time
finding the Big Picture re: Python, and it makes it difficult ... to
proceed and prioritize my efforts without one.&amp;quot;&lt;/p&gt;
&lt;p&gt;An interesting question: what &lt;strong&gt;is&lt;/strong&gt; the overview or strategy …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Dec 2015 07:29:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-12-08:/2015_12_08-python_big_picture_whats_the_roadmap_revised.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>Navigation: Latitude, Longitude, Haversine, and all that</title><link>https://slott56.github.io/2015_11_24-navigation_latitude_longitude_haversine_and_all_that.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;For a few years, I was a tech nomad. See &lt;a class="reference external" href="http://www.itmaybeahack.com/TeamRedCruising/"&gt;Team Red
Cruising&lt;/a&gt; for some
stories of life on a sailboat. Warning: it's pretty dull.&lt;/div&gt;
&lt;div class="line"&gt;As a tech nomad, I lived and died (literally) by my ability to
navigate. Modern GPS devices make the dying part relatively unlikely.
So, let's …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Nov 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-11-24:/2015_11_24-navigation_latitude_longitude_haversine_and_all_that.html</guid><category>Technologies</category><category>longitude</category><category>#python</category><category>literate programming</category><category>haversine</category><category>latitude</category><category>navigation</category><category>navtools</category></item><item><title>Events: PyCon 2016, OSCon 2016</title><link>https://slott56.github.io/2015_11_17-events_pycon_2016_oscon_2016.html</link><description>&lt;p&gt;Many years ago ('07?) I went to my first PyCon. My situation changed and
I didn't get to another PyCon until last year.&lt;/p&gt;
&lt;p&gt;The story is a kind of major dumbosity. In '07 I could expense the
trip as education. In '08, I'd lost that feature of my employment.
After …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Nov 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-11-17:/2015_11_17-events_pycon_2016_oscon_2016.html</guid><category>Technologies</category><category>#python</category><category>oscon</category><category>pycon</category><category>education</category></item><item><title>Formatting Strings and the str.format() family of functions -- Python 3.4 Notes</title><link>https://slott56.github.io/2015_11_10-formatting_strings_and_the_strformat_family_of_functions_python_34_notes.html</link><description>&lt;p&gt;I have to be clear that I am obsessed with the str.format() family of
functions. I've happily left the string &lt;strong&gt;%&lt;/strong&gt; operator behind. I
recently re-discovered the vars() function.&lt;/p&gt;
&lt;p&gt;My current go-to technique for providing debugging information is
this:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
print( &amp;quot;note: local={local!r}, this={this!r}, that={that!r …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Nov 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-11-10:/2015_11_10-formatting_strings_and_the_strformat_family_of_functions_python_34_notes.html</guid><category>Technologies</category><category>#python</category><category>python essentials</category></item><item><title>Needlessly Redundant Overcommunication and DevOps</title><link>https://slott56.github.io/2015_11_03-needlessly_redundant_overcommunication_and_devops.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;At the &amp;quot;day job&amp;quot; I use a Windows laptop. It was essential for a
project I might have started, but didn't. So now I'm stuck with it
until the budgetary gods deem that it's been paid for and I can
request something more useful.  Mostly, however, Windows is fine. It …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Nov 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-11-03:/2015_11_03-needlessly_redundant_overcommunication_and_devops.html</guid><category>Technologies</category><category>DevOps</category></item><item><title>Why Computer Science for All is good for all</title><link>https://slott56.github.io/2015_10_31-why_computer_science_for_all_is_good_for_all.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://medium.com/&amp;#64;nycgov/an-open-letter-from-the-nation-s-tech-and-business-leaders-ca9894a4d125"&gt;An Open Letter from the Nation’s Tech and Business
Leaders&lt;/a&gt;:
Why Computer Science for All is good for all.
&amp;quot;These are the skills and competencies that will power the growth of
every industry...&amp;quot;
Civic leaders and educators need to be in on this. And professionals who
have skills to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 31 Oct 2015 16:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-31:/2015_10_31-why_computer_science_for_all_is_good_for_all.html</guid><category>Technologies</category><category>building skills books</category><category>education</category><category>training</category></item><item><title>The Internet of Things</title><link>https://slott56.github.io/2015_10_27-the_internet_of_things.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://www.relayr.io/wunderbar/"&gt;Wunderbar&lt;/a&gt;.
A whole bunch of nicely integrated data collection modules.
I prefer to hack around with &lt;a class="reference external" href="https://www.arduino.cc/"&gt;Arduino&lt;/a&gt;.  I'm
not sure why -- perhaps it's the lure of building approximately from
scratch.
But this is very cool. No soldering. Just start gathering data.
I have a half-built Arduino-based device to measure the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Oct 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-27:/2015_10_27-the_internet_of_things.html</guid><category>Technologies</category><category>arduino</category><category>hardware</category><category>internet of things</category></item><item><title>Chapters to Edit: What do I do instead?</title><link>https://slott56.github.io/2015_10_14-chapters_to_edit_what_do_i_do_instead.html</link><description>&lt;p&gt;I'm starting to get chapters back from the technical reviewers. This is
an important part of the writing process: correcting my mistakes and
clarifying things that confused the reviewers.&lt;/p&gt;
&lt;p&gt;Packt has had a uniformly excellent cadre of technical reviewers. At
this point, I've worked with something like a dozen people …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Oct 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-14:/2015_10_14-chapters_to_edit_what_do_i_do_instead.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Wait, there's more Python goodness from Packt</title><link>https://slott56.github.io/2015_10_13-wait_theres_more_python_goodness_from_packt.html</link><description>&lt;p&gt;This just in...&lt;/p&gt;
&lt;p&gt;Here's a link to the actual Python Week page, with all the deals there
for the week: &lt;a class="reference external" href="https://www.packtpub.com/packt/offers/pythonweek"&gt;https://www.packtpub.com/packt/offers/pythonweek&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They also have a week of free Python books too, which change daily:
&lt;a class="reference external" href="https://www.packtpub.com/packt/offers/free-learning/"&gt;https://www.packtpub.com/packt/offers/free-learning/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Feel free to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Oct 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-13:/2015_10_13-wait_theres_more_python_goodness_from_packt.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Python Week at Packt Publishing</title><link>https://slott56.github.io/2015_10_12-python_week_at_packt_publishing.html</link><description>&lt;p&gt;Go to &lt;a class="reference external" href="https://www.packtpub.com/"&gt;https://www.packtpub.com&lt;/a&gt;.
Look for the deal of the week.
Get 20% off Python titles.
You're welcome.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Oct 2015 06:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-12:/2015_10_12-python_week_at_packt_publishing.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Today's Milestone: Refactoring and Django Migrations</title><link>https://slott56.github.io/2015_10_06-todays_milestone_refactoring_and_django_migrations.html</link><description>&lt;p&gt;Once upon a time, when today's old folks were young, we'd debate the
two project strategies: Hard Part Do Later (HPDL) vs. Hard Part First
(HPF).&lt;/p&gt;
&lt;p&gt;The HPDL folks argued that you could pick away at the hard part until
-- eventually -- it wasn't hard any more. This doesn't often work …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Oct 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-10-06:/2015_10_06-todays_milestone_refactoring_and_django_migrations.html</guid><category>Technologies</category><category>Django</category><category>API Design</category></item><item><title>Python 3.5 and the Upgrade Strategy</title><link>https://slott56.github.io/2015_09_29-python_35_and_the_upgrade_strategy.html</link><description>&lt;p&gt;Start here: &lt;a class="reference external" href="https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-484"&gt;https://docs.python.org/3/whatsnew/3.5.html#whatsnew-pep-484&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While new syntax is important, remember your audience in pitching the
upgrade from Python 2.7. You may need to pander to people who aren't
programmers or don't really know Python.&lt;/p&gt;
&lt;p&gt;When selling the upgrade, it can help …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Sep 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-09-29:/2015_09_29-python_35_and_the_upgrade_strategy.html</guid><category>Technologies</category><category>#python</category></item><item><title>Python Tutor</title><link>https://slott56.github.io/2015_09_22-python_tutor.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read This:
&lt;a class="reference external" href="http://radar.oreilly.com/2015/08/learning-programming-at-scale.html"&gt;http://radar.oreilly.com/2015/08/learning-programming-at-scale.html&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;The core visualization tool
(&lt;a class="reference external" href="http://pythontutor.com/"&gt;pythontutor.com&lt;/a&gt;) can be helpful for
many people. The shared environments seem like a cool idea, also, but
I don't have any specific comments on the other tools.&lt;/div&gt;
&lt;div class="line"&gt;While this looks very cool, I'm not a …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Sep 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-09-22:/2015_09_22-python_tutor.html</guid><category>Technologies</category><category>#python</category><category>learning</category></item><item><title>Exploratory Data Analysis in Functional-Style Python</title><link>https://slott56.github.io/2015_09_15-exploratory_data_analysis_in_functional_style_python.html</link><description>&lt;p&gt;Here are some tricks to working with log file extracts. We're looking
at some Enterprise Splunk extracts. We can fiddle around with Splunk,
trying to explore the data. Or we can get a simple extract and fiddle
around with the data in Python.&lt;/p&gt;
&lt;p&gt;Running different experiments in Python seems to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Sep 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-09-15:/2015_09_15-exploratory_data_analysis_in_functional_style_python.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category><category>Data Science</category></item><item><title>Audio Synth in Python 3.4, Part II</title><link>https://slott56.github.io/2015_09_01-audio_synth_in_python_34_part_ii.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2015_08_30-audio_synth_updated.html"&gt;Audio Synth&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At first, I imagined the problem was going to be
&lt;a class="reference external" href="https://people.csail.mit.edu/hubert/pyaudio/"&gt;PyAudio&lt;/a&gt;. This package
has a bunch of installers. But the installers don't recognize Python
3.4, so none of them work for me. The common fallback plan is to install
from source, but, I couldn't find the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Sep 2015 17:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-09-01:/2015_09_01-audio_synth_in_python_34_part_ii.html</guid><category>Technologies</category><category>#python</category><category>pyaudio</category><category>pysynth</category></item><item><title>Audio Synth [Updated]</title><link>https://slott56.github.io/2015_08_30-audio_synth_updated.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I learned about synthesizers in the '70's using a Moog analog device.
Epic coolness.&lt;/div&gt;
&lt;div class="line"&gt;Nowadays, everything is digital. We use wave tables and (relatively)
simple additive synth techniques.&lt;/div&gt;
&lt;div class="line"&gt;I made the mistake of reading about Arduino wave table synthesis:&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://learning.codasign.com/index.php?title=Wavetable_Synthesis"&gt;http://learning.codasign.com/index.php?title=Wavetable_Synthesis&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;&lt;a class="reference external" href="http://makezine.com/projects/make-35/advanced-arduino-sound-synthesis/"&gt;http://makezine.com …&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 30 Aug 2015 09:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-08-30:/2015_08_30-audio_synth_updated.html</guid><category>Technologies</category><category>macosx</category><category>#python</category><category>pyaudio</category></item><item><title>Visual studio and Python</title><link>https://slott56.github.io/2015_08_25-visual_studio_and_python.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://blogs.msdn.com/b/visualstudio/archive/2015/08/03/why-write-python-in-visual-studio.aspx?imm_mid=0d6691&amp;amp;cmp=em-prog-na-na-newsltr_20150808"&gt;Why write Python in Visual
Studio?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That what I want to know, too.&lt;/p&gt;
&lt;p&gt;IntelliSense? &lt;a class="reference external" href="http://komodoide.com/"&gt;ActiveState Komodo&lt;/a&gt; does
this. And it does it very well considering the potential complexity
of trying to determine what identifiers are possibly valid in a
dynamic language.&lt;/p&gt;
&lt;p&gt;Debugger? No thanks. I haven't used it yet. [&lt;em&gt;I …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Aug 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-08-25:/2015_08_25-visual_studio_and_python.html</guid><category>Technologies</category><category>#python</category><category>VB</category></item><item><title>Mocking and Unit Testing and Test-Driven Development</title><link>https://slott56.github.io/2015_08_04-mocking_and_unit_testing_and_test_driven_development.html</link><description>&lt;p&gt;Mocking is essential to unit testing.&lt;/p&gt;
&lt;p&gt;However.&lt;/p&gt;
&lt;p&gt;It's also annoyingly difficult to get right.&lt;/p&gt;
&lt;p&gt;If we aren't 100% perfectly clear on what we're mocking, we will
merely canonize any dumb assumptions into mock objects that don't
&lt;em&gt;really&lt;/em&gt; work. They work in the sense that they don't crash, but they
don't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Aug 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-08-04:/2015_08_04-mocking_and_unit_testing_and_test_driven_development.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category></item><item><title>Amazon Reviews</title><link>https://slott56.github.io/2015_07_28-amazon_reviews.html</link><description>&lt;p&gt;Step 1. Go to &lt;a class="reference external" href="http://amazon.com/"&gt;amazon.com&lt;/a&gt; and look for one (or
more) of my Python books.&lt;/p&gt;
&lt;p&gt;Step 2. Have you read it?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Yes: Thanks! Consider posting a review.&lt;/li&gt;
&lt;li&gt;No: Hmmm.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;That's all. Consider doing this for other authors, also.&lt;/p&gt;
&lt;p&gt;Social media is its own weird economy. The currency seems to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Jul 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-07-28:/2015_07_28-amazon_reviews.html</guid><category>Technologies</category><category>ebook</category><category>packtpub</category></item><item><title>A Surprising Confusion</title><link>https://slott56.github.io/2015_07_21-a_surprising_confusion.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Well, it was surprising to me.&lt;/div&gt;
&lt;div class="line"&gt;And it should not have been a surprise.&lt;/div&gt;
&lt;div class="line"&gt;This is something I need to recognize as a standard confusion. And
rewrite some training material to better address this.&lt;/div&gt;
&lt;div class="line"&gt;The question comes up when SQL hackers move beyond simple queries and
canned desktop tools into …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jul 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-07-21:/2015_07_21-a_surprising_confusion.html</guid><category>Technologies</category><category>#python</category><category>map-reduce</category><category>functional python programming</category><category>python essentials</category><category>hadoop</category></item><item><title>Upgrading to Python 3</title><link>https://slott56.github.io/2015_07_14-upgrading_to_python_3.html</link><description>&lt;p&gt;Folks who don't use Python regularly -- the folks in TechOps, for
example -- are acutely aware that the Python 3 language is
&amp;quot;different,&amp;quot; and the upgrade should be done carefully. They've done
their homework, but, they're not &lt;em&gt;experts&lt;/em&gt; in everything.&lt;/p&gt;
&lt;p&gt;They feel the need to introduce Python 3 slowly and cautiously …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Jul 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-07-14:/2015_07_14-upgrading_to_python_3.html</guid><category>Technologies</category><category>#python</category></item><item><title>Python Essentials</title><link>https://slott56.github.io/2015_07_07-python_essentials.html</link><description>&lt;p&gt;Get Packt's &lt;a class="reference external" href="https://www.packtpub.com/application-development/python-essentials"&gt;Python
Essentials&lt;/a&gt;.
I think it covers a large number of important topics. Central to this is
Python 3.4.
The book covers Python 3 with few -- if any -- backward glances. If it
makes any mention of Python 2, the reference is strictly derogatory.
There isn't even a mention …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jul 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-07-07:/2015_07_07-python_essentials.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category></item><item><title>Literate Programming and GitHub</title><link>https://slott56.github.io/2015_06_23-literate_programming_and_github.html</link><description>&lt;p&gt;I remain captivated by the ideals of &lt;a class="reference external" href="http://www.literateprogramming.com/"&gt;Literate
Programming&lt;/a&gt;. My fork of PyLit
(&lt;a class="reference external" href="https://github.com/slott56/PyLit-3"&gt;https://github.com/slott56/PyLit-3&lt;/a&gt;) coupled with
&lt;a class="reference external" href="http://sphinx-doc.org/"&gt;Sphinx&lt;/a&gt; seems to handle LP programming in
a very elegant way.&lt;/p&gt;
&lt;p&gt;It works like this.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Write RST files describing the problem and the solution. This
includes the actual implementation code …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Jun 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-06-23:/2015_06_23-literate_programming_and_github.html</guid><category>Technologies</category><category>sphinx</category><category>#python</category><category>literate programming</category><category>PyLit</category><category>github</category></item><item><title>A plea to avoid sys.exit() [Updated]</title><link>https://slott56.github.io/2015_06_23-a_plea_to_avoid_sysexit_updated.html</link><description>&lt;p&gt;Let me gripe about this for a moment.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sys.exit()
&lt;/pre&gt;
&lt;p&gt;The use case for this function is limited. Very, very limited.&lt;/p&gt;
&lt;p&gt;Every place that this appears (except for one) is going to lead to
reusability issues.&lt;/p&gt;
&lt;p&gt;Consider some obscure little function, deep within the app.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def deep_within_the_app(x, y, zed …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Jun 2015 07:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-06-23:/2015_06_23-a_plea_to_avoid_sysexit_updated.html</guid><category>Technologies</category><category>#python</category></item><item><title>On "Taste" in Software Design</title><link>https://slott56.github.io/2015_06_16-on_taste_in_software_design.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="http://www.paulgraham.com/taste.html"&gt;http://www.paulgraham.com/taste.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I was originally focused on &amp;quot;beauty&amp;quot;. Clearly, good design is
beautiful. Isn't that obvious? Why so many words to explain the
obvious?&lt;/p&gt;
&lt;p&gt;The post seemed useless. Why write it in the first place? Why share
it? Why share it now, 12 years …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Jun 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-06-16:/2015_06_16-on_taste_in_software_design.html</guid><category>Technologies</category><category>software process improvement</category><category>software design</category><category>architecture</category></item><item><title>On Waiting to Write "Serious Code"</title><link>https://slott56.github.io/2015_06_10-on_waiting_to_write_serious_code.html</link><description>&lt;p&gt;Someone told me they weren't yet ready to write &amp;quot;serious code.&amp;quot; They
needed to spend more time doing something that's not coding.&lt;/p&gt;
&lt;p&gt;I'm unclear on &lt;strong&gt;what&lt;/strong&gt; they were doing. It appears they have some
barriers that I can't see.&lt;/p&gt;
&lt;p&gt;They had sample data. They had a problem statement. They had …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 10 Jun 2015 07:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-06-10:/2015_06_10-on_waiting_to_write_serious_code.html</guid><category>Technologies</category><category>object-oriented design</category><category>tools</category><category>software process improvement</category></item><item><title>On Pre-built Binaries for Python Packages</title><link>https://slott56.github.io/2015_06_02-on_pre_built_binaries_for_python_packages.html</link><description>&lt;p&gt;Or.
Why I Hate Windows.
For Mac OS X, you download XCode (for free) and you can build anything.
For Linux, you use some kind of yum or rpm installer for the developer
tools, and you can build anything.
For Windows...
Pre-built binaries. 😂
And a hope that the version numbers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Jun 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-06-02:/2015_06_02-on_pre_built_binaries_for_python_packages.html</guid><category>Technologies</category><category>macosx</category><category>#python</category><category>windows</category><category>linux</category></item><item><title>Regular Expression "Hell"</title><link>https://slott56.github.io/2015_05_26-regular_expression_hell.html</link><description>&lt;p&gt;Actual quote:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;they spend a lot of time maintaining regular
expressions. So, what are the alternatives to regular expression
hell?&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Regular Expression Hell? It's a thing?&lt;/p&gt;
&lt;p&gt;I have several thoughts:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Do you have metrics to support &amp;quot;a lot&amp;quot;?  I doubt it. It's very
difficult to tease RE maintenance away from …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 May 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-05-26:/2015_05_26-regular_expression_hell.html</guid><category>Technologies</category><category>regular expressions</category></item><item><title>More Thoughts on the friction of DevOps</title><link>https://slott56.github.io/2015_05_19-more_thoughts_on_the_friction_of_devops.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="http://jeffknupp.com/blog/2014/04/15/how-devops-is-killing-the-developer"&gt;How 'DevOps' is Killing the Developer&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;My pull-out quote:&lt;/p&gt;
&lt;blockquote&gt;
This is why we see so many developers that can't pass FizzBuzz: they
never really had to write any code.&lt;/blockquote&gt;
&lt;p&gt;I agree: &lt;a class="reference external" href="https://slott56.github.io/2015_03_10-it_appears_that_devops_may_be_more_symptom_than_solution.html"&gt;It appears that DevOps may be more symptom than solution&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have one tiny objection to any …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 May 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-05-19:/2015_05_19-more_thoughts_on_the_friction_of_devops.html</guid><category>Technologies</category><category>software process improvement</category><category>DevOps</category></item><item><title>Class Design Strategies -- analysis vs. synthesis</title><link>https://slott56.github.io/2015_05_13-class_design_strategies_analysis_vs_synthesis.html</link><description>&lt;p&gt;The conventional wisdom on class design is to model real-world things.
This is the Domain-Driven Design Approach. It's what we used to teach as
Rumbaugh's OMT (prior to the Three Amigos creating UML.)&lt;/p&gt;
&lt;p&gt;The idea is simple: Look at the real world objects. Describe them.
Classes will have attributes and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 13 May 2015 07:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-05-13:/2015_05_13-class_design_strategies_analysis_vs_synthesis.html</guid><category>Technologies</category><category>#python</category><category>analysis</category><category>object-oriented design</category></item><item><title>Scrum, Agile, and Modern Tools</title><link>https://slott56.github.io/2015_05_05-scrum_agile_and_modern_tools.html</link><description>&lt;p&gt;Required Reading: &lt;a class="reference external" href="https://www.pandastrike.com/posts/20150304-agile"&gt;https://www.pandastrike.com/posts/20150304-agile&lt;/a&gt;
My takeaway quote? &amp;quot;Scrum lags behind the modern toolchain enough that
there can be a Potemkin village vibe to the whole thing.&amp;quot;
I was clued into this from another takeaway quote someone seconded on
Twitter: &amp;quot;Waterfall used too much written communication, but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 May 2015 19:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-05-05:/2015_05_05-scrum_agile_and_modern_tools.html</guid><category>Management</category><category>waterfall</category><category>scrum</category><category>agile</category></item><item><title>Software Subscription fee? Or just Vapor-ware?</title><link>https://slott56.github.io/2015_04_28-software_subscription_fee_or_just_vapor_ware.html</link><description>&lt;p&gt;From a sound engineer I know:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.avid.com/US/products/pro-tools-software#Features"&gt;https://www.avid.com/US/products/pro-tools-software#Features&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the new Pro Tools, it's now a subscription, for a mere $200 a
year to stay current. However, if you peruse the list of new
features, they all say &amp;quot;coming soon&amp;quot;. You pay a …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Apr 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-04-28:/2015_04_28-software_subscription_fee_or_just_vapor_ware.html</guid><category>Technologies</category><category>budgeting</category><category>TCO</category></item><item><title>Proverbs and Bumper-Sticker Computer Science</title><link>https://slott56.github.io/2015_04_21-proverbs_and_bumper_sticker_computer_science.html</link><description>&lt;p&gt;There's much to learn. The idea of digesting knowledge down to a pithy
little proverb is interesting.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://github.com/AntJanus/programmers-proverbs"&gt;https://github.com/AntJanus/programmers-proverbs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://futurice.com/blog/programmer-proverbs"&gt;http://futurice.com/blog/programmer-proverbs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://quotes.cat-v.org/programming/bumper-sticker-computer-science"&gt;http://quotes.cat-v.org/programming/bumper-sticker-computer-science&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some of it's new to me. Some of it's timeless.&lt;/p&gt;
&lt;p&gt;Also, this
&lt;a class="reference external" href="http://www.bowdoin.edu/~ltoma/teaching/cs340/spring05/coursestuff/Bentley_BumperSticker.pdf"&gt;http://www.bowdoin.edu/~ltoma …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Apr 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-04-21:/2015_04_21-proverbs_and_bumper_sticker_computer_science.html</guid><category>Technologies</category><category>software process improvement</category><category>software design</category><category>knowledge capture</category></item><item><title>Java vs Python</title><link>https://slott56.github.io/2015_04_14-java_vs_python.html</link><description>&lt;p&gt;Seems silly at first.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://blogs.perceptionsystem.com/infographic/java-vs-python-programming-language-productive"&gt;http://blogs.perceptionsystem.com/infographic/java-vs-python-programming-language-productive&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It's mostly true. It's also incomplete.&lt;/p&gt;
&lt;p&gt;For example, &amp;quot;no tuples in Java&amp;quot; ignores
&lt;a class="reference external" href="http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/tuple/package-summary.html"&gt;http://commons.apache.org/proper/commons-lang/apidocs/org/apache/commons/lang3/tuple/package-summary.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It seems like the only interesting takeaway from the infographic is
that Java …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Apr 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-04-14:/2015_04_14-java_vs_python.html</guid><category>Technologies</category><category>java</category><category>#python</category></item><item><title>Going to PyCon 2015</title><link>https://slott56.github.io/2015_04_07-going_to_pycon_2015.html</link><description>&lt;p&gt;In Montreal! How cool is that?
I'll be working for my current employer, also a sponsor, to locate
Python talent.
I'll have a few copies of my books that I can give away.
Most importantly, the promotional code &lt;strong&gt;PYCON_LOTT&lt;/strong&gt; gives 50% off
my Packt titles and runs from April 7th …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Apr 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-04-07:/2015_04_07-going_to_pycon_2015.html</guid><category>Books</category><category>pycon</category><category>packtpub</category><category>functional python programming</category><category>python for secret agents</category><category>mastering object-oriented python</category></item><item><title>This is awkward</title><link>https://slott56.github.io/2015_03_31-this_is_awkward.html</link><description>&lt;p&gt;Years ago -- many years ago -- I self-published three books on Python.
I also set up a Google Group, &lt;a class="reference external" href="https://groups.google.com/forum/?hl=en#!forum/building-skills-books"&gt;Building Skills
Books&lt;/a&gt;,
for a discussion area.
For a while, I check my download logs carefully to see how the book was
being received.
Then I became a tech nomad, and commenced …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Mar 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-03-31:/2015_03_31-this_is_awkward.html</guid><category>Technologies</category><category>building skills books</category></item><item><title>Configuration Files, Environment Variables, and Command-Line Options</title><link>https://slott56.github.io/2015_03_24-configuration_files_environment_variables_and_command_line_options.html</link><description>&lt;p&gt;We have three major tiers of configuration for applications. Within
each tier, we have sub-tiers, larding on yet more complexity. The
organization of the layers is a bit fungible, too. Making good choices
can be rather complex because there are so many variations on the
theme of &amp;quot;configuration&amp;quot;. The desktop …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Mar 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-03-24:/2015_03_24-configuration_files_environment_variables_and_command_line_options.html</guid><category>Technologies</category><category>#python</category><category>configuration management</category></item><item><title>Building Skills in Object-Oriented Design</title><link>https://slott56.github.io/2015_03_18-building_skills_in_object_oriented_design.html</link><description>&lt;p&gt;New Kindle Edition of &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;Building Skills in Object-Oriented
Design&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It seems to work okay in my Kindle Readers.&lt;/p&gt;
&lt;p&gt;I'm not sure it's really formatted &lt;strong&gt;completely&lt;/strong&gt; appropriately. I'm
not a book designer. But before I fuss around with font sizes, I think
I need to spend some time on several more …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 Mar 2015 07:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-03-18:/2015_03_18-building_skills_in_object_oriented_design.html</guid><category>Technologies</category><category>packtpub</category><category>building skills books</category><category>object-oriented design</category></item><item><title>It appears that DevOps may be more symptom than solution</title><link>https://slott56.github.io/2015_03_10-it_appears_that_devops_may_be_more_symptom_than_solution.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;It appears that DevOps may be a symptom of a bigger problem. The
bigger problem? Java.&lt;/div&gt;
&lt;div class="line"&gt;Java development -- with a giant framework like Spring -- seems to
accrete layers and layers of stuff. And more stuff.  And bonus stuff
on top the the excess stuff.&lt;/div&gt;
&lt;div class="line"&gt;The in-house framework that's used on …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Mar 2015 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-03-10:/2015_03_10-it_appears_that_devops_may_be_more_symptom_than_solution.html</guid><category>Technologies</category><category>java</category><category>DevOps</category><category>spring framework</category></item><item><title>Let's all Build a Hat Rack</title><link>https://slott56.github.io/2015_03_03-lets_all_build_a_hat_rack.html</link><description>&lt;p&gt;Wound up here: &amp;quot;&lt;a class="reference external" href="http://hawthornlandings.org/2015/02/13/a-place-to-hang-your-hat/"&gt;A Place to Hang Your
Hat&lt;/a&gt;&amp;quot;
and the #LABHR hash tag.&lt;/p&gt;
&lt;p&gt;H/T to this post: &amp;quot;&lt;a class="reference external" href="http://holdenweb.blogspot.com/2015/02/building-hat-rack.html"&gt;Building a Hat
Rack&lt;/a&gt;.&amp;quot;&lt;/p&gt;
&lt;p&gt;This is a huge idea. I follow some folks from the &lt;a class="reference external" href="http://www.codeforamerica.org/brigade/"&gt;Code For
America&lt;/a&gt; group. The &lt;a class="reference external" href="https://plus.google.com/114627404839878604775"&gt;+Mark
Headd&lt;/a&gt;  Twitter feed
(&amp;#64;mheadd) is particularly helpful for understanding this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Mar 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-03-03:/2015_03_03-lets_all_build_a_hat_rack.html</guid><category>Technologies</category><category>open source</category><category>#codeforamerica</category><category>#LABHR</category></item><item><title>Functional Python Programming</title><link>https://slott56.github.io/2015_02_24-functional_python_programming.html</link><description>&lt;p&gt;New from Packt Publishing: &lt;a class="reference external" href="https://www.packtpub.com/application-development/functional-python-programming"&gt;Functional Python
Programming&lt;/a&gt;.
Also here on
&lt;a class="reference external" href="http://www.amazon.com/Functional-Python-Programming-Steven-Lott/Functional+Python+Programming"&gt;Amazon&lt;/a&gt;.
The fun part is covering generator functions, iterators, and
higher-order functions in some real depth. There's a lot of powerful
programming techniques available.
What's challenging is reconciling Python's approach to FP with languages
that are &lt;strong&gt;purely&lt;/strong&gt; functional like Haskell …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Feb 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-02-24:/2015_02_24-functional_python_programming.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category><category>functional programming</category></item><item><title>Yet Another Complaint about Python in General, SciPy in Particular</title><link>https://slott56.github.io/2015_02_17-yet_another_complaint_about_python_in_general_scipy_in_particular.html</link><description>&lt;p&gt;The context is an ongoing question about optimization -- not my strong
suit -- and the SciPy algorithms for this. See
&lt;a class="reference external" href="https://slott56.github.io/2014_10_09-scipyoptimizationanneal_problems.html"&gt;Scipy.optimization.anneal
Problems&lt;/a&gt; for
some additional confusion over simple things.&lt;/p&gt;
&lt;p&gt;The new quote is this:&lt;/p&gt;
&lt;blockquote&gt;
However, firing up Python, NumPy, SciPy and figuring out which solver
to use is not …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Feb 2015 07:59:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-02-17:/2015_02_17-yet_another_complaint_about_python_in_general_scipy_in_particular.html</guid><category>Technologies</category><category>#python</category><category>Data Science</category><category>Anaconda</category><category>scipy</category></item><item><title>The Most Diabolical Python Antipattern</title><link>https://slott56.github.io/2015_02_11-the_most_diabolical_python_antipattern.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="https://realpython.com/blog/python/the-most-diabolical-python-antipattern/"&gt;The Most Diabolical Python
Antipattern&lt;/a&gt;.
Now you've been told. You no longer have any excuses.
[Link fixed.]&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Feb 2015 07:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-02-11:/2015_02_11-the_most_diabolical_python_antipattern.html</guid><category>Technologies</category><category>#python</category></item><item><title>Idempotence, Hysteresis and Determinism</title><link>https://slott56.github.io/2015_02_05-idempotence_hysteresis_and_determinism.html</link><description>&lt;p&gt;Three terms that seem to cause confusion: Idempotence, Hysteresis and
Deterministic. The subject came up during my webcast on the &lt;a class="reference external" href="http://www.oreilly.com/pub/e/3255"&gt;Five Kinds
of Python Functions&lt;/a&gt;. We can use
all three terms to describe a function. Two of them are relevant to
common design questions in software. The third is a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 05 Feb 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-02-05:/2015_02_05-idempotence_hysteresis_and_determinism.html</guid><category>Technologies</category><category>algorithm</category><category>#python</category><category>architecture</category></item><item><title>Bottle vs. Flask vs. Django vs. a dozen others</title><link>https://slott56.github.io/2015_01_29-bottle_vs_flask_vs_django_vs_a_dozen_others.html</link><description>&lt;p&gt;There are times when a &amp;quot;micro framework&amp;quot; is actually useful. I wasn't
easily convinced that this could be true. Big framework or die trying.
Right?
Maybe not so right.
My primary example of a micro framework's value is a quick demo site to
show how some API's are going to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Jan 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-01-29:/2015_01_29-bottle_vs_flask_vs_django_vs_a_dozen_others.html</guid><category>Technologies</category><category>Django</category><category>flask</category><category>bottle</category><category>WebServices</category></item><item><title>Webcast Wednesday</title><link>https://slott56.github.io/2015_01_20-webcast_wednesday.html</link><description>&lt;p&gt;Be there: &lt;a class="reference external" href="http://www.oreilly.com/pub/e/3255"&gt;http://www.oreilly.com/pub/e/3255&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Of course, I've got too many slides. 58 slides for a 60 minute
presentation. That's really about 2 hours of material. Unless people
have questions, then it's a half-day seminar.&lt;/p&gt;
&lt;p&gt;Seriously.&lt;/p&gt;
&lt;p&gt;I think I've gone waaaay too far on this. But …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jan 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-01-20:/2015_01_20-webcast_wednesday.html</guid><category>Books</category><category>#python</category><category>python for secret agents</category><category>webcast</category><category>mastering object-oriented python</category></item><item><title>Chapter 12 Alternate Example - Normalization and Decorators</title><link>https://slott56.github.io/2015_01_15-chapter_12_alternate_example_normalization_and_decorators.html</link><description>&lt;p&gt;In the forthcoming &lt;em&gt;Functional Python Programming&lt;/em&gt;
(&lt;a class="reference external" href="https://www.packtpub.com/application-development/functional-python-programming"&gt;https://www.packtpub.com/application-development/functional-python-programming&lt;/a&gt;) I
was pressured by one of the technical reviewers to create a better
example of composite function creation with decorators.&lt;/p&gt;
&lt;p&gt;This was a difficult request. First, of course, &amp;quot;better&amp;quot; is poorly
defined. More importantly, the example in the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Jan 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-01-15:/2015_01_15-chapter_12_alternate_example_normalization_and_decorators.html</guid><category>Technologies</category><category>packtpub</category><category>#python</category><category>functional programming</category></item><item><title>The Python Challenge</title><link>https://slott56.github.io/2015_01_08-the_python_challenge.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.pythonchallenge.com/"&gt;http://www.pythonchallenge.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Addicting. For folks (like me) who like this kind of thing. For
others, perhaps just dumb. Or infuriating.&lt;/p&gt;
&lt;p&gt;Years ago -- many, many years ago -- I vaguely remember a similar game
with a name like &amp;quot;insanity&amp;quot; or something like that. Now there's
&lt;a class="reference external" href="http://www.notpron.com/"&gt;http://www.notpron.com …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 08 Jan 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-01-08:/2015_01_08-the_python_challenge.html</guid><category>Technologies</category><category>#python</category><category>learning</category></item><item><title>eLearning eXtravaganza</title><link>https://slott56.github.io/2015_01_01-elearning_extravaganza.html</link><description>&lt;p&gt;Visit Packt Publishing today for the $5 eBook Bonanza.&lt;/p&gt;
&lt;p&gt;What better way to celebrate the new year?&lt;/p&gt;
&lt;p&gt;Read. Learn. Grow.&lt;/p&gt;
&lt;p&gt;Find out more at &lt;a class="reference external" href="http://www.packtpub.com/packt5dollar#packt5dollar"&gt;http://www.packtpub.com/packt5dollar#packt5dollar&lt;/a&gt;&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://bit.ly/1zg0mpA"&gt;&lt;img alt="Packt $5 Promotional Picture" src="https://slott56.github.io/media/5-dollar-promo.jpg" style="width: 320px; height: 253px;" /&gt;&lt;/a&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Jan 2015 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2015-01-01:/2015_01_01-elearning_extravaganza.html</guid><category>Technologies</category><category>ebook</category><category>packtpub</category></item><item><title>Intro to Python Tutorial</title><link>https://slott56.github.io/2014_12_25-intro_to_python_tutorial.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://sophieclayton.github.io/2015-01-15-uw/novice/python/index.html"&gt;http://sophieclayton.github.io/2015-01-15-uw/novice/python/index.html&lt;/a&gt;
A very nice tutorial. It's Focused on a specific problem. It covers the
solution technology in some depth. I think the focus and depth features
are important. It's often tempting to cover the technical features
without really &lt;em&gt;solving&lt;/em&gt; a problem.
In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Dec 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-25:/2014_12_25-intro_to_python_tutorial.html</guid><category>Technologies</category><category>#python</category></item><item><title>Packt Deals</title><link>https://slott56.github.io/2014_12_23-packt_deals.html</link><description>&lt;p&gt;Okay. This seems shameless. But.
Here's the link  &lt;a class="reference external" href="http://bit.ly/1zg0mpA"&gt;http://bit.ly/1zg0mpA&lt;/a&gt;  straight to my book
information page
on &lt;a class="reference external" href="http://www.packtpub.com/"&gt;www.PacktPub.com&lt;/a&gt;.&lt;/p&gt;
&lt;a class="reference external image-reference" href="http://bit.ly/1zg0mpA"&gt;&lt;img alt="Packt $5 Promotional Picture" src="https://slott56.github.io/media/5-dollar-promo.jpg" style="width: 320px; height: 253px;" /&gt;&lt;/a&gt;
&lt;p&gt;I'm slowly coming to grips with the reality of marketing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Dec 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-23:/2014_12_23-packt_deals.html</guid><category>Books</category><category>python for secret agents</category><category>packtpub</category><category>mastering object-oriented python</category></item><item><title>Dev of the Week</title><link>https://slott56.github.io/2014_12_20-dev_of_the_week.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://java.dzone.com/articles/dev-week-steven-lott"&gt;http://java.dzone.com/articles/dev-week-steven-lott&lt;/a&gt;
Yes. Everyone is famous for 15 minutes.
And. &amp;quot;On the Web, everyone will be famous to fifteen people.&amp;quot;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 20 Dec 2014 08:38:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-20:/2014_12_20-dev_of_the_week.html</guid><category>Technologies</category><category>dzone</category></item><item><title>Making Learning Accessible</title><link>https://slott56.github.io/2014_12_20-making_learning_accessible.html</link><description>&lt;p&gt;Visit Packt Publishing today for the $5 eBook Bonanza.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://www.packtpub.com/"&gt;https://www.packtpub.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;eBooks and videos at a discount through something like the 6th of
January.&lt;/p&gt;
&lt;p&gt;We autodidacts are rejoicing.&lt;/p&gt;
&lt;p&gt;Specifically, I can look at some of the Scala and Hadoop titles. I'm
working with folks who have Hadoop but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 20 Dec 2014 08:08:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-20:/2014_12_20-making_learning_accessible.html</guid><category>Technologies</category><category>ebook</category><category>learning</category><category>packtpub</category></item><item><title>The Getting Started Problem</title><link>https://slott56.github.io/2014_12_16-the_getting_started_problem.html</link><description>&lt;p&gt;How does one get started developing software? What's the first step?&lt;/p&gt;
&lt;p&gt;When you come to this craft -- or sullen art -- without a background
except as a user, how do you get started writing code?&lt;/p&gt;
&lt;p&gt;It's not easy. Indeed, developing software may be one the hardest
things there is. Really, really …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Dec 2014 20:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-16:/2014_12_16-the_getting_started_problem.html</guid><category>Technologies</category><category>building skills books</category><category>learning</category><category>packtpub</category></item><item><title>Wow. Two-Word Question. Profound Insight.</title><link>https://slott56.github.io/2014_12_11-wow_two_word_question_profound_insight.html</link><description>&lt;p&gt;I'm working on yet another Python book. This one looking at functional
programming in Python. It doesn't really go with with &lt;a class="reference external" href="http://www.amazon.com/Mastering-Object-oriented-Community-Experience-Distilled/dp/1783280972"&gt;Mastering
Object-Oriented
Python&lt;/a&gt;
and &lt;a class="reference external" href="http://www.amazon.com/Python-Secret-Agents-Steven-Lott/dp/1783980427"&gt;Python for Secret
Agents&lt;/a&gt;
because the focus isn't on Python's strong suit.&lt;/p&gt;
&lt;p&gt;In chapter one, a reviewer had this two-word question:
&amp;quot;yield from?&amp;quot;&lt;/p&gt;
&lt;p&gt;What? What …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 11 Dec 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-11:/2014_12_11-wow_two_word_question_profound_insight.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category></item><item><title>Architectural Principles, Spring Framework, and Jersey JAX-RS</title><link>https://slott56.github.io/2014_12_04-architectural_principles_spring_framework_and_jersey_jax_rs.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See this: &lt;a class="reference external" href="http://www.moschetti.org/"&gt;http://www.moschetti.org&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Attended a meeting with Buzz. Not stated in his blog (in an obvious
way) was something he said about not being a fan of big frameworks. I
didn't write down his punchline, but it was a pretty pithy summary of
the framework tradeoff.&lt;/div&gt;
&lt;div class="line"&gt;IIRC …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Dec 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-12-04:/2014_12_04-architectural_principles_spring_framework_and_jersey_jax_rs.html</guid><category>Technologies</category><category>java</category><category>spring framework</category></item><item><title>MongoDB and Schema Validation</title><link>https://slott56.github.io/2014_11_20-mongodb_and_schema_validation.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;One part of the MongoDB value proposition is being freed from the
constraints of a database schema.&lt;/div&gt;
&lt;div class="line"&gt;There's a &amp;quot;baby and bathwater&amp;quot; issue here. While a schema can become a
low-value constraint, we have to be careful about throwing out the
baby when we throw out the bathwater. A schema …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Nov 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-11-20:/2014_11_20-mongodb_and_schema_validation.html</guid><category>Technologies</category><category>#python</category><category>mongodb</category><category>schema migration</category></item><item><title>Declarative Programming</title><link>https://slott56.github.io/2014_11_13-declarative_programming.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I know that some folks swear by declarative programming. They like the
ideas behind &lt;a class="reference external" href="http://ant.apache.org/"&gt;ant&lt;/a&gt; (and
&lt;a class="reference external" href="http://www.gnu.org/software/make/"&gt;make&lt;/a&gt;) and
&lt;a class="reference external" href="http://www.scons.org/"&gt;SCons&lt;/a&gt; and related examples.&lt;/div&gt;
&lt;div class="line"&gt;You can google for &amp;quot;ant v. maven v. gradle&amp;quot; where people gripe about
which is more declarative. The point of the whining being that more
declarative == good and …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Nov 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-11-13:/2014_11_13-declarative_programming.html</guid><category>Technologies</category><category>imperative</category><category>declarative</category><category>functional programming</category><category>#python</category></item><item><title>Hard Copy Books</title><link>https://slott56.github.io/2014_11_06-hard_copy_books.html</link><description>&lt;p&gt;I've now got my actual souvenir hard-copies of my two Packt books
&lt;a class="reference external" href="https://www.packtpub.com/application-development/mastering-object-oriented-python"&gt;https://www.packtpub.com/application-development/mastering-object-oriented-python&lt;/a&gt;
&lt;a class="reference external" href="https://www.packtpub.com/hardware-and-creative/python-secret-agents"&gt;https://www.packtpub.com/hardware-and-creative/python-secret-agents&lt;/a&gt;
So far, so good. I've got one more title in the works. After that, I
think I'll have to take a small break and do some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Nov 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-11-06:/2014_11_06-hard_copy_books.html</guid><category>Books</category><category>python for secret agents</category><category>#python</category><category>mastering object-oriented python</category></item><item><title>My First Webcast</title><link>https://slott56.github.io/2014_11_06-my_first_webcast.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.oreilly.com/pub/e/3255"&gt;http://www.oreilly.com/pub/e/3255&lt;/a&gt;
I'm a pretty good public speaker. But I've avoided webcasting and
podcasting because it's kind of daunting. In a smaller venue, the
audience members are right there, and you can tell if you're not making
sense. In a webcast, the feedback will be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Nov 2014 07:10:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-11-06:/2014_11_06-my_first_webcast.html</guid><category>Books</category><category>webcast</category><category>#python</category><category>podcast</category></item><item><title>Currying and Partial Function Evaluation</title><link>https://slott56.github.io/2014_10_23-currying_and_partial_function_evaluation.html</link><description>&lt;p&gt;Old. But still interesting.
&lt;a class="reference external" href="http://www.uncarved.com/index.py/blog/not_currying.mrk"&gt;Partial Function Application is not
Currying&lt;/a&gt;
It seems like hair-splitting. However, the distinction between bound
variables and curried functions does have &lt;em&gt;some&lt;/em&gt; practical implications.
I'm looking closely at
&lt;a class="reference external" href="https://pypi.python.org/pypi/PyMonad/"&gt;PyMonad&lt;/a&gt; and the built-in
&lt;a class="reference external" href="https://docs.python.org/3/library/functools.html"&gt;functools&lt;/a&gt;
library.
I'm finding some benefits in understanding functional programming and
how to apply …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Oct 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-10-23:/2014_10_23-currying_and_partial_function_evaluation.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category></item><item><title>Using Bottle as a miniature demo server</title><link>https://slott56.github.io/2014_10_16-using_bottle_as_a_miniature_demo_server.html</link><description>&lt;p&gt;Let's talk small.
When writing API's, it sometimes helps to have a small demo web site to
show the API in a context that's easy to visualize. API's are sometimes
abstract, and without an application to provide some context, it can be
unclear why the path looks like that or …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 16 Oct 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-10-16:/2014_10_16-using_bottle_as_a_miniature_demo_server.html</guid><category>Technologies</category><category>#python</category><category>bottle</category><category>jinja</category><category>java</category></item><item><title>Scipy.optimization.anneal Problems</title><link>https://slott56.github.io/2014_10_09-scipyoptimizationanneal_problems.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Well, not really &amp;quot;problems&amp;quot; &lt;em&gt;per se&lt;/em&gt;. More of a strange kind of
whining than a solvable problem.&lt;/div&gt;
&lt;div class="line"&gt;Here's the bottom line. Two real quotes. Unedited.&lt;/div&gt;
&lt;div class="line"&gt;Me: &amp;quot;&amp;gt; There's a way to avoid the religious nature of the argument. &amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;Them: &amp;quot;Please suggest away.&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;Really. Confronted with choices between anneal and basin hopping …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 Oct 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-10-09:/2014_10_09-scipyoptimizationanneal_problems.html</guid><category>Technologies</category><category>scipy</category><category>Data Science</category></item><item><title>Not sure what went wrong, but...</title><link>https://slott56.github.io/2014_10_02-not_sure_what_went_wrong_but.html</link><description>&lt;p&gt;Read
this: &lt;a class="reference external" href="http://quantlabs.net/blog/2014/09/here-is-why-i-gave-up-on-python-aka-dogs-breakfeast-of-a-so-called-programming-language/#sthash.Rp7pXObf.dpuf"&gt;http://quantlabs.net/blog/2014/09/here-is-why-i-gave-up-on-python-aka-dogs-breakfeast-of-a-so-called-programming-language/#sthash.Rp7pXObf.dpuf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Not sure what's going on here.&lt;/p&gt;
&lt;p&gt;&amp;quot;Script I want to run&amp;quot; seemed
clear. &lt;a class="reference external" href="http://vispy.org/examples/basics/scene/surface_plot.html#sthash.kIzbd33O.dpuf"&gt;http://vispy.org/examples/basics/scene/surface_plot.html#sthash.kIzbd33O.dpuf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The rest seemed like ill-advised trips down numerous ratholes. In
particular, anything that involved …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 02 Oct 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-10-02:/2014_10_02-not_sure_what_went_wrong_but.html</guid><category>Technologies</category><category>#python</category><category>numpy</category></item><item><title>PyCrypto Experience</title><link>https://slott56.github.io/2014_09_25-pycrypto_experience.html</link><description>&lt;p&gt;Let me start with a wow.
&lt;a class="reference external" href="https://www.dlitz.net/software/pycrypto/"&gt;PyCrypto&lt;/a&gt; is very nice.
Let me emphasize the add-ons that go with PyCrypto. These are as
valuable as the package itself.
Here's the story. I was working with a Java-based AES encrypter that
used the &amp;quot;PBKDF2WithHmacSHA1&amp;quot; key generator algorithm. This was part of
a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Sep 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-09-25:/2014_09_25-pycrypto_experience.html</guid><category>Technologies</category><category>#python</category><category>encryption</category><category>pycrypto</category></item><item><title>API Testing: Quick, Dirty, and Automated</title><link>https://slott56.github.io/2014_09_04-api_testing_quick_dirty_and_automated.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;When writing RESTful API's, the process of testing can be simple or
kind of hideous.&lt;/div&gt;
&lt;div class="line"&gt;The &lt;a class="reference external" href="https://chrome.google.com/webstore/detail/postman-rest-client/fdmmgilgnpjigdojojpjoooidkmcomcm?hl=en"&gt;Postman REST
Client&lt;/a&gt;
is pretty popular for testing an API. There are others, I'm sure, but
I'm working with folks who like Postman.&lt;/div&gt;
&lt;div class="line"&gt;Postman 10 has some automation capabilities. Some.&lt;/div&gt;
&lt;div class="line"&gt;However. (And this is …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Sep 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-09-04:/2014_09_04-api_testing_quick_dirty_and_automated.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category></item><item><title>Some Basic Statistics</title><link>https://slott56.github.io/2014_08_09-some_basic_statistics.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I've always been fascinated by the essential statistical algorithms.
While there are numerous statistical libraries, the simple measures of
central tendency (mean, media, mode, standard deviation) have some
interesting features.&lt;/div&gt;
&lt;div class="line"&gt;Well.  Interesting to me.&lt;/div&gt;
&lt;div class="line"&gt;First, some basics.&lt;/div&gt;
&lt;/div&gt;
&lt;pre class="literal-block"&gt;
def s0( samples ):
    return len(samples) # sum(x**0 for x in samples …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 09 Aug 2014 11:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-08-09:/2014_08_09-some_basic_statistics.html</guid><category>Technologies</category><category>algorithm</category><category>#python</category></item><item><title>Building Probabilistic Graphical Models with Python</title><link>https://slott56.github.io/2014_07_24-building_probabilistic_graphical_models_with_python.html</link><description>&lt;p&gt;A deep dive into probability and
scipy: &lt;a class="reference external" href="https://www.packtpub.com/building-probabilistic-graphical-models-with-python/book"&gt;https://www.packtpub.com/building-probabilistic-graphical-models-with-python/book&lt;/a&gt;
I have to admit up front that this book is out of my league.
The Python is sensible to me. The subject matter -- graph models,
learning and inference -- is above my pay grade.&lt;/p&gt;
&lt;div class="section" id="asking-about-a-book"&gt;
&lt;h2&gt;Asking About a Book …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Jul 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-07-24:/2014_07_24-building_probabilistic_graphical_models_with_python.html</guid><category>Technologies</category><category>#python</category><category>Data Science</category><category>numpy</category><category>scipy</category></item><item><title>New Focus: Data Scientist</title><link>https://slott56.github.io/2014_07_17-new_focus_data_scientist.html</link><description>&lt;p&gt;Read
this: &lt;a class="reference external" href="http://www.forbes.com/sites/emc/2014/06/26/the-hottest-jobs-in-it-training-tomorrows-data-scientists/"&gt;http://www.forbes.com/sites/emc/2014/06/26/the-hottest-jobs-in-it-training-tomorrows-data-scientists/&lt;/a&gt;
Interesting subject areas: Statistics, Machine Learning, Algorithms.
I've had questions about data science from folks who (somehow) felt that
calculus and differential equations were important parts of data
science. I couldn't figure out how they decided that diffeq's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Jul 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-07-17:/2014_07_17-new_focus_data_scientist.html</guid><category>Technologies</category><category>algorithm</category><category>Data Science</category></item><item><title>Project Euler</title><link>https://slott56.github.io/2014_07_03-project_euler.html</link><description>&lt;p&gt;This is (was?) an epic web site:
&lt;a class="reference external" href="http://projecteuler.net/about"&gt;http://projecteuler.net/about&lt;/a&gt;
Currently, they're struggling with a security problem.
&lt;a class="reference external" href="http://forum.projecteuler.net/viewtopic.php?f=5&amp;amp;t=3591"&gt;http://forum.projecteuler.net/viewtopic.php?f=5&amp;amp;t=3591&lt;/a&gt;
Years ago, I found the site and quickly reached Level 2 by solving a
flood of easy problems.
Recently, a recruiter strongly …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Jul 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-07-03:/2014_07_03-project_euler.html</guid><category>Technologies</category><category>#python</category><category>algorithm</category><category>project euler</category></item><item><title>The Permissions Issue</title><link>https://slott56.github.io/2014_06_30-the_permissions_issue.html</link><description>&lt;p&gt;Why?
Why are Enterprise Computers so hard to use? What is it about computers
that terrifies corporate IT?
They're paying lots of money to have me sit around and wait for
mysterious approver folks to decide if I can be given permission to
install development tools. (Of course, the real …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 30 Jun 2014 20:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-06-30:/2014_06_30-the_permissions_issue.html</guid><category>Technologies</category><category>innovation</category><category>software process improvement</category></item><item><title>Package Deal for Learning Python</title><link>https://slott56.github.io/2014_06_26-package_deal_for_learning_python.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;If you're very new to programming in general, Python's a great place
to start.&lt;/div&gt;
&lt;div class="line"&gt;There are many, many tutorials. I won't even try to summarize them.
They're generally good. And the more you read, the more you learn.&lt;/div&gt;
&lt;div class="line"&gt;Moving past the n00bz needs, there are some more advanced books.
Here's …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Jun 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-06-26:/2014_06_26-package_deal_for_learning_python.html</guid><category>Technologies</category><category>#python</category><category>mastering object-oriented python</category></item><item><title>The Swift Programming Language</title><link>https://slott56.github.io/2014_06_19-the_swift_programming_language.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://developer.apple.com/swift/"&gt;https://developer.apple.com/swift/&lt;/a&gt;
This lowers the bar for entry to the iOS market.
Does it also lower the bar for Mac OS X?
Can it be used to write command-line command-line applications
(&amp;quot;scripts&amp;quot;)? It has a REPL, which means it can do a kind of
&amp;quot;just-in-time&amp;quot; compile and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 19 Jun 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-06-19:/2014_06_19-the_swift_programming_language.html</guid><category>Technologies</category><category>iOS</category><category>swift</category><category>#python</category></item><item><title>TDD, API Design and Refactoring</title><link>https://slott56.github.io/2014_06_12-tdd_api_design_and_refactoring.html</link><description>&lt;p&gt;See this short discussion on a Stingray Reader feature:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://sourceforge.net/p/stingrayreader/discussion/COBOL/thread/d2132851/?limit=25#2a3a"&gt;https://sourceforge.net/p/stingrayreader/discussion/COBOL/thread/d2132851/?limit=25#2a3a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This turned into an exercise in pure TDD.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;lt;rant&amp;gt;&lt;/p&gt;
&lt;p&gt;I'm not a fan of applying TDD in a strict, death-march fashion.&lt;/p&gt;
&lt;p&gt;I see the comments on Stack Overflow that …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 12 Jun 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-06-12:/2014_06_12-tdd_api_design_and_refactoring.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>#python</category><category>tdd</category><category>stingray reader</category><category>API Design</category><category>mastering object-oriented python</category></item><item><title>Grace Murray Hopper</title><link>https://slott56.github.io/2014_06_05-grace_murray_hopper.html</link><description>&lt;p&gt;Read
this: &lt;a class="reference external" href="https://www.indiegogo.com/projects/born-with-curiosity-the-grace-hopper-documentary#home"&gt;https://www.indiegogo.com/projects/born-with-curiosity-the-grace-hopper-documentary#home&lt;/a&gt;
Consider donating to preserve history.
Read
this: &lt;a class="reference external" href="http://www.i-programmer.info/news/82-heritage/7368-crowd-fund-film-about-grace-hopper.html"&gt;http://www.i-programmer.info/news/82-heritage/7368-crowd-fund-film-about-grace-hopper.html&lt;/a&gt;
Her legacy is often overshadowed by folks like Bill Gates and Steve
Jobs.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 05 Jun 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-06-05:/2014_06_05-grace_murray_hopper.html</guid><category>Technologies</category><category>COBOL</category></item><item><title>Stingray 4.4 Update -- the Posix split command applied to COBOL files</title><link>https://slott56.github.io/2014_05_29-stingray_44_update_the_posix_split_command_applied_to_cobol_files.html</link><description>&lt;p&gt;Here's an interesting problem. Implement the
&lt;a class="reference external" href="http://man7.org/linux/man-pages/man1/split.1.html"&gt;split&lt;/a&gt; command
for mainframe COBOL EBCDIC files with their BDW and RDW headers.&lt;/p&gt;
&lt;p&gt;The conventional &lt;strong&gt;split&lt;/strong&gt; can't handle COBOL EBCDIC files because
they don't have sensible \n line breaks. Translating an EBCDIC file
to ASCII is high-risk because COMP and COMP-3 fields will be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 May 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-05-29:/2014_05_29-stingray_44_update_the_posix_split_command_applied_to_cobol_files.html</guid><category>Technologies</category><category>#python</category><category>RECFM</category><category>EBCDIC</category><category>COBOL</category><category>mastering object-oriented python</category></item><item><title>Python Package Design, Refactoring and the Stingray Reader Project</title><link>https://slott56.github.io/2014_05_22-python_package_design_refactoring_and_the_stingray_reader_project.html</link><description>&lt;p&gt;We'll be digging into &lt;a class="reference external" href="http://www.packtpub.com/mastering-object-oriented-python/book"&gt;Mastering Object-Oriented
Python&lt;/a&gt;.
Chapter 17, specifically.&lt;/p&gt;
&lt;p&gt;We'll also be looking at a big refactoring of the &lt;a class="reference external" href="https://sourceforge.net/projects/stingrayreader/"&gt;Stingray
Schema-Based File
Reader&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can identify three species of packages.&lt;/p&gt;
&lt;p&gt;One common design is a &lt;strong&gt;Simple Package&lt;/strong&gt;. A directory with an empty
&lt;tt class="docutils literal"&gt;__init__.py&lt;/tt&gt; file. This package name becomes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 May 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-05-22:/2014_05_22-python_package_design_refactoring_and_the_stingray_reader_project.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category><category>architecture</category><category>stingray reader</category><category>refactoring</category><category>mastering object-oriented python</category></item><item><title>Want a copy of Mastering Object-Oriented Python? Free?</title><link>https://slott56.github.io/2014_05_15-want_a_copy_of_mastering_object_oriented_python_free.html</link><description>&lt;p&gt;Want a copy free? See this
contest: &lt;a class="reference external" href="http://www.blog.pythonlibrary.org/2014/05/12/ebook-contest-win-a-free-copy-of-mastering-object-oriented-python/"&gt;http://www.blog.pythonlibrary.org/2014/05/12/ebook-contest-win-a-free-copy-of-mastering-object-oriented-python/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you're really interested, I can sign a copy.  That will double the
shipping cost, so perhaps that's not the best idea.&lt;/p&gt;
&lt;p&gt;The bad news is that the errata have started to trickle in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 May 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-05-15:/2014_05_15-want_a_copy_of_mastering_object_oriented_python_free.html</guid><category>Technologies</category><category>#python</category><category>mastering object-oriented python</category></item><item><title>Mastering Object-Oriented Python</title><link>https://slott56.github.io/2014_05_09-mastering_object_oriented_python.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See &lt;a class="reference external" href="http://www.packtpub.com/mastering-object-oriented-python/book"&gt;http://www.packtpub.com/mastering-object-oriented-python/book&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;Coming soon.&lt;/div&gt;
&lt;div class="line"&gt;This is relatively deep, under-the-hood stuff for folks who want to
master the Python feature set.&lt;/div&gt;
&lt;div class="line"&gt;Here's the overview of what you get:&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;0 &lt;em&gt;Some Preliminaries&lt;/em&gt; 3 examples, 56 lines&lt;/li&gt;
&lt;li&gt;1 &lt;em&gt;The __init__() Method&lt;/em&gt; 55 examples, 351 lines&lt;/li&gt;
&lt;li&gt;2 &lt;em&gt;Integrating Seamlessly …&lt;/em&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 May 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-05-09:/2014_05_09-mastering_object_oriented_python.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category><category>mastering object-oriented python</category></item><item><title>Literate Programming with pyWeb 2.3</title><link>https://slott56.github.io/2014_04_24-literate_programming_with_pyweb_23.html</link><description>&lt;p&gt;Updates completed.
See &lt;a class="reference external" href="https://sourceforge.net/projects/pywebtool/"&gt;https://sourceforge.net/projects/pywebtool/&lt;/a&gt; and &lt;a class="reference external" href="http://pywebtool.sourceforge.net/"&gt;http://pywebtool.sourceforge.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The list of changes is extensive.&lt;/p&gt;
&lt;p&gt;However, the essential API and the markup language for creating
literate programs hasn't (significantly) changed. A few experimental
features were replaced with a first-class implementation.&lt;/p&gt;
&lt;p&gt;The interesting (to me) bit is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Apr 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-04-24:/2014_04_24-literate_programming_with_pyweb_23.html</guid><category>Technologies</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>Stingray 4.3 Update</title><link>https://slott56.github.io/2014_04_17-stingray_43_update.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See &lt;a class="reference external" href="https://sourceforge.net/projects/stingrayreader/"&gt;https://sourceforge.net/projects/stingrayreader/&lt;/a&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Some small improvements to the COBOL DDE parsing.&lt;/li&gt;
&lt;li&gt;A sensible demo program that shows how to read COBOL files.&lt;/li&gt;
&lt;li&gt;A complete rewrite to Python3.3.&lt;/li&gt;
&lt;li&gt;Support for more COBOL syntax.&lt;/li&gt;
&lt;li&gt;Support for Occurs Depending On&lt;/li&gt;
&lt;li&gt;Support for RECFM=F, RECFM=V and RECFM=VB …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Apr 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-04-17:/2014_04_17-stingray_43_update.html</guid><category>Technologies</category><category>stingray reader</category><category>#python</category><category>COBOL</category></item><item><title>The SortedContainers Package for Python</title><link>https://slott56.github.io/2014_04_10-the_sortedcontainers_package_for_python.html</link><description>&lt;p&gt;See this: &lt;a class="reference external" href="http://www.grantjenks.com/docs/sortedcontainers/"&gt;SortedContainers — sortedcontainers 0.6.0
documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's some text from the invitation.&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;You may find the the performance comparison and implementation
details interesting because it doesn't use any sophisticated tree
data structure or balancing algorithms. It's a great example of
taking advantage of what processors are good at …&lt;/em&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 10 Apr 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-04-10:/2014_04_10-the_sortedcontainers_package_for_python.html</guid><category>Technologies</category><category>performance</category><category>#python</category><category>object-oriented design</category></item><item><title>Preconceived Notions, Perceptual Narrowing, The Einstellung Effect</title><link>https://slott56.github.io/2014_03_27-preconceived_notions_perceptual_narrowing_the_einstellung_effect.html</link><description>&lt;p&gt;Read this &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Einstellung_effect"&gt;http://en.wikipedia.org/wiki/Einstellung_effect&lt;/a&gt;
Great
&lt;a class="reference external" href="http://www.scientificamerican.com/article/einstellung-how-psychologists-study-einstellung-effect-chess/"&gt;article&lt;/a&gt;
in Scientific American on this.&lt;/p&gt;
&lt;p&gt;I didn't realize that sometimes I do spend time trying to defeat the
Einstellung effect. Not a lot of time. But some time.&lt;/p&gt;
&lt;p&gt;When confronted with gnarly design problems, I have the same bad habits …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Mar 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-03-27:/2014_03_27-preconceived_notions_perceptual_narrowing_the_einstellung_effect.html</guid><category>Technologies</category><category>design</category><category>object-oriented design</category><category>Einstellung Effect</category></item><item><title>Wrestling with the Python shelve module</title><link>https://slott56.github.io/2014_03_21-wrestling_with_the_python_shelve_module.html</link><description>&lt;p&gt;While wrestling with Python's shelve module, I ran across
&lt;a class="reference external" href="http://acid.readthedocs.org/en/latest/"&gt;ACID&lt;/a&gt;. Interesting thoughts.
Plus what appears to be the related Tumblr blog: &lt;a class="reference external" href="http://pythonsweetness.tumblr.com/?utm_campaign=SharedPost&amp;amp;utm_medium=Email&amp;amp;utm_source=TumblriOS"&gt;python
sweetness&lt;/a&gt;.
Also interesting.
Not sure I can make heavy use of it right now, but it's helpful to see
the thought process.
I find the subject of shelve …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 Mar 2014 11:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-03-21:/2014_03_21-wrestling_with_the_python_shelve_module.html</guid><category>Technologies</category><category>design</category><category>schema migration</category></item><item><title>Shiny New MacBook Pro</title><link>https://slott56.github.io/2014_03_20-shiny_new_macbook_pro.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Wow. Just Wow. An almost seamless technology change. Almost.&lt;/div&gt;
&lt;div class="line"&gt;The old MacBook Pro (dual core 4Gb RAM) was struggling to keep up.
Struggling. It had been dropped once, so there was a ding in the
corner. The trackpad &amp;quot;click&amp;quot; wasn't reliably clicking. It was shaky.&lt;/div&gt;
&lt;div class="line"&gt;Nothing that couldn't be cured …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Mar 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-03-20:/2014_03_20-shiny_new_macbook_pro.html</guid><category>Technologies</category><category>#python</category><category>macosx</category></item><item><title>The Visitor Design Pattern and Python</title><link>https://slott56.github.io/2014_03_13-the_visitor_design_pattern_and_python.html</link><description>&lt;p&gt;Epiphany.&lt;/p&gt;
&lt;p&gt;In Python, with iterators, the &lt;strong&gt;Visitor&lt;/strong&gt; design pattern is useless.
And a strongly-ingrained habit. Which I'm trying to break.&lt;/p&gt;
&lt;p&gt;Here's a common &lt;strong&gt;Visitor&lt;/strong&gt; approach:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
class Visitor:
    def __init__( self ): ...
    def visit( self, some_target_thing ): ...
    def all_done( self ): ...

v = Visitor()
for thing in some_iterator():
    v.visit(thing)
v.all_done()
&lt;/pre&gt;
&lt;p&gt;If we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Mar 2014 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-03-13:/2014_03_13-the_visitor_design_pattern_and_python.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category></item><item><title>Enterprise JavaScript -- Not the best idea</title><link>https://slott56.github.io/2014_03_06-enterprise_javascript_not_the_best_idea.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See this:&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
JavaScript is a swampy foundation for your enterprise codebase: My
latest column at SD Times &lt;a class="reference external" href="http://t.co/a82aUquk0d"&gt;http://t.co/a82aUquk0d&lt;/a&gt;
— Larry O'Brien (&amp;#64;lobrien) &lt;a class="reference external" href="https://twitter.com/lobrien/statuses/436534627789180928"&gt;February 20,
2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;The article lists reasons why Enterprise JavaScript is a recipe for
disaster. &amp;quot;Finally, there's legacy integration...&amp;quot; This is the point.&lt;/div&gt;
&lt;div class="line"&gt;In particular, JavaScript …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Mar 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-03-06:/2014_03_06-enterprise_javascript_not_the_best_idea.html</guid><category>Technologies</category><category>architecture</category><category>javascript</category></item><item><title>Django and REST -- Tastypie vs. Django REST</title><link>https://slott56.github.io/2014_02_27-django_and_rest_tastypie_vs_django_rest.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Ouch. What a difficult question.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
Lazyweb: Django REST Framework vs. Tastypie. Thoughts?
&lt;a class="reference external" href="https://twitter.com/search?q=%23django&amp;amp;src=hash"&gt;#django&lt;/a&gt;
— Joe Dougherty (&amp;#64;modusjonens) &lt;a class="reference external" href="https://twitter.com/modusjonens/statuses/435518784036540416"&gt;February 17,
2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;This isn't easy.&lt;/div&gt;
&lt;div class="line"&gt;Comparing &lt;a class="reference external" href="http://django-tastypie.readthedocs.org/en/latest/"&gt;http://django-tastypie.readthedocs.org/en/latest/&lt;/a&gt;
with &lt;a class="reference external" href="http://www.django-rest-framework.org/"&gt;http://www.django-rest-framework.org&lt;/a&gt;
is hard. They're both outstanding projects with a long history.&lt;/div&gt;
&lt;div class="line"&gt;Trivial Follow-up Question 1: What are …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Feb 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-02-27:/2014_02_27-django_and_rest_tastypie_vs_django_rest.html</guid><category>Technologies</category><category>REST</category><category>Django</category></item><item><title>Explaining an Application</title><link>https://slott56.github.io/2014_02_21-explaining_an_application.html</link><description>&lt;p&gt;Some years ago--never mind how long precisely--having little or no money
in my purse...  I had a great chance to do some Test-Driven Reverse
Engineering on a rather complex C program. I extracted test cases. I
worked with the users to gather test cases. And I rewrote their legacy
app …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 Feb 2014 10:56:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-02-21:/2014_02_21-explaining_an_application.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>test-driven reverse engineering</category><category>legacy code</category></item><item><title>Third Time's the Charm: the version 3.0 phenomenon</title><link>https://slott56.github.io/2014_02_21-third_times_the_charm_the_version_30_phenomenon.html</link><description>&lt;p&gt;Somewhere, I have a vague recollection of reading advice from someone
(Bill Gates?) that it takes three versions to get things right. The
context may have been a justification of the wild success of Windows
3.0.&lt;/p&gt;
&lt;p&gt;Or, I could be just making it up.&lt;/p&gt;
&lt;p&gt;But one thing I have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 Feb 2014 10:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-02-21:/2014_02_21-third_times_the_charm_the_version_30_phenomenon.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>software process improvement</category><category>OO design</category><category>requirements</category></item><item><title>TCP/IP Mysteries and user support</title><link>https://slott56.github.io/2014_02_13-tcpip_mysteries_and_user_support.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;It's not clear, actually, if this involves a TCP/IP &amp;quot;Mystery&amp;quot;. What it
may involve is a simple lack of ability to communicate. Or something.&lt;/div&gt;
&lt;div class="line"&gt;I got this question:&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&amp;quot;Request help w/ finding a reference or you can post a blog about how
you can you have 2 oracle servers …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Feb 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-02-13:/2014_02_13-tcpip_mysteries_and_user_support.html</guid><category>Technologies</category><category>user stories</category></item><item><title>Hacker Monthly</title><link>https://slott56.github.io/2014_02_06-hacker_monthly.html</link><description>&lt;p&gt;Check out this month's &lt;a class="reference external" href="http://hackermonthly.com/"&gt;Hacker Monthly&lt;/a&gt;.
One of my Stackoverflow answers was reswizzled into a short article on
class design.
That was gratifying.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Feb 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-02-06:/2014_02_06-hacker_monthly.html</guid><category>Technologies</category><category>object-oriented design</category><category>stackoverflow</category></item><item><title>Manual Testing -- Bad Idea</title><link>https://slott56.github.io/2014_01_23-manual_testing_bad_idea.html</link><description>&lt;p&gt;The question of testing came up recently. The description of the process
sounded like manually &amp;quot;testing&amp;quot; some complex web application.
When trying to work out manual &amp;quot;testing&amp;quot;, I find it necessary to use
scare quotes. I'm not sure there's a place for &amp;quot;manual testing&amp;quot; of any
software.&lt;/p&gt;
&lt;p&gt;I know that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Jan 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-01-23:/2014_01_23-manual_testing_bad_idea.html</guid><category>Technologies</category><category>unit testing</category><category>selenium</category></item><item><title>Not in HamCalc -- But perhaps should be</title><link>https://slott56.github.io/2014_01_21-not_in_hamcalc_but_perhaps_should_be.html</link><description>&lt;p&gt;This is the kind of little program that would be in HamCalc. But doesn't
appear to be.&lt;/p&gt;
&lt;p&gt;Looking at the Airfoil web page, specifically, this one:
&lt;a class="reference external" href="http://airfoiltools.com/airfoil/details?airfoil=ls013-il"&gt;http://airfoiltools.com/airfoil/details?airfoil=ls013-il&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The measurements are all given in fractions of the depth of the airfoil.
So you have to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jan 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-01-21:/2014_01_21-not_in_hamcalc_but_perhaps_should_be.html</guid><category>Technologies</category><category>#python</category><category>HamCalc</category></item><item><title>Computers, Power and Space Heaters</title><link>https://slott56.github.io/2014_01_09-computers_power_and_space_heaters.html</link><description>&lt;p&gt;Just a safety note for folks who use a lot of electricity. In the
winter, you might have computers and space heaters. Or you might (like
me) live &amp;quot;off the grid&amp;quot;. We use an inverter with a transfer relay to
switch between battery power and grid power.
Recently, we had …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 Jan 2014 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-01-09:/2014_01_09-computers_power_and_space_heaters.html</guid><category>Technologies</category><category>epic-fail</category><category>hardware</category></item><item><title>Unit Test Naming [Updated]</title><link>https://slott56.github.io/2014_01_01-unit_test_naming_updated.html</link><description>&lt;p&gt;Just stumbled across several blog postings on unit test naming.&lt;/p&gt;
&lt;p&gt;Essentially the TestCase will name the fixture. That's pretty easy to
understand.&lt;/p&gt;
&lt;p&gt;The cool part is this: each test method is a two-part clause:
&lt;tt class="docutils literal"&gt;condition_&amp;quot;should&amp;quot;_result&lt;/tt&gt; or &lt;tt class="docutils literal"&gt;&amp;quot;when&amp;quot;_condition_&amp;quot;then&amp;quot;_result&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://wiki.openmrs.org/display/docs/Unit+Testing+With+at-should+Annotation"&gt;https://wiki.openmrs.org/display/docs/Unit …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 01 Jan 2014 13:22:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2014-01-01:/2014_01_01-unit_test_naming_updated.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>tdd</category></item><item><title>Apple's Feckless Download Protocol</title><link>https://slott56.github.io/2013_12_17-apples_feckless_download_protocol.html</link><description>&lt;p&gt;For those of us who live mostly off the grid, with inconsistent WiFi
through hosts that flake out frequently, Apple's AppStore download
protocol is absolutely infuriating. It's the most brittle damn protocol
I've ever seen.
When there's any disruption, it simply discards the data it has and
starts again.
How …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Dec 2013 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-12-17:/2013_12_17-apples_feckless_download_protocol.html</guid><category>Technologies</category><category>apple</category><category>macosx</category></item><item><title>Secure Salted Password Hashing</title><link>https://slott56.github.io/2013_12_12-secure_salted_password_hashing.html</link><description>&lt;p&gt;An excellent exposition of secure salted password hashing.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://crackstation.net/hashing-security.htm"&gt;https://crackstation.net/hashing-security.htm&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This was really quite nice. It didn't have a Python version, but the
clarity of the exposition makes the Python easy to write.&lt;/p&gt;
&lt;p&gt;A few months back, I had this mystery
conversation: {filename}/blog/2013/06/2013_06_27-password_encryption_short_answer_dont …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 12 Dec 2013 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-12-12:/2013_12_12-secure_salted_password_hashing.html</guid><category>Technologies</category><category>#python</category><category>security</category></item><item><title>Mac OS X 10.9 and Python 3.3</title><link>https://slott56.github.io/2013_11_30-mac_os_x_109_and_python_33.html</link><description>&lt;p&gt;Finally upgraded to Python 3.3.3. The ordinary maintenance release fixed
the problem with the previous release.&lt;/p&gt;
&lt;p&gt;The previously documented patch
({filename}/blog/2013/10/2013_10_25-mac_os_x_109_mavericks_crashes_python_patch_available.rst)
is no longer required.&lt;/p&gt;
&lt;p&gt;Time to start incrementally installing all the various add-on
components: docutils, PyYaml, Django, Jinja2, SQLAlchemy, etc.&lt;/p&gt;
&lt;p&gt;Also, time …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Nov 2013 07:33:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-11-30:/2013_11_30-mac_os_x_109_and_python_33.html</guid><category>Technologies</category><category>patch</category><category>#python</category></item><item><title>Python vs. R for Data Science</title><link>https://slott56.github.io/2013_11_30-python_vs_r_for_data_science.html</link><description>&lt;p&gt;This: &lt;a class="reference external" href="http://readwrite.com/2013/11/25/python-displacing-r-as-the-programming-language-for-data-science#awesm=~ooD70i8bDQn1Dp"&gt;Python Displacing R As The Programming Language For Data Science&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Recently, I've had a former colleague asking questions about Data
Science. See &lt;a class="reference external" href="https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html"&gt;Obstinate Idiocy&lt;/a&gt;
They -- weirdly -- insisted that the only language that made sense to
them was Excel.&lt;/p&gt;
&lt;p&gt;My response was a blunt &amp;quot;What?&amp;quot;&lt;/p&gt;
&lt;p&gt;The Python vs. R post …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Nov 2013 07:33:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-11-30:/2013_11_30-python_vs_r_for_data_science.html</guid><category>Technologies</category><category>R</category><category>#python</category><category>Data Science</category></item><item><title>When to choose Python over Java and vice versa ??: A Very Silly Question</title><link>https://slott56.github.io/2013_10_29-when_to_choose_python_over_java_and_vice_versa_a_very_silly_question.html</link><description>&lt;p&gt;The correct answer is: &lt;strong&gt;It Doesn't Matter&lt;/strong&gt;.
In spite of this.
(A) The question gets asked.
And worse.
(B) It gets answered. And people take their answers seriously. As if
there are &lt;strong&gt;Profound Differences&lt;/strong&gt; among programming languages.
Among Turing Complete programming languages there are few Profound
Differences.
The pragmatic differences …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Oct 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-10-29:/2013_10_29-when_to_choose_python_over_java_and_vice_versa_a_very_silly_question.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>java</category></item><item><title>Mac OS X 10.9 "Mavericks" Crashes Python -- Patch Available</title><link>https://slott56.github.io/2013_10_25-mac_os_x_109_mavericks_crashes_python_patch_available.html</link><description>&lt;p&gt;I upgraded to Mac OS X 10.9 &amp;quot;Mavericks&amp;quot; today.&lt;/p&gt;
&lt;p&gt;Python 3.2.4 crashed in odd places. Not all the time. But help()
stopped working to give one example.&lt;/p&gt;
&lt;p&gt;I upgraded to Python 3.3 (it's about time to do that, anyway.)&lt;/p&gt;
&lt;p&gt;It crashed, also. Similar places.&lt;/p&gt;
&lt;p&gt;Here's the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 25 Oct 2013 18:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-10-25:/2013_10_25-mac_os_x_109_mavericks_crashes_python_patch_available.html</guid><category>Technologies</category><category>#python</category><category>patch</category><category>crash</category></item><item><title>Required Reading for everyone who said "If it ain't broke, don't fix it."</title><link>https://slott56.github.io/2013_10_24-required_reading_for_everyone_who_said_if_it_aint_broke_dont_fix_it.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://pythonsweetness.tumblr.com/post/64740079543/how-to-lose-172-222-a-second-for-45-minutes"&gt;http://pythonsweetness.tumblr.com/post/64740079543/how-to-lose-172-222-a-second-for-45-minutes&lt;/a&gt;
Here an important lesson.&lt;/p&gt;
&lt;blockquote&gt;
&lt;strong&gt;Code Rot is Real.  It Leads to Subtle and Expensive Bugs.&lt;/strong&gt;&lt;/blockquote&gt;
&lt;p&gt;Claiming that code cleanup is just pointless &amp;quot;gold plating&amp;quot; is the kind
of thing that can drive a company out of business.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 Oct 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-10-24:/2013_10_24-required_reading_for_everyone_who_said_if_it_aint_broke_dont_fix_it.html</guid><category>Technologies</category><category>software process improvement</category><category>legacy code</category></item><item><title>Literate Programming: PyLit3</title><link>https://slott56.github.io/2013_10_15-literate_programming_pylit3.html</link><description>&lt;p&gt;I've revised PyLit to work with Python3.
See &lt;a class="reference external" href="https://github.com/slott56/PyLit-3"&gt;https://github.com/slott56/PyLit-3&lt;/a&gt;
The code seems to pass all the unit tests.
The changes include Python3 revisions, plus a small change to handle
trailing spaces in a sightly cleaner fashion. This was necessary because
I have most of my editors …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Oct 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-10-15:/2013_10_15-literate_programming_pylit3.html</guid><category>Technologies</category><category>#python</category><category>PyLit</category><category>literate programming</category></item><item><title>Literate Programming and PyLit</title><link>https://slott56.github.io/2013_10_03-literate_programming_and_pylit.html</link><description>&lt;p&gt;Even though I wrote a literate programming tool
(&lt;a class="reference external" href="http://pywebtool.sourceforge.net/"&gt;PyWeb&lt;/a&gt;) I slowly came to
realize that it's not very good.&lt;/p&gt;
&lt;p&gt;Mostly, I followed the Web/Weave world view and cribbed their markup
syntax. It's not bad, but, the PyWeb markup is based on some
presumptions about literate programming that were, perhaps …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Oct 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-10-03:/2013_10_03-literate_programming_and_pylit.html</guid><category>Technologies</category><category>#python</category><category>literate programming</category><category>PyLit</category><category>pyWeb</category></item><item><title>Introduction to Programming: iBook Edition for Python 3.2</title><link>https://slott56.github.io/2013_09_24-introduction_to_programming_ibook_edition_for_python_32.html</link><description>&lt;p&gt;That was challenging.&lt;/p&gt;
&lt;p&gt;I rewrote almost all of my Introduction to Programming book into an
iBook. Trimmed it down. Refocused it. Changed from Python 2.6 to 3.2.
A complete refactoring from which almost nothing of the original book
survives except the goals.&lt;/p&gt;
&lt;p&gt;Look for it October 1st in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Sep 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-09-24:/2013_09_24-introduction_to_programming_ibook_edition_for_python_32.html</guid><category>Technologies</category><category>ebook</category><category>#python</category><category>ibooks</category><category>building skills books</category></item><item><title>iWeb File Extract and XML Iterators</title><link>https://slott56.github.io/2013_09_17-iweb_file_extract_and_xml_iterators.html</link><description>&lt;p&gt;Once upon a time, Apple offered iBlog. Then they switched to iWeb.
Then they abandoned that market entirely.&lt;/p&gt;
&lt;p&gt;That leaves some of us with content in iBlog as well as iWeb. Content
we'd like to work with without doing extensive cutting and pasting. Or
downloading from a web server. After …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Sep 2013 08:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-09-17:/2013_09_17-iweb_file_extract_and_xml_iterators.html</guid><category>Technologies</category><category>xml</category><category>#python</category><category>iWeb</category></item><item><title>Omni Outliner, XML Processing, and Recursive Generators</title><link>https://slott56.github.io/2013_09_12-omni_outliner_xml_processing_and_recursive_generators.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;First, and most important, &lt;a class="reference external" href="http://www.omnigroup.com/products/omnioutliner/"&gt;Omni
Outliner&lt;/a&gt; is a
super-flexible tool. Crazy levels of flexibility. It's very much a
generic-all-singing-all-dancing information management tool.&lt;/div&gt;
&lt;div class="line"&gt;It has a broad spectrum of file export alternative formats. Most of
which are fine for import into some kind of word processor.&lt;/div&gt;
&lt;div class="line"&gt;But what if the data …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 12 Sep 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-09-12:/2013_09_12-omni_outliner_xml_processing_and_recursive_generators.html</guid><category>Technologies</category><category>data conversion</category><category>#python</category><category>xml</category><category>ETL</category><category>csv</category></item><item><title>Omni Outliner and Content Conversion</title><link>https://slott56.github.io/2013_09_10-omni_outliner_and_content_conversion.html</link><description>&lt;p&gt;First, and most important, &lt;a class="reference external" href="http://www.omnigroup.com/products/omnioutliner/"&gt;Omni
Outliner&lt;/a&gt; is a
super-flexible tool. Crazy levels of flexibility. It's very much a
generic-all-singing-all-dancing information management tool.&lt;/p&gt;
&lt;p&gt;It has a broad spectrum of file export alternative formats. Most of
which are fine for import into some kind of word processor.&lt;/p&gt;
&lt;p&gt;But what if the data …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Sep 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-09-10:/2013_09_10-omni_outliner_and_content_conversion.html</guid><category>Technologies</category><category>data conversion</category><category>#python</category><category>ETL</category><category>csv</category></item><item><title>Negative Requirements</title><link>https://slott56.github.io/2013_08_08-negative_requirements.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Nothing is funnier than requirements which state things that are
&lt;strong&gt;not&lt;/strong&gt; to happen.&lt;/div&gt;
&lt;div class="line"&gt;An actual quote.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
... don't screw up cutting and pasting and the &amp;quot;/&amp;quot; vs &amp;quot;\&amp;quot; depending
on unix / windows.&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Why not list everything that's &lt;strong&gt;not&lt;/strong&gt; supposed to happen?&lt;/div&gt;
&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No fire in the server room.&lt;/li&gt;
&lt;li&gt;No anthrax outbreak.&lt;/li&gt;
&lt;li&gt;No Zombie apocalypse …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 08 Aug 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-08-08:/2013_08_08-negative_requirements.html</guid><category>Technologies</category><category>requirements</category><category>user stories</category></item><item><title>How to Manage Risk</title><link>https://slott56.github.io/2013_08_06-how_to_manage_risk.html</link><description>&lt;p&gt;Also see &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2013_06_27-on_risk_and_estimating_and_agile_methods.html"&gt;On Risk and Estimating and Agile
Methods&lt;/a&gt;&amp;quot;.
This post is yet another angle on a common theme.&lt;/p&gt;
&lt;div class="section" id="orders-of-ignorance-and-risk-management"&gt;
&lt;h2&gt;Orders of Ignorance and Risk Management.&lt;/h2&gt;
&lt;p&gt;Software risk management has two sides.  First, there's the classical
meaning of risk, we'll call that &amp;quot;casino risk&amp;quot; because it's really
random events.  This includes …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Aug 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-08-06:/2013_08_06-how_to_manage_risk.html</guid><category>Technologies</category><category>risk</category><category>software process improvement</category><category>project management</category><category>estimating</category></item><item><title>Almost a good idea</title><link>https://slott56.github.io/2013_07_25-almost_a_good_idea.html</link><description>&lt;p&gt;Appleworks (formerly Clarisworks) is software that's been dead meat
since 2007.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://en.wikipedia.org/wiki/AppleWorks#End_of_Appleworks"&gt;http://en.wikipedia.org/wiki/AppleWorks#End_of_Appleworks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Which is fine unless you have an old computer with old applications
that still works. For example, a 2002-vintage iMac
G4 &lt;a class="reference external" href="http://www.imachistory.com/2002/"&gt;http://www.imachistory.com/2002/&lt;/a&gt; still works. Slowly.&lt;/p&gt;
&lt;p&gt;When someone …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Jul 2013 13:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-07-25:/2013_07_25-almost_a_good_idea.html</guid><category>Technologies</category><category>data conversion</category><category>macosx</category><category>#python</category></item><item><title>NoSQL Befuddlement: DML and Persistence</title><link>https://slott56.github.io/2013_07_18-nosql_befuddlement_dml_and_persistence.html</link><description>&lt;p&gt;It may be helpful to look back at '&lt;a class="reference external" href="https://slott56.github.io/2013_07_16-how_managers_say_no_the_rdbms_hegemony_example.html"&gt;How Managers Say
&amp;quot;No&amp;quot;&lt;/a&gt;'
which is about breaking the RDBMS Hegemony.&lt;/p&gt;
&lt;p&gt;I got an email in which the simple concepts of &amp;quot;data manipulation&amp;quot; and
&amp;quot;persistence&amp;quot; had become entangled with SQL DML to a degree that the
conversation failed to make sense to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 18 Jul 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-07-18:/2013_07_18-nosql_befuddlement_dml_and_persistence.html</guid><category>Technologies</category><category>#python</category><category>data persistence</category><category>architecture</category><category>noSQL</category><category>Apache</category><category>csv</category><category>RDBMS</category><category>SQL</category></item><item><title>How Managers Say "No": The RDBMS Hegemony Example</title><link>https://slott56.github.io/2013_07_16-how_managers_say_no_the_rdbms_hegemony_example.html</link><description>&lt;p&gt;Got an email looking for help in attempting break through the &lt;strong&gt;RDBMS
Hegemony&lt;/strong&gt;. It's a little confusing, but this is the important part of
how management says &amp;quot;no&amp;quot;.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Their response was nice but can you flush [&lt;em&gt;sic&lt;/em&gt;] it out more&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;[&lt;em&gt;First: the word is &amp;quot;flesh&amp;quot;: &amp;quot;flesh it out.&amp;quot; Repeat after …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Jul 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-07-16:/2013_07_16-how_managers_say_no_the_rdbms_hegemony_example.html</guid><category>Technologies</category><category>project management</category><category>architecture</category><category>RDBMS</category><category>noSQL</category><category>SQL</category></item><item><title>HamCalc Quirk of the Week</title><link>https://slott56.github.io/2013_07_09-hamcalc_quirk_of_the_week.html</link><description>&lt;p&gt;The HamCalc program &lt;strong&gt;binhop&lt;/strong&gt; is one of those little nuggets of beauty that
might be helpful or might be useless. Or. Perhaps there's some useful
stuff commingled with quirky stuff.&lt;/p&gt;
&lt;p&gt;For folks in agriculture or manufacturing, I'm hoping that the
calculation could be helpful. Although it's also likely that folks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Jul 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-07-09:/2013_07_09-hamcalc_quirk_of_the_week.html</guid><category>Technologies</category><category>HamCalc</category><category>preservation</category><category>GW-Basic</category><category>modernization</category></item><item><title>How to Estimate a Project</title><link>https://slott56.github.io/2013_06_27-how_to_estimate_a_project.html</link><description>&lt;p&gt;A recent question&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;what we might expect, in terms of 1) Time to completion, 2) Cost to
implement according to the mockup, 3) Monthly server/maintenance
costs and 4) approximate team size required&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;This question was followed by this acknowledgement:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;it is hard to make the above estimations, given the …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Jun 2013 10:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-27:/2013_06_27-how_to_estimate_a_project.html</guid><category>Technologies</category><category>budgeting</category><category>software process improvement</category><category>estimating</category></item><item><title>On Risk and Estimating and Agile Methods</title><link>https://slott56.github.io/2013_06_27-on_risk_and_estimating_and_agile_methods.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/iblog/C1076854706/E20070106101634.html"&gt;The Question of
Risk&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, see &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/iblog/C412398194/E20080902155944.html"&gt;Lean Projects -- Not Deficient
Projects&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;And &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/iblog/C1076854706/E20080514185337.html"&gt;Keeping the Customer
Satisfied&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These are notes for a long, detailed rant on the value of Agile
methods.&lt;/p&gt;
&lt;p&gt;One specious argument against an Agile approach is the &amp;quot;risk
management&amp;quot; question. In this case, however, it becomes a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Jun 2013 10:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-27:/2013_06_27-on_risk_and_estimating_and_agile_methods.html</guid><category>Technologies</category><category>risk</category><category>project management</category></item><item><title>Amazing Speedup</title><link>https://slott56.github.io/2013_06_27-amazing_speedup.html</link><description>&lt;p&gt;A library had unit tests that ran for almost 600 seconds. Two small
changes dropped the run time to 26 seconds.&lt;/p&gt;
&lt;p&gt;I was amazed.&lt;/p&gt;
&lt;p&gt;Step 1. I turned on the cProfile. I added two methods to the slowest
unit test module.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
def profile():
    import cProfile
    cProfile.run( 'main()', 'the_slow_module.prof' …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Jun 2013 10:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-27:/2013_06_27-amazing_speedup.html</guid><category>Technologies</category><category>performance</category><category>algorithm</category><category>#python</category></item><item><title>Performance "Tuning": running in 1/100th the time</title><link>https://slott56.github.io/2013_06_27-performance_tuning_running_in_1100th_the_time.html</link><description>&lt;p&gt;For the &lt;a class="reference external" href="http://www.meetup.com/757-Python-Users-Group/"&gt;757 Python Meetup&lt;/a&gt; group,
someone proposed looking at some Python code they had which was slow.
The code implemented a variation on the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Elo_rating_system"&gt;Elo chess rating
system&lt;/a&gt;.  It
applied the ratings to other sports, and used the points scored as
well as basic win/lose/tie to work …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Jun 2013 10:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-27:/2013_06_27-performance_tuning_running_in_1100th_the_time.html</guid><category>Architecture &amp; Design</category><category>performance</category><category>algorithm</category><category>test-driven reverse engineering</category><category>complexity</category></item><item><title>Password Encryption -- Short Answer: Don't.</title><link>https://slott56.github.io/2013_06_27-password_encryption_short_answer_dont.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;First, read this.    &lt;a class="reference external" href="http://arstechnica.com/security/2012/08/passwords-under-assault/"&gt;Why passwords have never been weaker—and
crackers have never been
stronger&lt;/a&gt;.&lt;/div&gt;
&lt;div class="line"&gt;There are numerous important lessons in this article.&lt;/div&gt;
&lt;div class="line"&gt;One of the small lessons is that changing your password every sixty or
ninety days is farcical.  The rainbow table algorithms can crack a
badly-done password in …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Jun 2013 10:03:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-27:/2013_06_27-password_encryption_short_answer_dont.html</guid><category>Architecture &amp; Design</category><category>algorithm</category><category>software process improvement</category><category>encryption</category><category>security</category></item><item><title>How to Make Technology Choices</title><link>https://slott56.github.io/2013_06_26-how_to_make_technology_choices.html</link><description>&lt;p&gt;I get emails looking for help with technology choice. Essentially:
&amp;quot;I've got this idea for game-changing software idea, what technology
should I use?&amp;quot; These questions have disturbing expectations. There's a
Gordian Knot of dependencies that's sometimes baffling.&lt;/p&gt;
&lt;p&gt;Sometimes the questions are about choosing a &amp;quot;tech stack&amp;quot; or an
&amp;quot;architecture&amp;quot;. Sometimes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Jun 2013 16:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-26:/2013_06_26-how_to_make_technology_choices.html</guid><category>Technologies</category><category>complexity</category><category>architecture</category></item><item><title>Automated Code Modernization: Don't Pave the Cowpaths</title><link>https://slott56.github.io/2013_06_20-automated_code_modernization_dont_pave_the_cowpaths.html</link><description>&lt;p&gt;After talking about some experience with legacy modernization (or
migration), I received information from &lt;a class="reference external" href="http://bphx.com/"&gt;Blue
Phoenix&lt;/a&gt; about their approach to modernization.&lt;/p&gt;
&lt;p&gt;Before talking about modernization, it's important to think about the
following issue from two points of view.&lt;/p&gt;
&lt;blockquote&gt;
Modernization can amount to nothing more than &lt;a class="reference external" href="http://www.fastcompany.com/1769710/change-management-paving-cowpaths"&gt;Paving the
Cowpaths&lt;/a&gt;.&lt;/blockquote&gt;
&lt;p&gt;From a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Jun 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-20:/2013_06_20-automated_code_modernization_dont_pave_the_cowpaths.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>modern</category><category>data conversion</category><category>legacy code</category><category>use case</category><category>software process improvement</category><category>user stories</category><category>schema migration</category></item><item><title>The Small Class Large Class "Question"</title><link>https://slott56.github.io/2013_06_18-the_small_class_large_class_question.html</link><description>&lt;p&gt;Tweet:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;People criticize for making tons of small classes instead of fewer
larger classes.How is well-organized code more difficult to
understand?&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;jim christopher (&amp;#64;beefarino) &lt;a class="reference external" href="https://twitter.com/beefarino/status/340533020815675392"&gt;May 31,
2013&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This isn't really a question. Writing a few &amp;quot;large&amp;quot; omnibus classes is
simply bad design.&lt;/p&gt;
&lt;p&gt;There are several variations on the theme …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 18 Jun 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-18:/2013_06_18-the_small_class_large_class_question.html</guid><category>Technologies</category><category>project management</category><category>object-oriented design</category><category>software process improvement</category></item><item><title>HamCalc and Quirks</title><link>https://slott56.github.io/2013_06_13-hamcalc_and_quirks.html</link><description>&lt;p&gt;Careful study of the HamCalc shows a number of quirks. Some are funny,
some are just examples of the need for unit test frameworks.
The Wikispaces for the modernization project
is here: &lt;a class="reference external" href="http://hamcalc.wikispaces.com/home"&gt;http://hamcalc.wikispaces.com/home&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For example, the following line of code, in GW-Basic, will (usually) set
Y …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Jun 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-13:/2013_06_13-hamcalc_and_quirks.html</guid><category>Technologies</category><category>HamCalc</category><category>preservation</category><category>GW-Basic</category><category>modernization</category><category>software process improvement</category><category>test-driven reverse engineering</category></item><item><title>Python Roadmap Amplifications and Clarifications</title><link>https://slott56.github.io/2013_06_11-python_roadmap_amplifications_and_clarifications.html</link><description>&lt;p&gt;Some additional points on using Python 2.7 in a way that bridges the gap
to Python 3.2. The steps are small and simple. You can start taking them
now.&lt;/p&gt;
&lt;p&gt;Recently I suggested that one should always include &lt;tt class="docutils literal"&gt;from __future__ import division, print_function&lt;/tt&gt; on every module. &lt;strong&gt;Always&lt;/strong&gt;. Every
Module …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jun 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-11:/2013_06_11-python_roadmap_amplifications_and_clarifications.html</guid><category>Technologies</category><category>#python</category></item><item><title>Obstinate Idiocy [Updated]</title><link>https://slott56.github.io/2022_11_22-obstinate_idiocy_updated.html</link><description>&lt;p&gt;Once in a great while, you see someone engaging in Obstinate Idiocy.&lt;/p&gt;
&lt;p&gt;Here's my recent example.&lt;/p&gt;
&lt;p&gt;They're solving some kind of differential equation. Not sure why.&lt;/p&gt;
&lt;p&gt;Symptom 1 of Obstinate Idiocy is &lt;strong&gt;No Rational Justification&lt;/strong&gt;. The
explanation is often &amp;quot;that's not relevant, what's relevant is this other
thing I want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Jun 2013 07:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-06:/2022_11_22-obstinate_idiocy_updated.html</guid><category>Technologies</category><category>#python</category><category>spreadsheet</category><category>software design</category><category>software process improvement</category><category>analysis</category></item><item><title>HamCalc -- Preserving the Legacy</title><link>https://slott56.github.io/2013_06_02-hamcalc_preserving_the_legacy.html</link><description>&lt;p&gt;Wow.
The response to modernizing HamCalc was overwhelming.
Apparently there are a fair number of people who also think that HamCalc
is a treasure to be preserved, improved and added-to.
If you're interested, start here: &lt;a class="reference external" href="http://hamcalc.wikispaces.com/home"&gt;http://hamcalc.wikispaces.com/home&lt;/a&gt;
You can ask to be a member of this wiki …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 02 Jun 2013 14:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-06-02:/2013_06_02-hamcalc_preserving_the_legacy.html</guid><category>Technologies</category><category>GW-Basic</category><category>test-driven reverse engineering</category><category>HamCalc</category></item><item><title>Legacy Preservation and "Code Modernization"</title><link>https://slott56.github.io/2013_05_30-legacy_preservation_and_code_modernization.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The correct marketing term is &amp;quot;Code Modernization&amp;quot;.&lt;/div&gt;
&lt;div class="line"&gt;There are a large number of companies in the Code Modernization
business.&lt;/div&gt;
&lt;div class="line"&gt;They appear to offer &lt;em&gt;automated&lt;/em&gt; &amp;quot;modernization&amp;quot; of code.&lt;/div&gt;
&lt;div class="line"&gt;I would suggest going slowly toward automated modernization. I'm not
easily convinced that any automated tool can preserve what's
meaningful and ignore the …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-30:/2013_05_30-legacy_preservation_and_code_modernization.html</guid><category>Technologies</category><category>preservation</category><category>test-driven reverse engineering</category><category>modernization</category></item><item><title>Legacy Code Preservation: Language Incompatibility and Technology Evolution</title><link>https://slott56.github.io/2013_05_23-legacy_code_preservation_language_incompatibility_and_technology_evolution.html</link><description>&lt;p&gt;It's important to address language or platform incompatibility as
consequences of technology modernization. The reason why we have to do
manual conversions of software is because of the language
incompatibility issue. We must convert manually when no tool can do
the conversion.&lt;/p&gt;
&lt;p&gt;There are several layers to this.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Platform Incompatibility …&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-23:/2013_05_23-legacy_code_preservation_language_incompatibility_and_technology_evolution.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Some Patterns</title><link>https://slott56.github.io/2013_05_21-legacy_code_preservation_some_patterns.html</link><description>&lt;div class="section docutils container" id="some-patterns"&gt;
&lt;p&gt;After looking at this suite of examples, we can see some patterns
emerging. There seem to be several operating principles.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;The Data Matters&lt;/strong&gt;. In many cases, the data is the only thing
that actually matters. The legacy application knowledge may be
obsolete, or so riddled with quirks as to be …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-21:/2013_05_21-legacy_code_preservation_some_patterns.html</guid><category>Technologies</category><category>test-driven reverse engineering</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Why Preserve the DSL?</title><link>https://slott56.github.io/2013_05_16-legacy_code_preservation_why_preserve_the_dsl.html</link><description>&lt;div class="section docutils container" id="why-preserve-the-dsl"&gt;
&lt;p&gt;A Domain-Specific Language (DSL) can provide some intellectual
leverage. We can always write long and convoluted programs in a
general-purpose programming language (like Python, Java or C).&lt;/p&gt;
&lt;p&gt;Sometimes it can make more sense to invent a new domain-specific
language and implement the solution in that language.&lt;/p&gt;
&lt;p&gt;Sometimes, even well-written, highly …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 16 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-16:/2013_05_16-legacy_code_preservation_why_preserve_the_dsl.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: How Do We Manage This?</title><link>https://slott56.github.io/2013_05_14-legacy_code_preservation_how_do_we_manage_this.html</link><description>&lt;div class="section docutils container" id="how-do-we-manage-this"&gt;
&lt;p&gt;At an insurance company, I encountered an application that had been
in place for thirty years.&lt;/p&gt;
&lt;p&gt;Classic flat-file, mainframe COBOL. And decades old.
It had never been replaced with a packaged solution. It had never
been converted to a SQL database. It had never been rewritten in VB
to run …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-14:/2013_05_14-legacy_code_preservation_how_do_we_manage_this.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Why Preserve An Abomination?</title><link>https://slott56.github.io/2013_05_09-legacy_code_preservation_why_preserve_an_abomination.html</link><description>&lt;div class="section docutils container" id="why-preserve-an-abomination"&gt;
&lt;p&gt;By the early aughts (2001-2005) Visual Basic had gone from state of
the art to a legacy application language. Code written in VB was
being replaced with something more modern (generally Java.)&lt;/p&gt;
&lt;p&gt;Having worked with COBOL and Fortran legacy programs, it's easy to
describe this legacy VB code as an …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-09:/2013_05_09-legacy_code_preservation_why_preserve_an_abomination.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: The Bugs Are The Features</title><link>https://slott56.github.io/2013_05_07-legacy_code_preservation_the_bugs_are_the_features.html</link><description>&lt;p&gt;The extreme end of &amp;quot;paving the cowpaths&amp;quot; are people for whom the bug
list is also the feature list.&lt;/p&gt;
&lt;p&gt;This is a very strange phenomenon, rarely seen, but still relevant to
this review.&lt;/p&gt;
&lt;p&gt;In this particular case, the legacy application was some kind of
publishing tool. It used MS-Word documents …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-07:/2013_05_07-legacy_code_preservation_the_bugs_are_the_features.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Data Warehouse and Legacy Operations</title><link>https://slott56.github.io/2013_05_02-legacy_code_preservation_data_warehouse_and_legacy_operations.html</link><description>&lt;p&gt;A data warehouse preserves data.&lt;/p&gt;
&lt;p&gt;It can be argued that a data warehouse preserves &lt;strong&gt;only&lt;/strong&gt; data. This,
however, is false.&lt;/p&gt;
&lt;p&gt;To an extent, a data warehouse must also preserve processing details.&lt;/p&gt;
&lt;p&gt;Indeed, a data warehouse exemplifies knowledge capture because the
data and its processing steps are both captured.&lt;/p&gt;
&lt;p&gt;The ETL …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 02 May 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-05-02:/2013_05_02-legacy_code_preservation_data_warehouse_and_legacy_operations.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Paving the Cowpaths</title><link>https://slott56.github.io/2013_04_30-legacy_code_preservation_paving_the_cowpaths.html</link><description>&lt;div class="section docutils container" id="paving-the-cowpaths"&gt;
&lt;p&gt;No discussion of legacy preservation is complete without some &amp;quot;Paving
the Cowpaths&amp;quot; stories.&lt;/p&gt;
&lt;p&gt;The phrase refers to the way cows tend to meander across the
landscape in a remarkably consistent way. The cows reliably follow a
consistent path. The paths tend to wander in ways that seem crazy to
us …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 30 Apr 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-30:/2013_04_30-legacy_code_preservation_paving_the_cowpaths.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: What's the Cost?</title><link>https://slott56.github.io/2013_04_25-legacy_code_preservation_whats_the_cost.html</link><description>&lt;div class="section docutils container" id="what-s-the-cost"&gt;
&lt;p&gt;It's 1980-something. We're working on a fairly complex system that
includes some big machines and three computers. One of the computers
has a magnetic tape drive into which it writes a log of interesting
events. In the 80's, this was a pretty big deal.&lt;/p&gt;
&lt;p&gt;An operational run will produce a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Apr 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-25:/2013_04_25-legacy_code_preservation_whats_the_cost.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: Are There Quirks?</title><link>https://slott56.github.io/2013_04_23-legacy_code_preservation_are_there_quirks.html</link><description>&lt;div class="section docutils container" id="are-there-quirks"&gt;
&lt;p&gt;Let's visit some other conversion activities in the 1970's. The gig
was at a company implementing a customized insurance application. The
actuaries used a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/PDP-10"&gt;PDP-10&lt;/a&gt;
(and Fortran) to compute their various tables and summaries.&lt;/p&gt;
&lt;p&gt;I was roped into rewriting an actuarial Fortran programs into
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/PL/I"&gt;PL/1&lt;/a&gt; for an &lt;a class="reference external" href="http://en.wikipedia.org/wiki/IBM_System/370"&gt;IBM
370 …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Apr 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-23:/2013_04_23-legacy_code_preservation_are_there_quirks.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation: What's the Story?</title><link>https://slott56.github.io/2013_04_18-legacy_code_preservation_whats_the_story.html</link><description>&lt;div class="section docutils container" id="what-s-the-story"&gt;
&lt;p&gt;Wind back the clock to the late 1970's. Yes, there were computers in
those days.&lt;/p&gt;
&lt;p&gt;Some of my earliest billable gigs where conversions from old OS to
new OS. (Specifically DOS/VSE to OS/370, now called Z/OS.) Back when
a company owned exactly one computer, all of the …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 18 Apr 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-18:/2013_04_18-legacy_code_preservation_whats_the_story.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>Legacy Code Preservation</title><link>https://slott56.github.io/2013_04_16-legacy_code_preservation.html</link><description>&lt;p&gt;This is important:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Rule One: Writing Software is Capturing Knowledge.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consequence: Converting Software is Preserving Knowledge.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When software is revised for a new framework or operating system or
database or when an algorithm is converted to a new language, then
we're &amp;quot;converting&amp;quot; (or &amp;quot;migrating&amp;quot;) software. We're preserving code,
and preserving …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 16 Apr 2013 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-16:/2013_04_16-legacy_code_preservation.html</guid><category>Technologies</category><category>HamCalc</category><category>knowledge capture</category></item><item><title>This Seems Irrational... But... HamCalc</title><link>https://slott56.github.io/2013_04_11-this_seems_irrational_but_hamcalc.html</link><description>&lt;p&gt;Step 1.  Look at the
original &lt;a class="reference external" href="http://www.cq-amateur-radio.com/cq_ham_calc/cq_ham_calc.html"&gt;HamCalc&lt;/a&gt;.
Even if you aren't interested in Ham radio, it's an epic, evolving
achievement in a specialized kind of engineering support.  It's a
repository of mountains of mathematical models, some published by the
&lt;a class="reference external" href="http://www.arrl.org/"&gt;ARRL&lt;/a&gt;, others scattered around the internet.&lt;/p&gt;
&lt;p&gt;Step 2.  Look closely at …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 11 Apr 2013 09:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2013-04-11:/2013_04_11-this_seems_irrational_but_hamcalc.html</guid><category>Technologies</category><category>#python</category><category>knowledge capture</category><category>HamCalc</category><category>GW-Basic</category><category>test-driven reverse engineering</category></item><item><title>RESTful Web Services Testing, Q&amp;A</title><link>https://slott56.github.io/2012_09_13-restful_web_services_testing_qa.html</link><description>&lt;p&gt;Some background:&lt;/p&gt;
&lt;p&gt;I was vaguely pointed at one call in an API, via a 2-page &amp;quot;tutorial&amp;quot;
that uses CURL examples. Told &amp;quot;Test this some more.&amp;quot; by the guy who'd
been doing some amount (none?) of hand &amp;quot;success path&amp;quot; testing via
CURL. This has since morphed into &amp;quot;regression testing things, all …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Sep 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-09-13:/2012_09_13-restful_web_services_testing_qa.html</guid><category>Technologies</category><category>unit testing</category></item><item><title>RESTful Web Service Testing</title><link>https://slott56.github.io/2012_09_11-restful_web_service_testing.html</link><description>&lt;p&gt;Unit testing RESTful web services is rather complex.  Ideally, the
services are tested in isolation before being packaged as a service.&lt;/p&gt;
&lt;p&gt;However, sometimes people will want to test the &amp;quot;finished&amp;quot; or
&amp;quot;integrated&amp;quot; web services technology stack because (I suppose) they
don't trust their lower-level unit tests.&lt;/p&gt;
&lt;p&gt;Or they don't have …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Sep 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-09-11:/2012_09_11-restful_web_service_testing.html</guid><category>Technologies</category><category>unit testing</category><category>JUnit</category><category>REST</category></item><item><title>How Expensive is a "Waterfall" Project Plan?</title><link>https://slott56.github.io/2012_08_08-how_expensive_is_a_waterfall_project_plan.html</link><description>&lt;p&gt;It's impossible to step into the same river twice; other waters are
flowing toward the sea.  It's impossible to do &amp;quot;head-to-head&amp;quot; project
comparisons.  You can't have the same people doing the same thing with
only one constraint changed.  You can try to resort to having similar
people doing the exact …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Aug 2012 08:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-08-08:/2012_08_08-how_expensive_is_a_waterfall_project_plan.html</guid><category>Technologies</category><category>software process improvement</category><category>waterfall</category><category>agile</category></item><item><title>Innovation, Arduino and "Tinkering"</title><link>https://slott56.github.io/2012_07_12-innovation_arduino_and_tinkering.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Many of my customers (mostly super-large IT shops) wouldn't recognize
innovative behavior.  Large organizations tend to punish defectors
(folks that don't conform), and innovation is non-conforming.&lt;/div&gt;
&lt;div class="line"&gt;I've just had two object lessons in innovation.  The state of the art
has left many in-house IT development processes in the dust.  The …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 12 Jul 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-07-12:/2012_07_12-innovation_arduino_and_tinkering.html</guid><category>Technologies</category><category>arduino</category><category>#MADExpo</category><category>innovation</category></item><item><title>Cool stuff I saw at MADExpo</title><link>https://slott56.github.io/2012_07_10-cool_stuff_i_saw_at_madexpo.html</link><description>&lt;p&gt;A random list of cool things.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;HTML5.  Start now.  It's supported (more or less) by all browsers if
you add appropriate shims.  Start with sites
like &lt;a class="reference external" href="http://www.html5rocks.com/en/"&gt;http://www.html5rocks.com/en/&lt;/a&gt; and continue reading.  It's
largely arrived and there's no compelling reason to delay.&lt;/li&gt;
&lt;li&gt;JavaScript.  I'm not a fan of …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jul 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-07-10:/2012_07_10-cool_stuff_i_saw_at_madexpo.html</guid><category>Technologies</category><category>arduino</category><category>titanium</category><category>jquery</category><category>HTML</category><category>mongodb</category><category>redis</category><category>javascript</category></item><item><title>Book Deal Fell Apart (sigh)</title><link>https://slott56.github.io/2012_07_03-book_deal_fell_apart_sigh.html</link><description>&lt;p&gt;After spending a couple of years (really) working with a publisher,
the deal has gone south.&lt;/p&gt;
&lt;p&gt;The problem was—likely—all mine.  The book wasn't &lt;em&gt;really&lt;/em&gt; what the
publisher wanted.  Perhaps it was close and they thought they could
edit it into shape.  And perhaps I wasn't responsive enough to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jul 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-07-03:/2012_07_03-book_deal_fell_apart_sigh.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>How to Write Crummy Requirements</title><link>https://slott56.github.io/2012_06_28-how_to_write_crummy_requirements.html</link><description>&lt;p&gt;Here's an object lesson in bad requirements writing.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Good&amp;quot; is defined as a nice simple and intuitive GUI interface. I
would be able to just pick symbol from a pallette and put it
somewhere and the software would automatically adjust the spacing.&lt;/blockquote&gt;
&lt;p&gt;Some problems.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Noise words&lt;/strong&gt;.  Phrases like &amp;quot;'Good' is …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-28:/2012_06_28-how_to_write_crummy_requirements.html</guid><category>Architecture &amp; Design</category><category>requirements</category><category>use case</category><category>LaTeX</category><category>user stories</category></item><item><title>MADExpo 2012</title><link>https://slott56.github.io/2012_06_26-madexpo_2012.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://madexpo.us/"&gt;http://madexpo.us/&lt;/a&gt;
June 27 - 29
Hampton, VA&lt;/p&gt;
&lt;p&gt;I hope to see you there.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-26:/2012_06_26-madexpo_2012.html</guid><category>Technologies</category><category>#MADExpo</category><category>#python</category></item><item><title>QR Code</title><link>https://slott56.github.io/2012_06_21-qr_code.html</link><description>&lt;p&gt;I suddenly realized that QR Codes are everywhere.
Except my business cards.
&lt;a class="reference external" href="http://pypi.python.org/pypi/qrcode/2.0"&gt;http://pypi.python.org/pypi/qrcode/2.0&lt;/a&gt;
That should allow me to solve that problem and move on.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="http-zxing-appspot-com-generator"&gt;
&lt;h2&gt;&lt;a class="reference external" href="http://zxing.appspot.com/generator/"&gt;http://zxing.appspot.com/generator/&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Unknown&amp;lt;&lt;a class="reference external" href="mailto:noreply&amp;#64;blogger.com"&gt;noreply&amp;#64;blogger.com&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;2012-06-24 03:02:38.966000-04:00&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://zxing.appspot.com/generator/"&gt;http://zxing.appspot.com …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-21:/2012_06_21-qr_code.html</guid><category>Technologies</category><category>#python</category></item><item><title>Dereliction of Duty</title><link>https://slott56.github.io/2012_06_19-dereliction_of_duty.html</link><description>&lt;p&gt;Recently started looking into &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Metadata_registry"&gt;Metadata
Registries&lt;/a&gt; and
UDEF and related semantic technology.&lt;/p&gt;
&lt;p&gt;The Wikipedia page lists a bunch of relevant Metadata Registry
projects and commercial products.  Very nice.  Easy to follow the
links and determine features and benefits.&lt;/p&gt;
&lt;p&gt;However.&lt;/p&gt;
&lt;p&gt;A client has IBM Cognos.  Is there any easy to to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-19:/2012_06_19-dereliction_of_duty.html</guid><category>Technologies</category><category>metadata</category><category>udef</category><category>cognos</category></item><item><title>IBM RAMAC Device: 5 MB</title><link>https://slott56.github.io/2012_06_14-ibm_ramac_device_5_mb.html</link><description>&lt;p&gt;Check out this picture.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.petapixel.com/2011/12/27/what-5mb-of-storage-looked-like-in-1956/"&gt;http://www.petapixel.com/2011/12/27/what-5mb-of-storage-looked-like-in-1956/&lt;/a&gt;&lt;/p&gt;
&lt;div class="section" id="random-reminiscing-follows"&gt;
&lt;h2&gt;Random Reminiscing Follows&lt;/h2&gt;
&lt;p&gt;When I was in college (1974-1978) 64K of RAM was the size of a
refrigerator.&lt;/p&gt;
&lt;p&gt;By 1982, 64K of RAM was an Apple ][+ fully tricked out with the 16K
expansion card.&lt;/p&gt;
&lt;p&gt;I vaguely remember working …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-14:/2012_06_14-ibm_ramac_device_5_mb.html</guid><category>Technologies</category><category>hardware</category><category>software process improvement</category><category>tdd</category><category>methodology</category></item><item><title>The Universal Data Element Framework (UDEF)</title><link>https://slott56.github.io/2012_06_12-the_universal_data_element_framework_udef.html</link><description>&lt;p&gt;Okay.  This is seriously cool.&lt;/p&gt;
&lt;p&gt;The Universal Data Element Framework (UDEF)  provides a controlled
vocabulary that should be used to seed a project's data model.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.udef.com/"&gt;http://www.udef.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.opengroup.org//udef/"&gt;http://www.opengroup.org//udef/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We're looking at applying UDEF retroactively to an existing schema.&lt;/p&gt;
&lt;p&gt;What a pain in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-12:/2012_06_12-the_universal_data_element_framework_udef.html</guid><category>Technologies</category><category>#python</category><category>software design</category><category>UDEF</category></item><item><title>Stingray Schema-Based File Reader</title><link>https://slott56.github.io/2012_06_07-stingray_schema_based_file_reader.html</link><description>&lt;p&gt;Just updated the &lt;a class="reference external" href="https://sourceforge.net/projects/stingrayreader/"&gt;Stingray
Reader&lt;/a&gt;.  There was
an egregious error (and a missing test case).  I fixed the error, but
didn't add a test case to cover the problem.
It's simple laziness.  TDD is quite clear on how to tackle this kind of
thing.  Write the missing test case (which …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 07 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-07:/2012_06_07-stingray_schema_based_file_reader.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category><category>tdd</category><category>stingray reader</category></item><item><title>COBOL Rework</title><link>https://slott56.github.io/2012_06_05-cobol_rework.html</link><description>&lt;p&gt;See this article: &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/s/article/9227263/The_Cobol_Brain_Drain?taxonomyId=154"&gt;The COBOL Brain
Drain&lt;/a&gt;&amp;quot;
in ComputerWorld.  This article is very, very well written and repeats
a number of common fallacies.&lt;/p&gt;
&lt;p&gt;The fallacies lead to expensive, labor-intensive in-house software
development and maintenance.  Either there's a lot of effort poking at
the COBOL code.  Or there's a lot of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Jun 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-06-05:/2012_06_05-cobol_rework.html</guid><category>Technologies</category><category>test-driven reverse engineering</category><category>data conversion</category><category>COBOL</category></item><item><title>The Passive-Aggressive Programmer (again)</title><link>https://slott56.github.io/2012_05_31-the_passive_aggressive_programmer_again.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I'm not even interested in psychology.  But.  This kind of thing seems
to come up once in a great while.&lt;/div&gt;
&lt;div class="line"&gt;You're asked (or &amp;quot;forced&amp;quot;) to work with someone who—essentially—fails
to cooperate.  They don't actively disagree or actively suggest
something better.  They passively fail to agree.&lt;/div&gt;
&lt;div class="line"&gt;In fact, they …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-31:/2012_05_31-the_passive_aggressive_programmer_again.html</guid><category>Technologies</category><category>passive-aggressive programmer</category><category>software process improvement</category></item><item><title>Mid-Atlantic Design Expo (MADExpo)</title><link>https://slott56.github.io/2012_05_29-mid_atlantic_design_expo_madexpo.html</link><description>&lt;p&gt;&lt;img alt="220x250_4.jpg" src="webkit-fake-url://FFFD5FCE-633E-470E-ACEB-77A7BCBD3153/220x250_4.jpg" /&gt;&lt;/p&gt;
&lt;p&gt;I'm looking forward to this.  I'll be talking about Python.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;A Python 3.2 tutorial.  I did a dry run with the help of the 757
Python group.  Made a bunch of changes based on their input.&lt;/li&gt;
&lt;li&gt;A more in-depth presentation on a good architecture of Database
Schema Migration scripts …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-29:/2012_05_29-mid_atlantic_design_expo_madexpo.html</guid><category>Technologies</category><category>#python</category><category>SQL</category><category>#MADExpo</category><category>scripted</category><category>star-schema</category><category>schema migration</category></item><item><title>Delusional Project Managers</title><link>https://slott56.github.io/2012_05_24-delusional_project_managers.html</link><description>&lt;p&gt;Maybe it's the circle-R in the PMP® signature that put me off.&lt;/p&gt;
&lt;p&gt;What's important is that the PMP-certified project manager is absolutely
married to fixed-price software development.  The idea of &amp;quot;Agile&amp;quot; was
unthinkable.  They were very clear that we had enough information to
create a fixed price.&lt;/p&gt;
&lt;p&gt;It's hard to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 May 2012 10:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-24:/2012_05_24-delusional_project_managers.html</guid><category>Technologies</category><category>software process improvement</category><category>agile</category><category>estimating</category></item><item><title>Are engineers valued?</title><link>https://slott56.github.io/2012_05_24-are_engineers_valued.html</link><description>&lt;p&gt;Check out this post: &amp;quot;&lt;a class="reference external" href="http://sef.kloninger.com/2012/05/engineering-culture-litmus-tests/"&gt;Why Quit? Because They Have Bigger
Monitors&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Brilliant summary of a few small cost things that have a large impact.
How many other signals are being sent?&lt;/p&gt;
&lt;p&gt;Jim B. once pointed out that some organizations are entirely run by the
accountants.  You can have a good …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 24 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-24:/2012_05_24-are_engineers_valued.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Flickr, Innovation and Integration</title><link>https://slott56.github.io/2012_05_17-flickr_innovation_and_integration.html</link><description>&lt;p&gt;Read this on Gizmodo: &amp;quot;&lt;a class="reference external" href="http://gizmodo.com/5910223/how-yahoo-killed-flickr-and-lost-the-internet"&gt;How Yahoo Killed Flickr and Lost the
Internet&lt;/a&gt;&amp;quot;
Compelling stuff: &amp;quot;Integration Is The Enemy of Innovation&amp;quot;.
&amp;quot;[Corporate Development milestones] often completely ignore what made
the smaller target valuable in the first place.&amp;quot;
Lessons learned: it's hard to apply structured, formal, financial
controls to innovation.  As soon …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-17:/2012_05_17-flickr_innovation_and_integration.html</guid><category>Technologies</category><category>innovation</category><category>software process improvement</category></item><item><title>More of Disruptive Technology Change</title><link>https://slott56.github.io/2012_05_08-more_of_disruptive_technology_change.html</link><description>&lt;p&gt;There's a cool infographic on technology change in FrugalDad.  See &lt;a class="reference external" href="http://frugaldad.com/personal-technology/"&gt;The
Great Disruption: The Future of Personal
Tech&lt;/a&gt;.  It's interesting
and informative, but the few predictions it makes are not really
&lt;em&gt;disruptive&lt;/em&gt;.  You wouldn't see anyone lobbying against the suggested
future directions.  They're all good ideas that leverage existing
technology …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-08:/2012_05_08-more_of_disruptive_technology_change.html</guid><category>Technologies</category><category>innovation</category><category>disruption</category></item><item><title>Bravo -- Iteration and Generator Functions</title><link>https://slott56.github.io/2012_05_03-bravo_iteration_and_generator_functions.html</link><description>&lt;p&gt;See
this: &lt;a class="reference external" href="http://nedbatchelder.com/blog/201204/python_iteration_presentation.html"&gt;http://nedbatchelder.com/blog/201204/python_iteration_presentation.html&lt;/a&gt;
Nicely done, very thorough presentation on some Python fundamentals.
The nature of iteration and generator functions is easily overlooked.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 May 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-03:/2012_05_03-bravo_iteration_and_generator_functions.html</guid><category>Technologies</category><category>#python</category></item><item><title>GE vs. Apple</title><link>https://slott56.github.io/2012_05_01-ge_vs_apple.html</link><description>&lt;p&gt;Read this
&lt;a class="reference external" href="http://www.forbes.com/sites/stevedenning/2012/04/25/david-brooks-competitiveness-vs-creativity-ge-vs-apple/"&gt;http://www.forbes.com/sites/stevedenning/2012/04/25/david-brooks-competitiveness-vs-creativity-ge-vs-apple/&lt;/a&gt;
It's a brilliant analysis of innovation and creativity.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 May 2012 22:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-05-01:/2012_05_01-ge_vs_apple.html</guid><category>Technologies</category><category>innovation</category></item><item><title>MADExpo</title><link>https://slott56.github.io/2012_04_26-madexpo.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://madexpo.us/"&gt;http://madexpo.us/&lt;/a&gt;
The &lt;strong&gt;Mid-Atlantic Developer Expo&lt;/strong&gt;.
In my backyard (more-or-less).
There's going to be this: &lt;a class="reference external" href="http://madexpo.us/Sessions/384"&gt;http://madexpo.us/Sessions/384&lt;/a&gt;
and this: &lt;a class="reference external" href="http://madexpo.us/Sessions/385"&gt;http://madexpo.us/Sessions/385&lt;/a&gt;
I'm looking forward to &lt;a class="reference external" href="http://madexpo.us/Sessions/339"&gt;http://madexpo.us/Sessions/339&lt;/a&gt;, which I'm
certainly going to attend.  Many other sessions look like fun …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Apr 2012 16:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-04-26:/2012_04_26-madexpo.html</guid><category>Technologies</category><category>meetup</category><category>757 Labs</category><category>learning</category></item><item><title>Should the CIO Know How to Code?</title><link>https://slott56.github.io/2012_04_26-should_the_cio_know_how_to_code.html</link><description>&lt;p&gt;Read this Computerworld posting: &lt;a class="reference external" href="http://www.computerworld.com/s/article/9226190/Should_the_CIO_know_how_to_code_"&gt;Should the CIO know how to
code?&lt;/a&gt;
The answer is &amp;quot;Yes.&amp;quot;
The examples of &amp;quot;well-functioning non-technical CIOs&amp;quot; are people as rare
as hen's teeth.  &amp;quot;These are leaders who know what they don't know. They
are good at asking the right questions, probing for further insight, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Apr 2012 16:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-04-26:/2012_04_26-should_the_cio_know_how_to_code.html</guid><category>Technologies</category><category>software process improvement</category><category>project management</category></item><item><title>Patents vs. Innovation</title><link>https://slott56.github.io/2012_03_27-patents_vs_innovation.html</link><description>&lt;p&gt;Read &amp;quot;&lt;a class="reference external" href="http://www.infoworld.com/d/open-source-software/why-software-patents-are-evil-188738"&gt;Why Software Patents are
Evil&lt;/a&gt;&amp;quot;
by Simon Phipps in InfoWorld.
It's an excellent summary of the problems caused by patents applied to
software.
There's a great TED Talk by Johanna Blakley on &amp;quot;&lt;a class="reference external" href="http://www.ted.com/talks/johanna_blakley_lessons_from_fashion_s_free_culture.html"&gt;Lessons Learned from
Fashion's Free
Culture&lt;/a&gt;&amp;quot;
which reinforces the essential point.
Software patents don't help anyone.  The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Mar 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-27:/2012_03_27-patents_vs_innovation.html</guid><category>Technologies</category><category>innovation</category></item><item><title>Detailed Analysis of Disruptive Technology Change</title><link>https://slott56.github.io/2012_03_22-detailed_analysis_of_disruptive_technology_change.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read this: &lt;a class="reference external" href="http://andrewchenblog.com/2012/03/14/why-i-doubted-facebook-could-build-a-billion-dollar-business-and-what-i-learned-from-being-horribly-wrong/"&gt;Why I doubted Facebook could build a billion dollar
business, and what I learned from being horribly
wrong&lt;/a&gt;.&lt;/div&gt;
&lt;div class="line"&gt;Don't be afraid to read it again.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
when it comes to the exceptional cases, all bets are off. So keep
your mind open to weird, young [ideas] that you meet …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Mar 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-22:/2012_03_22-detailed_analysis_of_disruptive_technology_change.html</guid><category>Technologies</category><category>innovation</category><category>software process improvement</category><category>disruption</category></item><item><title>Innovation is Disruptive -- and sometimes forbidden</title><link>https://slott56.github.io/2012_03_20-innovation_is_disruptive_and_sometimes_forbidden.html</link><description>&lt;p&gt;Saw this on Twitter from
&lt;a class="reference external" href="https://twitter.com/#!/hunterwalk"&gt;&amp;#64;hunterwalk&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
Startups piss people off because their existence is a statement that
incumbents aren't doing their job well enough&lt;/blockquote&gt;
&lt;p&gt;Also true of IT internal innovation.  Pitch a novel, innovative idea
to management, and most organizations will find ways to avoid it.
Suggesting a bold new …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Mar 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-20:/2012_03_20-innovation_is_disruptive_and_sometimes_forbidden.html</guid><category>Technologies</category><category>innovation</category></item><item><title>Document Database and Schema Design</title><link>https://slott56.github.io/2012_03_15-document_database_and_schema_design.html</link><description>&lt;p&gt;As part of coming to grips with CouchDB (and a particularly odious
graph-theory problem) I've been looking around for design guidelines,
hints and tips.&lt;/p&gt;
&lt;p&gt;This MongoDB &lt;a class="reference external" href="http://www.mongodb.org/display/DOCS/Schema+Design"&gt;Schema
Design&lt;/a&gt; document
is quite helpful.  The Link vs. Embed section clarifies the essential
tradeoff here.  In SQL world, link is the only tool …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Mar 2012 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-15:/2012_03_15-document_database_and_schema_design.html</guid><category>Technologies</category><category>couchdb</category><category>#python</category><category>noSQL</category></item><item><title>The Moderator Problem</title><link>https://slott56.github.io/2012_03_14-the_moderator_problem.html</link><description>&lt;p&gt;As the #3 ranked contributor on &lt;a class="reference external" href="http://programmers.stackexchange.com"&gt;http://programmers.stackexchange.com&lt;/a&gt;,
I've provided my share of advice.  554 Answers to be factual about it.
The moderators, however, have decided that I'm no longer welcome.  It
was simply shocking to be firmly (but politely) shown the door.&lt;/p&gt;
&lt;p&gt;The issue was Python.  Specifically …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Mar 2012 07:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-14:/2012_03_14-the_moderator_problem.html</guid><category>Technologies</category><category>#python</category></item><item><title>couchdb on Mac OS X</title><link>https://slott56.github.io/2012_03_06-couchdb_on_mac_os_x.html</link><description>&lt;p&gt;I've started to work with &lt;a class="reference external" href="http://couchdb.apache.org/"&gt;couchdb&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I've blogged before about the problems of SQL schema in &lt;a class="reference external" href="https://slott56.github.io/2011_02_02-escaping_the_relational_schema_trap.html"&gt;Escaping the
Relational Schema
Trap&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A SQL schema -- for many applications -- is too confining.  It creates
cost with relatively little value.  Once upon a time (when disks where
expensive and computers were slow) it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Mar 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-06:/2012_03_06-couchdb_on_mac_os_x.html</guid><category>Technologies</category><category>xcode</category><category>macosx</category><category>SQL</category><category>noSQL</category></item><item><title>Civic Hacking</title><link>https://slott56.github.io/2012_03_01-civic_hacking.html</link><description>&lt;p&gt;This weekend: the HRVA Civic Hackfest. &lt;a class="reference external" href="http://guestlistapp.com/events/86160"&gt;http://guestlistapp.com/events/86160&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.altdaily.com/blogs/news-blogs/opinion-blogs/hampton-roads-civic-hackfest.html"&gt;Alt Daily coverage&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some more &lt;a class="reference external" href="http://topsy.com/guestlistapp.com/events/86160"&gt;references&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What's it all about?  &lt;a class="reference external" href="http://codeforamerica.org/"&gt;Code For America&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Exploit the information we have to make civic improvements.  Ask any
journalist who wrestles with government data.  There's transparency
(i.e., lip service) and there's transparency …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Mar 2012 06:05:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-03-01:/2012_03_01-civic_hacking.html</guid><category>Technologies</category><category>#codeforamerica</category></item><item><title>Interesting...</title><link>https://slott56.github.io/2012_02_28-interesting.html</link><description>&lt;p&gt;Check this out: &lt;a class="reference external" href="http://hyperpolyglot.org/scripting"&gt;http://hyperpolyglot.org/scripting&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It's a side-by-side comparison of PHP, Perl, Python, Ruby.
I'm not sure why, but it seems sort of cool.&lt;/p&gt;
&lt;p&gt;Things like &amp;quot;offside rule&amp;quot; to describe indentation in Python are
confusing at first.  The &amp;quot;regions which define local scope&amp;quot; section on
Python makes precious …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-28:/2012_02_28-interesting.html</guid><category>Technologies</category><category>perl</category><category>PHP</category><category>#python</category><category>ruby</category></item><item><title>Is Django Suitable?</title><link>https://slott56.github.io/2012_02_23-is_django_suitable.html</link><description>&lt;p&gt;I got a long list of requirements from a firm that's looking to build a
related family of web sites.  They were down to a Django vs.
Ruby-on-Rails decision.&lt;/p&gt;
&lt;p&gt;As you can see, they've done their homework in thinking through their
needs.&lt;/p&gt;
&lt;p&gt;I grouped their &amp;quot;high-level requirements&amp;quot; into several
categories …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-23:/2012_02_23-is_django_suitable.html</guid><category>Technologies</category><category>Django</category><category>#python</category></item><item><title>MADExpo</title><link>https://slott56.github.io/2012_02_21-madexpo.html</link><description>&lt;p&gt;Looks like fun: &lt;a class="reference external" href="http://madexpo.us/"&gt;Mid-Atlantic Developer Expo&lt;/a&gt;.
June 27-29 2012 in Hampton, VA.
Got a nice reminder through the &lt;a class="reference external" href="http://757labs.org/"&gt;757
Labs&lt;/a&gt; mailing list.
Community is a good thing.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-21:/2012_02_21-madexpo.html</guid><category>Technologies</category><category>meetup</category><category>757 Labs</category><category>learning</category></item><item><title>The Estimation Charade</title><link>https://slott56.github.io/2012_02_16-the_estimation_charade.html</link><description>&lt;p&gt;Tweeted by &lt;a class="reference external" href="https://twitter.com/brennandunn"&gt;&amp;#64;brennandunn&lt;/a&gt;:
&lt;a class="reference external" href="http://diegobasch.com/why-software-development-estimations-are-regu"&gt;Why Software Development Estimations Are Regularly
Off&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;quot;In reality, most projects worth doing are not repetitions of
previous things.&amp;quot;&lt;/p&gt;
&lt;p&gt;Thank you for that.&lt;/p&gt;
&lt;p&gt;If it has been done before -- same problem -- same technology -- then
we should be able to clone that solution and avoid creating a
software …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 16 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-16:/2012_02_16-the_estimation_charade.html</guid><category>Technologies</category><category>project management</category></item><item><title>Multiprocessing Goodness -- Part 2 -- Class Defintions</title><link>https://slott56.github.io/2012_02_14-multiprocessing_goodness_part_2_class_defintions.html</link><description>&lt;p&gt;The
&lt;a class="reference external" href="http://docs.python.org/library/multiprocessing.html"&gt;multiprocessing&lt;/a&gt;
module includes a generic
&lt;a class="reference external" href="http://docs.python.org/library/multiprocessing.html#multiprocessing.Process"&gt;Process&lt;/a&gt;
class, which can be used to wrap a simple function.&lt;/p&gt;
&lt;p&gt;The function must be designed to work with Queues or Pipelines or
other synchronization techniques.&lt;/p&gt;
&lt;p&gt;There's an advantage, however, to defining a class which gracefully
handles generator functions.  If we have Generator-Aware
multi-processing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Feb 2012 08:32:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-14:/2012_02_14-multiprocessing_goodness_part_2_class_defintions.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>multiprocessing</category></item><item><title>TDRE - Test Driven Reverse Engineering Case Study</title><link>https://slott56.github.io/2012_02_14-tdre_test_driven_reverse_engineering_case_study.html</link><description>&lt;div class="section" id="background"&gt;
&lt;h2&gt;Background&lt;/h2&gt;
&lt;p&gt;Read up on compass variation or declination.  For example, this
&lt;a class="reference external" href="http://www.ngdc.noaa.gov/geomag/declination.shtml"&gt;NOAA&lt;/a&gt; site
provides some useful information.&lt;/p&gt;
&lt;p&gt;Mariners use the magnetic variation to compute the difference between
True north (i.e., aligned with the grid on the chart) and Magnetic
north (i.e., aligned with the compass.)&lt;/p&gt;
&lt;p&gt;The essential use …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-14:/2012_02_14-tdre_test_driven_reverse_engineering_case_study.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>test-driven reverse engineering</category><category>#python</category></item><item><title>PDF Reading</title><link>https://slott56.github.io/2012_02_09-pdf_reading.html</link><description>&lt;p&gt;PDF files aren't pleasant.&lt;/p&gt;
&lt;p&gt;The good news is that they're documented (&lt;a class="reference external" href="http://www.adobe.com/devnet/pdf/pdf_reference.html"&gt;http://www.adobe.com/devnet/pdf/pdf_reference.html&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;They bad news is that they're rather complex.&lt;/p&gt;
&lt;p&gt;I found four Python packages for reading PDF files.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pybrary.net/pyPdf/"&gt;http://pybrary.net/pyPdf/&lt;/a&gt; - weak&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.swftools.org/gfx_tutorial.html"&gt;http://www.swftools.org/gfx_tutorial.html&lt;/a&gt; - depends on binary …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-09:/2012_02_09-pdf_reading.html</guid><category>Technologies</category><category>pdf</category><category>#python</category></item><item><title>Multiprocessing Goodness -- Part 1 -- Use Case</title><link>https://slott56.github.io/2012_02_02-multiprocessing_goodness_part_1_use_case.html</link><description>&lt;p&gt;The advantage of multiprocessing is to have multiple processes working
on a problem.  If we break a big problem into small, concurrent steps,
we can often get results in less elapsed time by making more effective
use of the CPU.  Specifically, we want to make use of non-user time
where …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 02 Feb 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-02-02:/2012_02_02-multiprocessing_goodness_part_1_use_case.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>multiprocessing</category></item><item><title>Enriched Details of Apache Common Log Format</title><link>https://slott56.github.io/2012_01_31-enriched_details_of_apache_common_log_format.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="https://slott56.github.io/2012_01_26-apache_log_parsing.html"&gt;Apache Log Parsing&lt;/a&gt;
for the background.&lt;/p&gt;
&lt;p&gt;Here's a generator function which expands a simple Access to be a more
detailed named tuple.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
Access_Details= namedtuple( 'Access_Details',
    ['access', 'time', 'method', 'url', 'protocol'] )

def details_iter( iterable ):
    def parse_time_linux( ts ):
        return datetime.datetime.strptime( ts, &amp;quot;%d/%b/%Y:%H:%M:%S %z&amp;quot; )

    def …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 31 Jan 2012 22:25:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-31:/2012_01_31-enriched_details_of_apache_common_log_format.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category><category>Apache</category><category>analysis</category></item><item><title>Apache Log Parsing</title><link>https://slott56.github.io/2012_01_26-apache_log_parsing.html</link><description>&lt;p&gt;How much do I love Python?  Consider this little snippet that parses
Apache logs.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
import re
from collections import defaultdict, named tuple

format_pat= re.compile(
   r&amp;quot;(?P&amp;lt;host&amp;gt;[\d\.]+)\s&amp;quot;
   r&amp;quot;(?P&amp;lt;identity&amp;gt;\S*)\s&amp;quot;
   r&amp;quot;(?P&amp;lt;user&amp;gt;\S*)\s&amp;quot;
   r&amp;quot;\[(?P&amp;lt;time&amp;gt;.*?)\]\s&amp;quot;
   r'&amp;quot;(?P&amp;lt;request&amp;gt;.*?)&amp;quot;\s'
   r&amp;quot;(?P …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-26:/2012_01_26-apache_log_parsing.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category><category>Apache</category><category>analysis</category></item><item><title>Building Skills in Programming</title><link>https://slott56.github.io/2012_01_24-building_skills_in_programming.html</link><description>&lt;p&gt;I've revised (and streamlined) my &lt;em&gt;Building Skills in Programming&lt;/em&gt; book.
The 2.6.2. edition will simply replace the 2.6.1. edition, leading to
the possibility of broken bookmarks because of the changes.&lt;/p&gt;
&lt;p&gt;Currently, the non-programmer book accounts for under 10% hits on the
&lt;a class="reference external" href="http://www.itmaybeaback.com/book"&gt;http://www.itmaybeaback.com/book …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-24:/2012_01_24-building_skills_in_programming.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>Python 2.7 CSV files with Unicode Characters</title><link>https://slott56.github.io/2012_01_19-python_27_csv_files_with_unicode_characters.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;The csv module in Python 2.7 is more-or-less hard-wired to work with
ASCII and only ASCII.&lt;/div&gt;
&lt;div class="line"&gt;Sadly, we're often confronted with CSV files that include Unicode
characters.  There are numerous Stack Overflow questions on this
topic.  &lt;a class="reference external" href="http://stackoverflow.com/search?q=python+csv+unicode"&gt;http://stackoverflow.com/search?q=python+csv+unicode&lt;/a&gt;&lt;/div&gt;
&lt;div class="line"&gt;What to do?  Since csv …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 19 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-19:/2012_01_19-python_27_csv_files_with_unicode_characters.html</guid><category>Technologies</category><category>csv</category><category>#python</category><category>unicode</category></item><item><title>Multiprocessing and Shared Objects [Revised]</title><link>https://slott56.github.io/2012_01_18-multiprocessing_and_shared_objects_revised.html</link><description>&lt;p&gt;Read this: &lt;a class="reference external" href="http://eli.thegreenplace.net/2012/01/04/shared-counter-with-pythons-multiprocessing/"&gt;Shared Counter with Python
Multiprocessing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Brilliant.  Thank you for this.&lt;/p&gt;
&lt;p&gt;Too many of the questions on StackOverflow that include multi-threading
are better approached as multi-processing.  In Linux, there are times
when all threads of a single process are stopped while the process (as a
whole) waits for system …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 Jan 2012 05:48:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-18:/2012_01_18-multiprocessing_and_shared_objects_revised.html</guid><category>Technologies</category><category>#python</category><category>multiprocessing</category></item><item><title>Python 3.2 CSV Module -- Very, very nice</title><link>https://slott56.github.io/2012_01_17-python_32_csv_module_very_very_nice.html</link><description>&lt;p&gt;A common (and small) task is reformatting a file that's in some
variant of CSV.  It could be a SQL database extract, or an export from
an application that works well with CSV files.&lt;/p&gt;
&lt;p&gt;In Python 2.x, a CSV file with Unicode was a bit of a problem.  The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-17:/2012_01_17-python_32_csv_module_very_very_nice.html</guid><category>Technologies</category><category>csv</category><category>#python</category></item><item><title>Innovation is the punctuation at the end of a string of failures</title><link>https://slott56.github.io/2012_01_10-innovation_is_the_punctuation_at_the_end_of_a_string_of_failures.html</link><description>&lt;p&gt;Read this in Forbes: &amp;quot;&lt;a class="reference external" href="http://www.forbes.com/sites/work-in-progress/2011/05/05/innovations-return-on-failure-rof/"&gt;Innovation's Return on Failure:
ROF&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Also, this: &amp;quot;&lt;a class="reference external" href="http://blogs.hbr.org/berkun/2008/10/the-necessity-of-failure-in-in.html"&gt;The Necessity of Failure in Innovation (+ more on
CDOs)&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;This, too: &amp;quot;&lt;a class="reference external" href="http://www.scottberkun.com/blog/2006/why-innovation-efforts-fail/"&gt;Why innovation efforts
fail&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;While we're at it: &amp;quot;&lt;a class="reference external" href="http://commscopeblogs.com/2011/12/21/accepting-failure-is-key-to-good-overall-returns-on-high-risk-development-programs/"&gt;Accepting Failure is Key to Good Overall Returns on
High-Risk Development
Programs&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;I can't say enough about the value of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-10:/2012_01_10-innovation_is_the_punctuation_at_the_end_of_a_string_of_failures.html</guid><category>Technologies</category><category>software process improvement</category><category>project management</category></item><item><title>Self-Direction, Mastery, Purpose</title><link>https://slott56.github.io/2012_01_05-self_direction_mastery_purpose.html</link><description>&lt;p&gt;Watch
this: &lt;a class="reference external" href="http://www.youtube.com/watch?v=u6XAPnuFjJc"&gt;http://www.youtube.com/watch?v=u6XAPnuFjJc&lt;/a&gt;
Brilliant summary of what &lt;strong&gt;really&lt;/strong&gt; motivates people.
The most important advice: provide a sense of purpose and get out of
people's way so that they can do the right thing.
Micromanagement, incentives, annual performance reviews and the like
aren't as useful …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 05 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-05:/2012_01_05-self_direction_mastery_purpose.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Epic indictment of Waterfall Methods</title><link>https://slott56.github.io/2012_01_03-epic_indictment_of_waterfall_methods.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Saw this recently.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
Why do most gov websites look like they were created by someone's 10
year old nephew yet cost millions to make?
— Steve Dekorte (&amp;#64;stevedekorte) &lt;a class="reference external" href="https://twitter.com/stevedekorte/status/152208488716701696"&gt;December 29,
2011&lt;/a&gt;&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;I think this aptly summarizes the results of a waterfall methodology.&lt;/div&gt;
&lt;/div&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;You wrote a lot of requirements, not fully understanding …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jan 2012 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2012-01-03:/2012_01_03-epic_indictment_of_waterfall_methods.html</guid><category>Technologies</category><category>software process improvement</category><category>waterfall</category><category>agile</category></item><item><title>LANGSEC: Language-theoretic Security</title><link>https://slott56.github.io/2011_12_29-langsec_language_theoretic_security.html</link><description>&lt;p&gt;Wow.  Just wow.  See &amp;quot;&lt;a class="reference external" href="http://www.cs.dartmouth.edu/~sergey/langsec/occupy/"&gt;LANGSEC explained in a few
slogans&lt;/a&gt;&amp;quot;.
Short, easy-to-grasp explanation of why complex protocols create new
problems.
I'm happy with REST and the stack of stuff under it (HTTP, TCP/IP, etc.)
Once upon a time (2001), I invented by own version of a RESTful protocol
outside …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-29:/2011_12_29-langsec_language_theoretic_security.html</guid><category>Technologies</category><category>REST</category><category>HTTP</category><category>security</category></item><item><title>Technology Refresh</title><link>https://slott56.github.io/2011_12_27-technology_refresh.html</link><description>&lt;p&gt;I've been refurbishing an older project -- written in 2008.  Probably
with Django 1.0.1.  Certainly with Python 2.5.&lt;/p&gt;
&lt;p&gt;The &lt;a class="reference external" href="https://docs.djangoproject.com/en/1.3/releases/#release"&gt;Django 1.3
release&lt;/a&gt;
has been around since March.  The change underscored the importance of
technology refresh.&lt;/p&gt;
&lt;p&gt;The best part was to delete code.  There were two significant reasons …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-27:/2011_12_27-technology_refresh.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Color Schemes</title><link>https://slott56.github.io/2011_12_20-color_schemes.html</link><description>&lt;p&gt;I worked with this a few years ago to tweak up some web pages.
&lt;a class="reference external" href="http://colorschemedesigner.com/"&gt;http://colorschemedesigner.com/&lt;/a&gt;
I just rediscovered it.  It's a cool toy.  You get some colors that all
&amp;quot;go&amp;quot; together.  If you're careful with your .CSS definitions, you give
people this page and let them fuss around …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-20:/2011_12_20-color_schemes.html</guid><category>Technologies</category><category>HTML</category><category>css</category></item><item><title>Good Summary of Bad Security Assumptions</title><link>https://slott56.github.io/2011_12_15-good_summary_of_bad_security_assumptions.html</link><description>&lt;p&gt;This isn't the &lt;a class="reference external" href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;OWASP Top
10&lt;/a&gt;
list, but it's still very handy.
&lt;a class="reference external" href="http://www.eweek.com/c/a/Security/Top-10-Dumb-Computer-Security-Notions-and-Myths-740587/"&gt;Top 10 Dumb Computer Security
Notions&lt;/a&gt;.
I'm particularly fond of the &amp;quot;security can't be perfect; since it can't
be perfect, why bother?&amp;quot; approach.
One other notion that amuses me is the silliness of changing a password
every 90 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-15:/2011_12_15-good_summary_of_bad_security_assumptions.html</guid><category>Technologies</category><category>security</category></item><item><title>The need for ping</title><link>https://slott56.github.io/2011_12_13-the_need_for_ping.html</link><description>&lt;p&gt;Years ago, when designing an interface to a vendor's web services, I
did the following.  This isn't a genius move, but it's worth
emphasizing how important it is.  And what's most important isn't
technical.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I built a simple &lt;a class="reference external" href="http://c2.com/cgi/wiki?SpikeSolution"&gt;spike solution&lt;/a&gt; to access their service.&lt;/li&gt;
&lt;li&gt;I morphed this into a &amp;quot;sanity …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-13:/2011_12_13-the_need_for_ping.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>architecture</category></item><item><title>Paranoid Schizophrenic Programming (Revised)</title><link>https://slott56.github.io/2011_12_12-paranoid_schizophrenic_programming_revised.html</link><description>&lt;p&gt;Some folks love the twin ideas that (1) &amp;quot;someone&amp;quot; might break the API
rules and (2) they must write lots of bonus code to &amp;quot;prevent&amp;quot; problems.&lt;/p&gt;
&lt;p&gt;Sigh.&lt;/p&gt;
&lt;p&gt;There are three distinct things here.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;API definition - something we do all the time.&lt;/li&gt;
&lt;li&gt;&amp;quot;Defensive Programming&amp;quot; - something that may or may not actually …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Dec 2011 14:31:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-12:/2011_12_12-paranoid_schizophrenic_programming_revised.html</guid><category>Architecture &amp; Design</category><category>#python</category><category>architecture</category><category>object-oriented design</category><category>defensive programming</category><category>assert statement</category></item><item><title>Statically Typed Language Nonsense</title><link>https://slott56.github.io/2011_12_09-statically_typed_language_nonsense.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read this: &amp;quot;&lt;a class="reference external" href="http://www.sdtimes.com/l/36103"&gt;Here Comes Functional
Programming&lt;/a&gt;&amp;quot; by Larry O'Brien in
SD Times.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
people who should know better continue to assert that statically
typed languages are &amp;quot;safer, because the compiler can catch errors
that otherwise wouldn't show up until runtime.&amp;quot; While it's true a
statically typed language can detect that you've …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-09:/2011_12_09-statically_typed_language_nonsense.html</guid><category>Technologies</category><category>Programming Languages</category><category>#python</category><category>functional programming</category></item><item><title>I'm Confused by this Marketing Ploy</title><link>https://slott56.github.io/2011_12_06-im_confused_by_this_marketing_ploy.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Got this a few weeks back.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
My job is to persuade bloggers to link to our site.&lt;/blockquote&gt;
&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I really love my job! We have a friendly team and good management,
but unfortunately I have no idea how to convince a blogger to link to
us, I'm afraid I might lose …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-06:/2011_12_06-im_confused_by_this_marketing_ploy.html</guid><category>Technologies</category><category>blogging</category></item><item><title>Agile "Religion" Issues</title><link>https://slott56.github.io/2011_12_01-agile_religion_issues.html</link><description>&lt;p&gt;See this &lt;a class="reference external" href="http://www.pmhut.com/limitations-of-agile-software-development"&gt;Limitations of Agile Software
Development&lt;/a&gt; and
this &lt;a class="reference external" href="https://slott56.github.io/2011_10_20-the_agile_religion_what.html"&gt;The Agile &amp;quot;Religion&amp;quot; --
What?&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What's important is that the limitations of Agile are not
limitations.  They're (mostly) intentional roadblocks to Agile.&lt;/p&gt;
&lt;p&gt;Looking for &amp;quot;limitations&amp;quot; in the Agile approach misses the point of
Agile in several important ways.&lt;/p&gt;
&lt;p&gt;The most important problem …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Dec 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-12-01:/2011_12_01-agile_religion_issues.html</guid><category>Technologies</category><category>software process improvement</category><category>agile</category><category>project management</category></item><item><title>The Value of Microsoft's Tools</title><link>https://slott56.github.io/2011_11_29-the_value_of_microsofts_tools.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;See Andrew Binstock's &amp;quot;&lt;a class="reference external" href="http://drdobbs.com/windows/231700224#"&gt;Windows 8: Microsoft's Development
Re-Do&lt;/a&gt;&amp;quot;.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
The costs of these migrations has been enormous and continues to
accumulate...&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I can only rub my hands with glee and engage in shameless &amp;quot;I Told You
So&amp;quot; self-congratulations.&lt;/div&gt;
&lt;div class="line"&gt;Only you can prevent being held hostage by Microsoft.&lt;/div&gt;
&lt;div class="line"&gt;More than once, I've …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Nov 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-11-29:/2011_11_29-the_value_of_microsofts_tools.html</guid><category>Technologies</category><category>tools</category></item><item><title>Justification of Project Staffing</title><link>https://slott56.github.io/2011_11_28-justification_of_project_staffing.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;I really dislike being asked to plan a project.  It's hard to predict
the future accurately.&lt;/div&gt;
&lt;div class="line"&gt;In spite of the future being -- well -- the future, and utterly
unknowable, we still have to have the following kinds of discussions.&lt;/div&gt;
&lt;div class="line"&gt;Me: &amp;quot;It's probably going to take a team of six.&amp;quot;&lt;/div&gt;
&lt;div class="line"&gt;Customer: &amp;quot;We …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Nov 2011 07:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-11-28:/2011_11_28-justification_of_project_staffing.html</guid><category>Technologies</category><category>software process improvement</category><category>project management</category></item><item><title>How to Learn</title><link>https://slott56.github.io/2011_11_22-how_to_learn.html</link><description>&lt;p&gt;A recent question.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i came up with two options.&lt;/p&gt;
&lt;p&gt;1.  building skills 1 (+ other references)... then algorithms &amp;amp; data
structures.... then your books 2 &amp;amp; 3&lt;/p&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;2.  your three books 1,2 &amp;amp; 3... then algo &amp;amp; ds
kindly help me decide so i can start soon.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have two pieces of advice …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Nov 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-11-22:/2011_11_22-how_to_learn.html</guid><category>Technologies</category><category>building skills books</category><category>learning</category></item><item><title>More On Inheritance vs. Delegation</title><link>https://slott56.github.io/2011_11_17-more_on_inheritance_vs_delegation.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Emphasis on the &amp;quot;More On&amp;quot; as in &amp;quot;Moron&amp;quot;.  This is a standard design
error story.  The issue is that inheritance happens along an &amp;quot;axis&amp;quot; or
&amp;quot;dimension&amp;quot; where the subclasses are at different points along that
axis.  Multi-dimensional inheritance is an EPIC FAIL.&lt;/div&gt;
&lt;div class="line"&gt;&lt;strong&gt;Context&lt;/strong&gt;&lt;/div&gt;
&lt;div class="line"&gt;Data warehouse processing can involve a fair …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Nov 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-11-17:/2011_11_17-more_on_inheritance_vs_delegation.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category><category>delegation</category><category>inheritance</category></item><item><title>VMware, VIX and PyVIX2</title><link>https://slott56.github.io/2011_10_25-vmware_vix_and_pyvix2.html</link><description>&lt;p&gt;The topic of VMware came up at my local &lt;a class="reference external" href="http://www.meetup.com/757-Python-Users-Group/"&gt;757 Python Users
Group&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A common administrative need is to control VM farms.  While there are
a number of pointy-clicky GUI tools, VMware offers the VIX library to
permit writing scripts to control VM's.&lt;/p&gt;
&lt;p&gt;Here's some information we looked at recently …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Oct 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-25:/2011_10_25-vmware_vix_and_pyvix2.html</guid><category>Technologies</category><category>ctypes</category><category>#python</category><category>vmware</category></item><item><title>The Agile "Religion" -- What?</title><link>https://slott56.github.io/2011_10_20-the_agile_religion_what.html</link><description>&lt;p&gt;Received&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;it seems that software development has caught the agile
religion. Personally, I have an issue w/ being unimodal.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;What?&lt;/p&gt;
&lt;p&gt;First.  &amp;quot;agile religion&amp;quot;.  As in the deprecating statement: &lt;em&gt;Agile is
nothing more than a religion&lt;/em&gt;?  As in &lt;em&gt;Agile is nothing more than a
vague religious practice with no tangible value …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Oct 2011 15:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-20:/2011_10_20-the_agile_religion_what.html</guid><category>Technologies</category><category>software process improvement</category><category>waterfall</category><category>agile</category></item><item><title>More Command-Line Goodness</title><link>https://slott56.github.io/2011_10_13-more_command_line_goodness.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2011_10_06-command_line_applications.html"&gt;Command-Line Applications&lt;/a&gt;,
we looked at a Python main-import switch which boiled down to this.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
for file in args.file:
    with open( file, &amp;quot;r&amp;quot; ) as source:
        process_file( source, args )
&lt;/pre&gt;
&lt;p&gt;The point was that each distinct file on the command-line was
processed in a more-or-less uniform way by a single function …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Oct 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-13:/2011_10_13-more_command_line_goodness.html</guid><category>Technologies</category><category>stingray reader</category><category>#python</category><category>CLI</category></item><item><title>A smoothly operating, well-oiled engine for failure</title><link>https://slott56.github.io/2011_10_11-a_smoothly_operating_well_oiled_engine_for_failure.html</link><description>&lt;p&gt;It occurs to me that much of &amp;quot;Big IT&amp;quot; creates a well-oiled organization
that makes broken software seem acceptable. The breakage is wrapped in
layers of finely-tuned process.
Consider a typical Enterprise Application.  There's a help desk, ticket
tracking, a user support organization that does &amp;quot;ad-hoc&amp;quot; processing, and
a development …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Oct 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-11:/2011_10_11-a_smoothly_operating_well_oiled_engine_for_failure.html</guid><category>Technologies</category><category>complexity</category><category>software process improvement</category></item><item><title>Command Line Applications</title><link>https://slott56.github.io/2011_10_06-command_line_applications.html</link><description>&lt;p&gt;I'm old -- I admit it -- and I feel that command-line applications are
still very, very important. Linux, for example, is packed full of almost
innumerable command-line applications. In some cases, the Linux GUI
tools are specifically just wrappers around the underlying command-line
applications.&lt;/p&gt;
&lt;p&gt;For many types of high-volume data processing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Oct 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-06:/2011_10_06-command_line_applications.html</guid><category>Technologies</category><category>#python</category><category>java</category><category>CLI</category></item><item><title>"Hard Coding" Business Rules</title><link>https://slott56.github.io/2011_10_05-hard_coding_business_rules.html</link><description>&lt;p&gt;See this: &amp;quot;&lt;a class="reference external" href="http://www.sdtimes.com/STOP_HARD_CODING_BUSINESS_RULES/By_David_Rubinstein/About_BUSINESSDEVELOPERS_and_BUSINESSRULES/35919"&gt;Stop hard-coding business
rules&lt;/a&gt;&amp;quot;
in SD Times.
Here's what's exasperating: &amp;quot;Memo to developers: Stop hard-coding
business rules into applications. Use business rules engines instead.&amp;quot;
Business Rules Engines?  You mean Python?
It appears that they don't mean Python.
&amp;quot;Developers can use [a BPM suite or rules engine] and be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 05 Oct 2011 06:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-10-05:/2011_10_05-hard_coding_business_rules.html</guid><category>Technologies</category><category>#python</category><category>business rules</category></item><item><title>The Politics of Estimating</title><link>https://slott56.github.io/2011_09_29-the_politics_of_estimating.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Computerworld, September 12, page 10.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;strong&gt;Microburst&lt;/strong&gt;IT Disasters
According to a study of 1,471 big IT projects, 15% turn out to be
money pits, with cost overruns averaging 200%.&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;div class="line"&gt;How is this a politically-charged statement?  We hear this kind of
thing all the time.&lt;/div&gt;
&lt;div class="line"&gt;As developers (or project leaders …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Sep 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-09-29:/2011_09_29-the_politics_of_estimating.html</guid><category>Technologies</category><category>project management</category><category>estimating</category></item><item><title>Threads and I/O</title><link>https://slott56.github.io/2011_09_27-threads_and_io.html</link><description>&lt;p&gt;&amp;quot;Threads don't promote concurrent I/O.&amp;quot;&lt;/p&gt;
&lt;p&gt;Kernel threads may.  Most of us write user threads.  Here's a great
summary under &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Thread_(computer_science)"&gt;Thread (Computer Science)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, the use of blocking system calls in user threads (as opposed
to kernel threads) or fibers can be problematic. If a user thread or
a fiber …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Sep 2011 18:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-09-27:/2011_09_27-threads_and_io.html</guid><category>Technologies</category><category>performance</category><category>software design</category><category>architecture</category></item><item><title>"Strict" Unit Testing -- Everything In Isolation Is Too Much Work</title><link>https://slott56.github.io/2011_09_22-strict_unit_testing_everything_in_isolation_is_too_much_work.html</link><description>&lt;p&gt;Folks like to claim that unit testing absolutely requires each class be
tested in isolation using mocks for all dependencies.  This is a noble
aspiration, but doesn't work out perfectly well in Python.&lt;/p&gt;
&lt;p&gt;First, &amp;quot;unit&amp;quot; is intentionally vague.  It could be a class, a
function, a module or a package …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Sep 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-09-22:/2011_09_22-strict_unit_testing_everything_in_isolation_is_too_much_work.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category></item><item><title>BOSSIE Awards</title><link>https://slott56.github.io/2011_09_13-bossie_awards.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://web2py.com/"&gt;web2py&lt;/a&gt; wins an
&lt;a class="reference external" href="http://www.infoworld.com/d/open-source-software/bossie-awards-2011-the-best-open-source-application-development-software-171759-0&amp;amp;current=10&amp;amp;last=11#slideshowTop"&gt;award&lt;/a&gt;
-- cool.
I really like &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;Django&lt;/a&gt;.  But...&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Sep 2011 08:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-09-13:/2011_09_13-bossie_awards.html</guid><category>Technologies</category><category>management</category><category>python</category></item><item><title>Data Warehousing and SQL -- Tread Carefully</title><link>https://slott56.github.io/2011_09_01-data_warehousing_and_sql_tread_carefully.html</link><description>&lt;p&gt;&amp;quot;Are you implying that a scalable Data Warehouse solution could be
implemented using Python and serialised files?&amp;quot;&lt;/p&gt;
&lt;p&gt;Not &amp;quot;implying&amp;quot;.  I'm trying to state it as clearly as I can.
A scalable data warehouse solution involves a lot of flat file
processing.&lt;/p&gt;
&lt;p&gt;ETL, for example, is mostly a flat-file pipeline.  It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Sep 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-09-01:/2011_09_01-data_warehousing_and_sql_tread_carefully.html</guid><category>Technologies</category><category>data warehouse</category><category>#python</category><category>performance</category><category>star-schema</category></item><item><title>Brain-Damaged Data</title><link>https://slott56.github.io/2011_08_04-brain_damaged_data.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;We process a fair amount of externally-prepared datasets.  40,000 rows
of econometric data that we purchased from a third-party.  Mostly, the
data is in a usable format: .CSV or .XSLX.&lt;/div&gt;
&lt;div class="line"&gt;Once in a while, we get CSV with | (pipe).  A few times, we got
fixed-format COBOL-style records.&lt;/div&gt;
&lt;div class="line"&gt;Recently, we …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Aug 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-08-04:/2011_08_04-brain_damaged_data.html</guid><category>Technologies</category><category>csv</category><category>#python</category></item><item><title>One of Those Things</title><link>https://slott56.github.io/2011_07_26-one_of_those_things.html</link><description>&lt;p&gt;Check out this question on Stack Overflow: &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/6789230/python-replace-a-string-by-a-float-in-txt-file/6789735#6789735"&gt;Python: replace a string by
a float in txt
file&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;The question is confusing, but it appears to be a longish and confused
description of simple formatting or template substitution.  It's hard to
be sure, but it sounds like one of Those Things …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 26 Jul 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-07-26:/2011_07_26-one_of_those_things.html</guid><category>Technologies</category><category>#python</category><category>text-template</category><category>string</category></item><item><title>Spam Email Footers</title><link>https://slott56.github.io/2011_07_21-spam_email_footers.html</link><description>&lt;p&gt;I don't want the spamilicious email.  I'm trying to actually
unsubscribe.
The footer says &amp;quot;If you are not the intended recipient, you are hereby
notified that any dissemination, distribution or copying of any
information contained in or attached to this communication is strictly
prohibited. If you have received this message …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 Jul 2011 11:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-07-21:/2011_07_21-spam_email_footers.html</guid><category>Technologies</category><category>use case</category><category>spam</category></item><item><title>757 Python User's Group Meetup</title><link>https://slott56.github.io/2011_07_18-757_python_users_group_meetup.html</link><description>&lt;p&gt;Wednesday night.  At 757 Labs.  Be there.
Here's the details on
&lt;a class="reference external" href="http://www.meetup.com/757-Python-Users-Group/events/22825011/"&gt;meetup.com&lt;/a&gt;
Lacking any other agenda, I'll do some more presentation on the supreme
coolness of Django.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 18 Jul 2011 06:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-07-18:/2011_07_18-757_python_users_group_meetup.html</guid><category>Technologies</category><category>meetup</category></item><item><title>I almost wet myself</title><link>https://slott56.github.io/2011_07_12-i_almost_wet_myself.html</link><description>&lt;p&gt;Someone sent me this: &amp;quot;&lt;a class="reference external" href="http://mygisblog.wordpress.com/2010/05/03/building-skills-in-python-steven-f-lott/"&gt;“Building Skills in Python” – Steven F.
Lott&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;I had a vague idea that this book would get some traction.  This
response was surprising.  I guess I should get to work on the upgrades.&lt;/p&gt;
&lt;p&gt;And focus on the &amp;quot;no-nonsense&amp;quot; comment.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="will-your-target-audience-for-the-book-upgrade-be"&gt;
&lt;h2&gt;Will your target audience for the book …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jul 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-07-12:/2011_07_12-i_almost_wet_myself.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>Security Vulnerabilities</title><link>https://slott56.github.io/2011_07_07-security_vulnerabilities.html</link><description>&lt;p&gt;Just saw this for the first time today:  &lt;a class="reference external" href="http://cwe.mitre.org/top25/"&gt;http://cwe.mitre.org/top25/&lt;/a&gt;
I'd always relied on
this: &lt;a class="reference external" href="https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project&lt;/a&gt;
Both are really good lists of security vulnerabilities.
I once had to listen to a DBA tell me that &amp;quot;we don't know what we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 07 Jul 2011 17:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-07-07:/2011_07_07-security_vulnerabilities.html</guid><category>Technologies</category><category>security</category></item><item><title>Implementing the Unsubscribe User Story</title><link>https://slott56.github.io/2011_06_30-implementing_the_unsubscribe_user_story.html</link><description>&lt;p&gt;I've been unsubscribing from some junk email recently.
The user story is simple: As a not-very-interested person, I want to get
off your dumb-ass mailing list so that I don't have to flag your crap as
spam any more.&lt;/p&gt;
&lt;p&gt;The implementations vary from good to evil.  Here's what I've found …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 Jun 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-30:/2011_06_30-implementing_the_unsubscribe_user_story.html</guid><category>Technologies</category><category>use case</category></item><item><title>Simplicity vs. Depth</title><link>https://slott56.github.io/2011_06_28-simplicity_vs_depth.html</link><description>&lt;p&gt;During  chapter technical reviews, the question of technical depth has
come up time and again.  Essentially, in every single chapter.
In the older &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python/html/index.html"&gt;Building Skills in Python&lt;/a&gt;
book, there are a number of topics that feel &amp;quot;digressive&amp;quot; to the
reviewer and editor.  Too much depth.&lt;/p&gt;
&lt;p&gt;However, there are a number …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Jun 2011 08:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-28:/2011_06_28-simplicity_vs_depth.html</guid><category>Technologies</category><category>#python</category></item><item><title>Hackerspace</title><link>https://slott56.github.io/2011_06_21-hackerspace.html</link><description>&lt;p&gt;Just started learning about
&amp;quot;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Hackerspace"&gt;Hackerspace&lt;/a&gt;&amp;quot;.
Without really knowing what I was doing, I fell into the &lt;a class="reference external" href="http://757labs.org/"&gt;757
Labs&lt;/a&gt; Hackerspace.
The &lt;a class="reference external" href="http://www.meetup.com/757-Python-Users-Group/"&gt;757 Python Users'
Group&lt;/a&gt;, specifically.
What a great idea.  Bright people.  Interested in the same area of
technology.
It's like hanging around with sailors at a marina.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Jun 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-21:/2011_06_21-hackerspace.html</guid><category>Technologies</category><category>hackerspace</category><category>#python</category></item><item><title>An Object-Lesson in How to Stifle Innovation</title><link>https://slott56.github.io/2011_06_09-an_object_lesson_in_how_to_stifle_innovation.html</link><description>&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Read this: &lt;a class="reference external" href="http://gizmodo.com/5691604/how-ma-bell-shelved-the-future-for-60-years"&gt;How Ma Bell Shelved the Future for 60
Years&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
AT&amp;amp;T firmly believed that the answering machine, and its magnetic
tapes, would lead the public to abandon the telephone.&lt;/blockquote&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;How many good ideas are set aside by managers who simply don't have a
clue what users actually want …&lt;/div&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 Jun 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-09:/2011_06_09-an_object_lesson_in_how_to_stifle_innovation.html</guid><category>Technologies</category><category>innovation</category></item><item><title>Multithreading -- Fear, Uncertainty and Doubt</title><link>https://slott56.github.io/2011_06_07-multithreading_fear_uncertainty_and_doubt.html</link><description>&lt;p&gt;Read this: &amp;quot;&lt;a class="reference external" href="http://programmers.stackexchange.com/questions/81003/how-to-explain-why-multi-threading-is-difficult/81008#81008"&gt;How to explain why multi-threading is
difficult&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;We need to talk. This is not that difficult.&lt;/p&gt;
&lt;p&gt;Multi-threading is only difficult if you do it badly. There are an
almost infinite number of ways to do it badly. Many magazines and
bloggers have decided that the multithreading hurdle is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Jun 2011 14:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-07:/2011_06_07-multithreading_fear_uncertainty_and_doubt.html</guid><category>Technologies</category><category>threads</category><category>software design</category><category>code-kata</category><category>queue</category></item><item><title>Changed the Page Template</title><link>https://slott56.github.io/2011_06_03-changed_the_page_template.html</link><description>&lt;p&gt;The &amp;quot;default&amp;quot; template I chose was too narrow for presenting code
samples.  Changed it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 03 Jun 2011 08:52:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-06-03:/2011_06_03-changed_the_page_template.html</guid><category>Technologies</category><category>blogging</category></item><item><title>Code Kata : "Simple" Database Design</title><link>https://slott56.github.io/2011_05_26-code_kata_simple_database_design.html</link><description>&lt;p&gt;Here's a pretty simple set of use cases for a code-kata database
application.&lt;/p&gt;
&lt;p&gt;This is largely transactional, not analytical.&lt;/p&gt;
&lt;p&gt;It's a simple inventory of ingredients, recipes and locations.&lt;/p&gt;
&lt;div class="section" id="context"&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;42' sailboat.&lt;/li&gt;
&lt;li&gt;Lots of places to keep stuff. Lots.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Stuff gets lots or misplaced. It's helpful to marry recipes with
ingredients …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-26:/2011_05_26-code_kata_simple_database_design.html</guid><category>Technologies</category><category>design</category><category>code-kata</category></item><item><title>Meetup Tonight</title><link>https://slott56.github.io/2011_05_25-meetup_tonight.html</link><description>&lt;p&gt;Tonight (May 25th). Red Dog. Colley Ave. Ghent. I'll be wearing my Stack
Overflow shirt. I'll be there about 7. I know that at least one other
person won't be there until 8.&lt;/p&gt;
&lt;p&gt;The
&lt;a class="reference external" href="http://www.meetup.com/stackoverflow/Hampton-VA/105118/"&gt;Meetup&lt;/a&gt;
link.&lt;/p&gt;
&lt;p&gt;I like this meetup idea a lot. Probably because the WFH
life-style is a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 25 May 2011 08:56:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-25:/2011_05_25-meetup_tonight.html</guid><category>Technologies</category><category>#python</category><category>meetup</category><category>stackoverflow</category></item><item><title>Agility and following a "Strictly Agile" approach</title><link>https://slott56.github.io/2011_05_24-agility_and_following_a_strictly_agile_approach.html</link><description>&lt;p&gt;I've seen some discussion on Stack Overflow that is best characterized
by the question: &amp;quot;What is Strictly Agile?&amp;quot;, or &amp;quot;What's the Official
Agile Approach?&amp;quot;.&lt;/p&gt;
&lt;p&gt;Someone shared this with me recently: &amp;quot;&lt;a class="reference external" href="http://radar.oreilly.com/2011/05/process-kills-developer-passion.html"&gt;Process kills developer
passion&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;I have also heard some great complaints about organizations that
claim &amp;quot;Agile&amp;quot; and actually do nothing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-24:/2011_05_24-agility_and_following_a_strictly_agile_approach.html</guid><category>Management</category><category>software process improvement</category><category>waterfall</category><category>scrum</category><category>agile</category></item><item><title>Creating UML</title><link>https://slott56.github.io/2011_05_19-creating_uml.html</link><description>&lt;p&gt;I'm a big fan of plain-text tools. Source Code. ReStructuredText. LaTeX.&lt;/p&gt;
&lt;p&gt;I'm not a big fan of proprietary file formats and document formats
that are difficult or impossible to decode. JSON and XML rock. .XLS
files are painful and difficult to work with.&lt;/p&gt;
&lt;p&gt;UML Diagrams are a particularly odious problem …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 19 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-19:/2011_05_19-creating_uml.html</guid><category>Technologies</category><category>RST</category><category>markup</category><category>UML</category></item><item><title>The 757 Python User's Group</title><link>https://slott56.github.io/2011_05_18-the_757_python_users_group.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.meetup.com/757-Python-Users-Group/"&gt;http://www.meetup.com/757-Python-Users-Group/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I'm looking forward to meeting other Python developers in Hampton
Roads.&lt;/p&gt;
&lt;p&gt;Tonight. 7:00 PM. See you there.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 May 2011 13:36:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-18:/2011_05_18-the_757_python_users_group.html</guid><category>Technologies</category><category>#python</category><category>meetup</category></item><item><title>Decisions and Consequences</title><link>https://slott56.github.io/2011_05_17-decisions_and_consequences.html</link><description>&lt;p&gt;A single poorly-made decision can have profound ripple-effects. Once
your stuck with it, you make accommodations, hacks and work-arounds.
Eventually, things work, but the result is less than ideal.&lt;/p&gt;
&lt;p&gt;Changing tack requires sometimes pervasive rework to the application.
How can we reduce the risks and improve the value created?&lt;/p&gt;
&lt;div class="section" id="a-recent-example"&gt;
&lt;h2&gt;A …&lt;/h2&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-17:/2011_05_17-decisions_and_consequences.html</guid><category>Technologies</category><category>#python</category><category>API Design</category></item><item><title>A Taxonomy of Use Case Errors</title><link>https://slott56.github.io/2011_05_15-a_taxonomy_of_use_case_errors.html</link><description>&lt;p&gt;First, the definition. A use case describes an actor's interaction
with a system to create business value. There are three parts: Actor,
Interaction and Business Value.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Not Interactive.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;1.1. The use case is just features and technical attributes with no
actor interaction expressed.&lt;/p&gt;
&lt;p&gt;1.2. The use case is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 15 May 2011 12:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-15:/2011_05_15-a_taxonomy_of_use_case_errors.html</guid><category>Technologies</category><category>analysis</category><category>use case</category></item><item><title>The Ubiquitous Object</title><link>https://slott56.github.io/2011_05_10-the_ubiquitous_object.html</link><description>&lt;p&gt;Objects are everywhere.&lt;/p&gt;
&lt;p&gt;Weirdly, some people can't see them. I guess they live in a rarified,
HP Lovecraftian world of pure action inhabited by amorphous things
that can't be properly called &amp;quot;beings&amp;quot; but rather &amp;quot;doings&amp;quot; because
they're pure activity with no existence.&lt;/p&gt;
&lt;p&gt;Read
&amp;quot;&lt;a class="reference external" href="http://www.hplovecraft.com/writings/texts/fiction/hy.asp"&gt;Hypnos&lt;/a&gt;&amp;quot;.
&amp;quot;They were sensations, yet within them …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-10:/2011_05_10-the_ubiquitous_object.html</guid><category>Technologies</category><category>procedural programming</category><category>object-oriented design</category></item><item><title>The curse of procedural design</title><link>https://slott56.github.io/2011_05_03-the_curse_of_procedural_design.html</link><description>&lt;p&gt;After reverse engineering procedural code in C, VB or even Python, I'm
finding that procedural programming inevitably leads to bad, bad
code-rot.&lt;/p&gt;
&lt;p&gt;Consider some of the common design patterns.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Strategy&lt;/strong&gt;. Confronted with alternative strategy choices, a purely
procedural code solution is either&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;If-statements everywhere the strategy is involved.&lt;/li&gt;
&lt;li&gt;Block comments …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 May 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-05-03:/2011_05_03-the_curse_of_procedural_design.html</guid><category>Technologies</category><category>#python</category><category>procedural programming</category><category>object-oriented design</category></item><item><title>Language, Tools, Chickens, Eggs, Java and Python</title><link>https://slott56.github.io/2011_04_30-language_tools_chickens_eggs_java_and_python.html</link><description>&lt;p&gt;Too much of programming is intimately tied up with the tools to support
the development of the software.&lt;/p&gt;
&lt;p&gt;Example 1. I was told -- with absolute and fierce conviction -- that
VB may suck as a language, but Visual Studio more than makes up for
the obvious problems. For some people, &lt;strong&gt;Tools …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Apr 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-04-30:/2011_04_30-language_tools_chickens_eggs_java_and_python.html</guid><category>Technologies</category><category>Programming Languages</category><category>ide</category><category>tools</category></item><item><title>Test-Driven Reverse Engineering (TDRE)</title><link>https://slott56.github.io/2011_04_19-test_driven_reverse_engineering_tdre.html</link><description>&lt;p&gt;Another case study on TDRE.&lt;/p&gt;
&lt;p&gt;Provided: 2,938 lines of Python code which process a handful of large
files to create a number of outputs. [Details can't be disclosed.]&lt;/p&gt;
&lt;p&gt;Objective: Refactor to distinguish between the overall sequence of
transformational steps and the details of each individual step.&lt;/p&gt;
&lt;div class="section" id="observations"&gt;
&lt;h2&gt;Observations&lt;/h2&gt;
&lt;p&gt;The code …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Apr 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-04-19:/2011_04_19-test_driven_reverse_engineering_tdre.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>#python</category><category>reverse engineering</category><category>test-driven reverse engineering</category></item><item><title>Performance Discussions and Software Design</title><link>https://slott56.github.io/2011_04_05-performance_discussions_and_software_design.html</link><description>&lt;p&gt;Read this first: &amp;quot;&lt;a class="reference external" href="http://news.ycombinator.com/item?id=2375750"&gt;There is something I find interesting about online
discussions around performance
issues&lt;/a&gt;...&amp;quot; It's about
Stack Overflow, specifically. Apparently, someone didn't get their
question answered and decided it was better to gripe than to rewrite the
question.&lt;/p&gt;
&lt;p&gt;Let's look at their response in pieces.&lt;/p&gt;
&lt;p&gt;&amp;quot;people try to gang …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Apr 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-04-05:/2011_04_05-performance_discussions_and_software_design.html</guid><category>Architecture &amp; Design</category><category>algorithm</category><category>API Design</category><category>object-oriented design</category><category>stackoverflow</category></item><item><title>StackOverflow Meetup</title><link>https://slott56.github.io/2011_03_31-stackoverflow_meetup.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.meetup.com/stackoverflow/Hampton-VA/"&gt;http://www.meetup.com/stackoverflow/Hampton-VA/&lt;/a&gt; for information on
next week's Stack Exchange meetup.&lt;/p&gt;
&lt;p&gt;For other events near you, see the
&lt;a class="reference external" href="http://www.meetup.com/stackoverflow/"&gt;Meetup&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;I'll be wearing my &amp;quot;official&amp;quot; Stack Overflow shirt. I'll try to grab
a seat by the door, also, to be easy to find.&lt;/p&gt;
&lt;p&gt;#SOMeetup&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 Mar 2011 08:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-31:/2011_03_31-stackoverflow_meetup.html</guid><category>Technologies</category><category>#SOMeetup</category><category>meetup</category><category>stackoverflow</category></item><item><title>Code Deletion</title><link>https://slott56.github.io/2011_03_30-code_deletion.html</link><description>&lt;p&gt;A joyous milestone today. Removed much of our
pre-&lt;a class="reference external" href="https://bitbucket.org/jespern/django-piston/wiki/Home"&gt;Piston&lt;/a&gt;
RESTful web services code.&lt;/p&gt;
&lt;p&gt;We started with the &lt;a class="reference external" href="http://code.google.com/p/django-rest-interface/"&gt;Django-REST
Interface&lt;/a&gt;. While
nice, it imposed a number of restrictions that were onerous. In
particular, we have a lot of non-model responses. They're model-like
data that we serialize to be compatible with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 30 Mar 2011 16:55:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-30:/2011_03_30-code_deletion.html</guid><category>Technologies</category><category>refactoring</category><category>architecture</category></item><item><title>Where is Python Used? (Update)</title><link>https://slott56.github.io/2011_03_30-where_is_python_used_update.html</link><description>&lt;p&gt;This is a fair-to-partly silly question that shows up on places like
StackOverflow once in a while.&lt;/p&gt;
&lt;p&gt;Python is used widely and pretty heavily.&lt;/p&gt;
&lt;p&gt;It's a built-in feature to many operating systems in common use. The
exception, of course, is Windows.&lt;/p&gt;
&lt;p&gt;I just found out -- the hard way -- that Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 30 Mar 2011 14:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-30:/2011_03_30-where_is_python_used_update.html</guid><category>Technologies</category><category>macosx</category><category>#python</category></item><item><title>Improving the "Velocity" of IT</title><link>https://slott56.github.io/2011_03_15-improving_the_velocity_of_it.html</link><description>&lt;p&gt;Check this out: &amp;quot;&lt;a class="reference external" href="http://www.informationweek.com/news/global-cio/interviews/showArticle.jhtml?articleID=229218781"&gt;IT Is Too Darn
Slow&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;This article is packed with helpful advice on how to improve
&amp;quot;velocity&amp;quot; and the pace of innovation.&lt;/p&gt;
&lt;p&gt;Good quotes: &amp;quot;Once IT decides to focus on speed, two obstacles get in
the way: security and governance.&amp;quot; This is important. Manage security
without it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Mar 2011 15:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-15:/2011_03_15-improving_the_velocity_of_it.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>XBox Live -- Can't Unsubscribe</title><link>https://slott56.github.io/2011_03_15-xbox_live_cant_unsubscribe.html</link><description>&lt;p&gt;Here's a lack of a use case for you.&lt;/p&gt;
&lt;p&gt;Someone -- fraudulently -- used my email address to subscribe to XBox
live. I cannot remedy this. Apparently, neither can Microsoft.&lt;/p&gt;
&lt;p&gt;I get spam from XBox. I change my passwords all over the place.&lt;/p&gt;
&lt;p&gt;I go to the XBox live web site to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Mar 2011 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-15:/2011_03_15-xbox_live_cant_unsubscribe.html</guid><category>Technologies</category><category>use case</category></item><item><title>To Robert Fulton, Regarding the "Steam Boat"</title><link>https://slott56.github.io/2011_03_10-to_robert_fulton_regarding_the_steam_boat.html</link><description>&lt;p&gt;A quote&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;What sir, would you make a ship sail against the wind and currents
by lighting a bonfire under her deck? I pray you excuse me. I have no
time to listen to such nonsense.&amp;quot;&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;Napoleon Bonaparte&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;There's no authoritative source for this quote. Since Fulton was
commissioned to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 10 Mar 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-10:/2011_03_10-to_robert_fulton_regarding_the_steam_boat.html</guid><category>Technologies</category><category>innovation</category><category>software process improvement</category></item><item><title>DIY and the Dumb Rules of Prevention</title><link>https://slott56.github.io/2011_03_01-diy_and_the_dumb_rules_of_prevention.html</link><description>&lt;p&gt;Check out this little item in eWeek. &amp;quot;&lt;a class="reference external" href="http://www.eweek.com/c/a/Enterprise-Applications/Transforming-DIY-Projects-from-the-Painful-to-the-Productive-382595/"&gt;Transforming DIY Projects from
the Painful to the
Productive&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;As an outside consultant in a large number of organizations, I've
seen a lot of DIY projects—what we used to call &amp;quot;end user computing&amp;quot;.
Indeed, I've even been hired by the user organizations …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Mar 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-03-01:/2011_03_01-diy_and_the_dumb_rules_of_prevention.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>TDD -- From SME Spreadsheet to TestCase to Code</title><link>https://slott56.github.io/2011_02_17-tdd_from_sme_spreadsheet_to_testcase_to_code.html</link><description>&lt;p&gt;In &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2011_02_08-unit_test_case_subject_matter_experts_and_requirements.html"&gt;Unit Test Case, Subject Matter Experts and
Requirements&lt;/a&gt;&amp;quot;
I suggested that it's often pretty easy to get a spreadsheet of
full-worked out examples from subject-matter experts. Indeed, if your
following TDD, that spreadsheet of examples is solid gold.&lt;/p&gt;
&lt;p&gt;Let's consider something relatively simple. Let's say we're working
on some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 17 Feb 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-02-17:/2011_02_17-tdd_from_sme_spreadsheet_to_testcase_to_code.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>#python</category><category>tdd</category></item><item><title>Unit Test Case, Subject Matter Experts and Requirements</title><link>https://slott56.github.io/2011_02_08-unit_test_case_subject_matter_experts_and_requirements.html</link><description>&lt;p&gt;Here's a typical &amp;quot;I don't like TDD&amp;quot; question: the topic is &amp;quot;&lt;a class="reference external" href="http://programmers.stackexchange.com/questions/41773/does-tdd-really-work-for-complex-projects"&gt;Does TDD
really work for complex
projects?&lt;/a&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;Part of the question focused on the difficulty of preparing test
cases that cover the requirements. In particular, there was some
hand-wringing over conflicting and contradictory requirements.&lt;/p&gt;
&lt;p&gt;Here's what's worked for me …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Feb 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-02-08:/2011_02_08-unit_test_case_subject_matter_experts_and_requirements.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>#python</category><category>tdd</category></item><item><title>Escaping the Relational Schema Trap</title><link>https://slott56.github.io/2011_02_02-escaping_the_relational_schema_trap.html</link><description>&lt;p&gt;We're struggling with our Relational Schema. We're not alone, of course,
everyone struggles with the relational model. The technology imposes
difficult limitations and we work around them.&lt;/p&gt;
&lt;p&gt;There's kind of a 4-step process through which the relational schema
erodes into irrelevance. The concept of a schema is not irrelevant.
It's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 Feb 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-02-02:/2011_02_02-escaping_the_relational_schema_trap.html</guid><category>Technologies</category><category>design</category><category>SQL</category><category>noSQL</category></item><item><title>Wild-Card (LIKE-clause) searches are slow. What to do?</title><link>https://slott56.github.io/2011_01_25-wild_card_like_clause_searches_are_slow_what_to_do.html</link><description>&lt;p&gt;Patient: &amp;quot;Doctor, doctor, it hurts when I do this.&amp;quot;&lt;/p&gt;
&lt;p&gt;Doctor: &amp;quot;Then don't do that.&amp;quot;&lt;/p&gt;
&lt;p&gt;I got an email with hundreds of words of content. This part made
sense: &amp;quot;...doing wild card searches using Oracle's database engine
and are wondering why is it so slow and how do they make it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Jan 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-25:/2011_01_25-wild_card_like_clause_searches_are_slow_what_to_do.html</guid><category>Technologies</category><category>design</category><category>SQL</category><category>architecture</category></item><item><title>Python Jobs</title><link>https://slott56.github.io/2011_01_24-python_jobs.html</link><description>&lt;p&gt;Looked interesting enough for someone to email it to me. Still can't
figure out why they sent it. Posting this feels like advertising, so
perhaps I should charge them a promotional fee.&lt;/p&gt;
&lt;div class="section" id="web-services-mobile-developer"&gt;
&lt;h2&gt;Web Services - Mobile Developer&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;A minimum of 2 years of Web Service development, preferably using an
established Python-based …&lt;/p&gt;&lt;/blockquote&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Jan 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-24:/2011_01_24-python_jobs.html</guid><category>Technologies</category><category>#python</category></item><item><title>Client-Server Partitioning</title><link>https://slott56.github.io/2011_01_11-client_server_partitioning.html</link><description>&lt;p&gt;I have slowly grown to love RESTful web services.&lt;/p&gt;
&lt;p&gt;I was asked about a nearly empty section in the code repository
labeled &amp;quot;Java client&amp;quot;.&lt;/p&gt;
&lt;p&gt;&amp;quot;Yes,&amp;quot; I said, &amp;quot;it's a place-holder for a Java package that includes
classes to wrap our RESTful web services.&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;Really?&amp;quot; I was asked, &amp;quot;Why? We use …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jan 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-11:/2011_01_11-client_server_partitioning.html</guid><category>Technologies</category><category>REST</category><category>architecture</category></item><item><title>Java PHP Python -- Which is "Faster In General"?</title><link>https://slott56.github.io/2011_01_06-java_php_python_which_is_faster_in_general.html</link><description>&lt;p&gt;Sigh. What a difficult question. There are numerous incarnations on
StackOverflow. All nearly unanswerable. The worst part is questions
where they add the &amp;quot;in general&amp;quot; qualifier. Which is &amp;quot;faster in general&amp;quot;
is essentially impossible to answer. And yet, the question persists.&lt;/p&gt;
&lt;p&gt;There are three rules for figuring out which is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Jan 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-06:/2011_01_06-java_php_python_which_is_faster_in_general.html</guid><category>Technologies</category><category>PHP</category><category>#python</category><category>java</category><category>numerosity</category></item><item><title>Search For Expertise</title><link>https://slott56.github.io/2011_01_06-search_for_expertise.html</link><description>&lt;p&gt;I'm looking for a unbiased Python expert to help with a book I'm working
on. We need &amp;quot;an unbiased python expert with a keen eye for detail.&amp;quot;&lt;/p&gt;
&lt;p&gt;The role is technical reviewer. I've never done this before, but it
appears that the tech reviewer is a paid position somewhere in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Jan 2011 07:56:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-06:/2011_01_06-search_for_expertise.html</guid><category>Technologies</category><category>#python</category></item><item><title>Integration Testing, unittest and Python 2.7</title><link>https://slott56.github.io/2011_01_04-integration_testing_unittest_and_python_27.html</link><description>&lt;p&gt;Many folks use Python's unittest module for integration testing. It
sometimes leads to whining and hand-wringing, but it is very effective.
Ordinary &amp;quot;unit&amp;quot; tests use mocks and focus on a class or a module
more-or-less in isolation. The purists say &amp;quot;complete isolation&amp;quot;. But
that's sometimes unrealistic. A class that's part …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jan 2011 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-04:/2011_01_04-integration_testing_unittest_and_python_27.html</guid><category>Technologies</category><category>unit testing</category><category>#python</category></item><item><title>Hypothetical Designs and Numerosity</title><link>https://slott56.github.io/2011_01_04-hypothetical_designs_and_numerosity.html</link><description>&lt;p&gt;I love hypothetical questions. Got a bunch recently. I guess it's the
season for hypotheticals.&lt;/p&gt;
&lt;p&gt;These all seem to come from the &amp;quot;Averted Glance&amp;quot; school of
management. The best part about the &amp;quot;I don't want to know the
details&amp;quot; management is that we need to substitute metrics for
understanding. One …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jan 2011 07:22:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-04:/2011_01_04-hypothetical_designs_and_numerosity.html</guid><category>Technologies</category><category>numerosity</category><category>architecture</category><category>object-oriented design</category></item><item><title>Sensible Metrics -- Avoiding Numerosity</title><link>https://slott56.github.io/2011_01_04-sensible_metrics_avoiding_numerosity.html</link><description>&lt;p&gt;In general, Software Engineering Metrics are not without value.&lt;/p&gt;
&lt;p&gt;Expecting magic from metrics is what devalues them, reducing metrics
to dumb numerosity.&lt;/p&gt;
&lt;p&gt;Once code is in production, plenty of metrics are readily available.
For example, the trouble-ticket history tells you everything you need
to know about code that's in production …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jan 2011 07:22:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2011-01-04:/2011_01_04-sensible_metrics_avoiding_numerosity.html</guid><category>Technologies</category><category>software process improvement</category><category>numerosity</category></item><item><title>pyWeb Literate Programming Tool | Download pyWeb Literate Programming Tool software for free at SourceForge.net</title><link>https://slott56.github.io/2010_12_30-pyweb_literate_programming_tool_download_pyweb_literate_programming_tool_software_for_free_at_sourceforgenet.html</link><description>&lt;p&gt;I've (finally) updated the pyWeb Literate Programming Tool.&lt;/p&gt;
&lt;p&gt;There were feature requests and bug reports. Much to do. Sadly, I'm
really slow at doing it.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://sourceforge.net/projects/pywebtool/?sms_ss=blogger&amp;amp;at_xt=4d1ccf8b638ad5eb%2C0"&gt;pyWeb Literate Programming Tool | Download pyWeb Literate
Programming Tool software for free at
SourceForge.net&lt;/a&gt;&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;div class="section" id="pyweb-patch-for-c"&gt;
&lt;h2&gt;pyweb-patch-for-c&lt;/h2&gt;
&lt;p&gt;Anonymous&amp;lt;&lt;a class="reference external" href="mailto:noreply&amp;#64;blogger.com"&gt;noreply&amp;#64;blogger.com&lt;/a&gt;&amp;gt;&lt;/p&gt;
&lt;p&gt;2011-02-01 02:31:48.402000-05 …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 Dec 2010 13:31:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-30:/2010_12_30-pyweb_literate_programming_tool_download_pyweb_literate_programming_tool_software_for_free_at_sourceforgenet.html</guid><category>Technologies</category><category>#python</category><category>pyWeb</category><category>literate programming</category></item><item><title>Top Language Skills</title><link>https://slott56.github.io/2010_12_30-top_language_skills.html</link><description>&lt;p&gt;Check out this item on eWeek: &lt;a class="reference external" href="http://www.eweek.com/c/a/Application-Development/Java-C-C-Top-18-Programming-Languages-for-2011-480790/?kc=EWWHNEMNL12272010STR1"&gt;Java, C, C++: Top Programming Languages
for 2011 - Application Development - News &amp;amp; Reviews -
eWeek.com&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The presentation starts with Java, C, C++, C# -- not surprising.
These are clearly the most popular programming languages. These seem
to be the first choice made by many organizations.&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 Dec 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-30:/2010_12_30-top_language_skills.html</guid><category>Technologies</category><category>C</category><category>#python</category><category>java</category><category>C#</category><category>Programming Languages</category></item><item><title>The Anti-IF Campaign</title><link>https://slott56.github.io/2010_12_27-the_anti_if_campaign.html</link><description>&lt;p&gt;Check this out: &lt;a class="reference external" href="http://www.antiifcampaign.com/"&gt;http://www.antiifcampaign.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'm totally in favor of reducing complexity. I've seen too many
places where a &lt;strong&gt;Strategy&lt;/strong&gt; or some other kind of &lt;strong&gt;Delegation&lt;/strong&gt;
design pattern should have been used. Instead a cluster of
if-statements was used. Sometimes these if-statements suffer
copy-and-paste repetition because someone didn't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Dec 2010 11:48:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-27:/2010_12_27-the_anti_if_campaign.html</guid><category>Technologies</category><category>anti-if</category><category>#python</category></item><item><title>Code Base Fragmentation -- Again</title><link>https://slott56.github.io/2010_12_14-code_base_fragmentation_again.html</link><description>&lt;p&gt;Check this out: &amp;quot;&lt;a class="reference external" href="http://pydanny.blogspot.com/2010/12/stupid-template-languages.html"&gt;Stupid Template
Languages&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Love this:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;The biggest annoyance I have with smart template
languages (Mako, Genshi, Jinja2, PHP, Perl, ColdFusion, etc) is that
you have the capability to mix core business logic with your end
views, hence violating the rules of Model-View-Controller
architecture.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Yes, too much power …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Dec 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-14:/2010_12_14-code_base_fragmentation_again.html</guid><category>Technologies</category><category>#python</category><category>Django</category><category>architecture</category><category>text-template</category><category>jinja</category><category>mako</category></item><item><title>The Wrapper vs. Library vs. Aspect Problem</title><link>https://slott56.github.io/2010_12_09-the_wrapper_vs_library_vs_aspect_problem.html</link><description>&lt;p&gt;Imagine that we've got a collection of applications used by customers to
provide data, a collection of applications we use to collect data from
vendors. We've got a third collection of analytical tools.&lt;/p&gt;
&lt;p&gt;Currently, they share a common database, but the focus, use cases,
and interfaces are different.&lt;/p&gt;
&lt;p&gt;Okay so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 09 Dec 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-09:/2010_12_09-the_wrapper_vs_library_vs_aspect_problem.html</guid><category>Technologies</category><category>#python</category><category>API Design</category><category>architecture</category></item><item><title>Intuition and Experience</title><link>https://slott56.github.io/2010_12_07-intuition_and_experience.html</link><description>&lt;p&gt;First, read
&lt;a class="reference external" href="http://www.cs.utexas.edu/users/EWD/ewd08xx/EWD800.PDF"&gt;EWD800&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;It has harsh things to say about relying on &lt;em&gt;intuition&lt;/em&gt; in
programming.&lt;/p&gt;
&lt;p&gt;Stack Overflow is full of questions where someone takes their
experience with one language and applies it incorrectly and
inappropriately to another language.&lt;/p&gt;
&lt;p&gt;I get email, periodically, also on this subject. I got one recently …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Dec 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-07:/2010_12_07-intuition_and_experience.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>More Open Source and More Agile News</title><link>https://slott56.github.io/2010_12_02-more_open_source_and_more_agile_news.html</link><description>&lt;p&gt;ComputerWorld, November 22, 2010, has this: &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/s/article/9197420/Open_source_grows_up"&gt;Open Source Grows
Up&lt;/a&gt;&amp;quot;.
The news of the weird is &amp;quot;It's clear that open-source software has moved
beyond the zealotry phase.&amp;quot; I wasn't aware this phase existed. I hope to
see the project plan with &amp;quot;zealotry&amp;quot; in it.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;real&lt;/em&gt; news is &amp;quot;More than …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 02 Dec 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-12-02:/2010_12_02-more_open_source_and_more_agile_news.html</guid><category>Technologies</category><category>open source</category><category>software process improvement</category><category>agile</category></item><item><title>Questions, or, How to Ask For Help</title><link>https://slott56.github.io/2010_11_30-questions_or_how_to_ask_for_help.html</link><description>&lt;p&gt;Half the fun on Stack Overflow is the endless use of closed-ended
questions. &amp;quot;Can I do this in Python?&amp;quot; being so common and so hilarious.&lt;/p&gt;
&lt;p&gt;The answer is &amp;quot;Yes.&amp;quot; You &lt;em&gt;can&lt;/em&gt; do it.&lt;/p&gt;
&lt;p&gt;Perhaps that's not the question they really meant to ask.&lt;/p&gt;
&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="http://polaris.gseis.ucla.edu/jrichardson/dis220/openclosed.htm"&gt;Open versus Closed Ended
Questions&lt;/a&gt;&amp;quot;
for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 30 Nov 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-30:/2010_11_30-questions_or_how_to_ask_for_help.html</guid><category>Technologies</category><category>reverse engineering</category><category>analysis</category><category>knowledge capture</category></item><item><title>Open-Source, moving from "when" to "how"</title><link>https://slott56.github.io/2010_11_23-open_source_moving_from_when_to_how.html</link><description>&lt;p&gt;Interesting item in the November 1 eWeek: &amp;quot;&lt;a class="reference external" href="http://www.eweek.com/c/a/Linux-and-Open-Source/Open-Source-Software-in-the-Enterprise-177312/"&gt;Open-Source Software in the
Enterprise&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Here's the key quote: &amp;quot;rather than asking if or when, organizations
are increasingly focusing on how&amp;quot;.&lt;/p&gt;
&lt;p&gt;Interestingly, the article then goes on to talk about licensing and
intellectual property management. I suppose those count, but they're
fringe issues …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Nov 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-23:/2010_11_23-open_source_moving_from_when_to_how.html</guid><category>Technologies</category><category>open source</category><category>#python</category></item><item><title>Software Patents</title><link>https://slott56.github.io/2010_11_18-software_patents.html</link><description>&lt;p&gt;Here's an interesting news item: &amp;quot;&lt;a class="reference external" href="http://www.nytimes.com/external/gigaom/2010/11/12/12gigaom-red-hats-secret-patent-deal-and-the-fate-of-jboss-98607.html?ref=technology"&gt;Red Hat’s Secret Patent Deal and the
Fate of JBoss
Developers&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Here's an ancient -- but still relevant -- piece from Tim O'Reilly:
&amp;quot;&lt;a class="reference external" href="http://tim.oreilly.com/patents/index.csp"&gt;Software and Business Method
Patents&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Here's a great article in Slate on the consequences of software
patents. &amp;quot;&lt;a class="reference external" href="http://www.slate.com/id/2135559/"&gt;Weapons of Business Destruction: How a …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 18 Nov 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-18:/2010_11_18-software_patents.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Hadoop and SQL/Relational Hegemony</title><link>https://slott56.github.io/2010_11_11-hadoop_and_sqlrelational_hegemony.html</link><description>&lt;p&gt;Here's a nice article on why Facebook, Yahoo and eBay use Hadoop:
&amp;quot;&lt;a class="reference external" href="http://www.forbes.com/2010/11/05/facebook-yahoo-ebay-technology-hadoop.html"&gt;Asking Any Question Of All Your
Data&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;The article has one tiny element of pandering to the SQL hegemonists.&lt;/p&gt;
&lt;p&gt;Yes, it sounds like a conspiracy theory, but it seems like there
really are folks who will tell you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 11 Nov 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-11:/2010_11_11-hadoop_and_sqlrelational_hegemony.html</guid><category>Technologies</category><category>RDBMS</category><category>hadoop</category><category>map-reduce</category></item><item><title>Data Mapping and Conversion Tools -- Sigh</title><link>https://slott56.github.io/2010_11_09-data_mapping_and_conversion_tools_sigh.html</link><description>&lt;p&gt;Yes, ETL is interesting and important.&lt;/p&gt;
&lt;p&gt;But creating a home-brewed data mapping and conversion tool isn't
interesting or important. Indeed, it's just an attractive nuisance.
Sure, it's fun, but it isn't valuable work. The world doesn't need
another ETL tool.&lt;/p&gt;
&lt;p&gt;The core problem is talking management (and other developers) into …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Nov 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-09:/2010_11_09-data_mapping_and_conversion_tools_sigh.html</guid><category>Technologies</category><category>ETL</category><category>#python</category></item><item><title>Pythonic vs. "Clean"</title><link>https://slott56.github.io/2010_11_04-pythonic_vs_clean.html</link><description>&lt;p&gt;This provokes thought:
&amp;quot;&lt;a class="reference external" href="http://nedbatchelder.com/blog/201011/pythonic.html"&gt;Pythonic&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;Why does Python have a &amp;quot;Pythonic&amp;quot; style? Why not &amp;quot;clean&amp;quot;?&lt;/p&gt;
&lt;p&gt;Is it these lines from Tim Peters' &amp;quot;The Zen of Python&amp;quot; (a/k/a import
this)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There should be one-- and preferably only one --obvious way to do it.&lt;/p&gt;
&lt;p&gt;Although that way may not be obvious …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Nov 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-04:/2010_11_04-pythonic_vs_clean.html</guid><category>Technologies</category><category>#python</category></item><item><title>"Might Be Misleading" is misleading</title><link>https://slott56.github.io/2010_11_02-might_be_misleading_is_misleading.html</link><description>&lt;p&gt;My books (&lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/nonprogrammer.html#book-nonprogrammer"&gt;Building Skills in
Programming&lt;/a&gt;,
&lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python.html#book-python"&gt;Building Skills in
Python&lt;/a&gt;
and &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/oodesign.html#book-oodesign"&gt;Building Skills in OO
Design&lt;/a&gt;)
develop a steady stream of email. [Also, as a side note, I need to move
them to the me.com server, Apple is decommissioning the homepage.mac.com
domain.]&lt;/p&gt;
&lt;p&gt;The mail falls into several …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Nov 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-11-02:/2010_11_02-might_be_misleading_is_misleading.html</guid><category>Technologies</category><category>building skills books</category><category>#python</category><category>learning</category></item><item><title>Code Base Fragmentation</title><link>https://slott56.github.io/2010_10_21-code_base_fragmentation.html</link><description>&lt;p&gt;Here's what I love -- an argument that can only add cost and complexity
to a project.&lt;/p&gt;
&lt;p&gt;It sounds like this to me: &amp;quot;We need to fragment the code base into
several different languages. Some of the application programming
simply &lt;strong&gt;must&lt;/strong&gt; be written in a language that's poorly-understood,
with tools that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 Oct 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-10-21:/2010_10_21-code_base_fragmentation.html</guid><category>Technologies</category><category>triggers</category><category>database design</category></item><item><title>Technical Debt</title><link>https://slott56.github.io/2010_10_19-technical_debt.html</link><description>&lt;p&gt;Love this from Gartner. &amp;quot;&lt;a class="reference external" href="http://www.gartner.com/it/page.jsp?id=1439513"&gt;Gartner Estimates Global 'IT Debt' to Be $500
Billion This Year, with Potential to Grow to $1 Trillion by
2015&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;NetworkWorld ran a quicky version of the story. Gartner: &lt;a class="reference external" href="http://www.networkworld.com/news/2010/092310-global-it-debt.html"&gt;Global 'IT
debt' hits $500 billion, on the way to $1
trillion&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ComputerWorld -- to be proper journalists …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Oct 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-10-19:/2010_10_19-technical_debt.html</guid><category>Technologies</category><category>refactoring</category><category>software process improvement</category><category>agile</category><category>architecture</category></item><item><title>NoSQL -- Old Wine, New Bottle</title><link>https://slott56.github.io/2010_10_18-nosql_old_wine_new_bottle.html</link><description>&lt;p&gt;Got an email with links about NoSQL. Links like &amp;quot;&lt;a class="reference external" href="http://msdn.microsoft.com/en-us/magazine/ee310029.aspx"&gt;Going NoSQL with
MongoDB&lt;/a&gt;&amp;quot;.
This -- like many such articles -- includes the phrase &amp;quot;the NoSQL
movement&amp;quot; as if there's something new going on. Thank goodness Ted
Neward includes quotes around &amp;quot;new&amp;quot;. This isn't new. And doubly good,
Neward doesn't use words like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 18 Oct 2010 10:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-10-18:/2010_10_18-nosql_old_wine_new_bottle.html</guid><category>Technologies</category><category>architecture</category><category>noSQL</category><category>database design</category><category>SQL</category></item><item><title>Real Security Models</title><link>https://slott56.github.io/2010_10_14-real_security_models.html</link><description>&lt;p&gt;Lots of folks like to wring their hands over the Big Vague Concept
(BVC™) labeled &amp;quot;security&amp;quot;.&lt;/p&gt;
&lt;p&gt;There's a lot of quibbling. Let's move beyond BVC to the interesting
stuff.&lt;/p&gt;
&lt;p&gt;I've wasted hours listening to people identify risks and costs of
something that's not very complex. I've been plagued by folks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Oct 2010 07:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-10-14:/2010_10_14-real_security_models.html</guid><category>Technologies</category><category>Django</category><category>#python</category><category>security</category></item><item><title>.xlsm and .xlsx Files -- Finally Reaching Broad Use</title><link>https://slott56.github.io/2010_10_04-xlsm_and_xlsx_files_finally_reaching_broad_use.html</link><description>&lt;p&gt;For years, I've been using &lt;a class="reference external" href="http://poi.apache.org/"&gt;Apache POI&lt;/a&gt; in
Java and &lt;a class="reference external" href="http://www.lexicon.net/sjmachin/xlrd.htm"&gt;XLRD&lt;/a&gt; in Python
to read spreadsheets. Finally, now that .XLSX and .XLSM files are in
more widespread use, we can move away from those packages and their
reliance on successful reverse engineering of undocumented features.&lt;/p&gt;
&lt;p&gt;Spreadsheets are -- BTW -- the universal …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 04 Oct 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-10-04:/2010_10_04-xlsm_and_xlsx_files_finally_reaching_broad_use.html</guid><category>Technologies</category><category>#python</category><category>xml</category><category>spreadsheet</category><category>xlsx</category><category>xlsm</category><category>zipfile</category><category>excel</category></item><item><title>SQL Can Be Slow -- Why Do People Doubt This?</title><link>https://slott56.github.io/2010_09_30-sql_can_be_slow_why_do_people_doubt_this.html</link><description>&lt;p&gt;Here's a typical problem that results from &amp;quot;SQL Hegemony&amp;quot; -- all data
must be in a database, and all access must be via SQL. This can also be
called the &amp;quot;SQL Fetish&amp;quot; school of programming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;War Story&lt;/strong&gt;. On a Data Warehousing project, we had to load and
process the organizational hierarchy …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 30 Sep 2010 13:03:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-30:/2010_09_30-sql_can_be_slow_why_do_people_doubt_this.html</guid><category>Technologies</category><category>data warehouse</category><category>#python</category><category>SQL</category></item><item><title>Why Professional Certification Might Be Good</title><link>https://slott56.github.io/2010_09_28-why_professional_certification_might_be_good.html</link><description>&lt;p&gt;Sometimes I think we need professional certification in this industry. I
supported the &lt;a class="reference external" href="http://www.iccp.org/"&gt;ICCP&lt;/a&gt; for a long time.&lt;/p&gt;
&lt;p&gt;In addition to certification, which requires ongoing educational
credits to maintain, there ought to be a process for revoking one's
certification, requiring them to pass their exams again.&lt;/p&gt;
&lt;p&gt;Here's three strikes against …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 28 Sep 2010 16:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-28:/2010_09_28-why_professional_certification_might_be_good.html</guid><category>Technologies</category><category>floating-point</category><category>integer</category><category>#python</category></item><item><title>Making a bad problem worse</title><link>https://slott56.github.io/2010_09_24-making_a_bad_problem_worse.html</link><description>&lt;p&gt;Imagine that you're a beer distributor who provides &amp;quot;just-in-time&amp;quot; beer
by type. You don't take orders for a specific brand, you take orders a
type: stout, lager, India pale ale, etc. You resolve the bill based on
what you actually delivered.&lt;/p&gt;
&lt;p&gt;This can be kind of complex. However, there's no …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 24 Sep 2010 08:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-24:/2010_09_24-making_a_bad_problem_worse.html</guid><category>Technologies</category><category>complexity</category><category>software design</category><category>database design</category><category>SQL</category></item><item><title>Comments, Assertions and Unit Tests</title><link>https://slott56.github.io/2010_09_23-comments_assertions_and_unit_tests.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="http://wrongsideofmemphis.wordpress.com/2010/09/15/commenting-the-code/"&gt;Commenting the
Code&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;This posting tickled my fancy because it addressed the central issue of
&amp;quot;what requires comments outside Python docstrings&amp;quot;. All functions,
classes, modules and packages require docstrings. That's clear. But
which lines of code require additional documentation?&lt;/p&gt;
&lt;p&gt;We use Sphinx, so we make extensive use of docstrings …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Sep 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-23:/2010_09_23-comments_assertions_and_unit_tests.html</guid><category>Technologies</category><category>unit testing</category><category>sphinx</category><category>#python</category></item><item><title>A Really Bad Idea -- Adding Clutter to A Language</title><link>https://slott56.github.io/2010_09_21-a_really_bad_idea_adding_clutter_to_a_language.html</link><description>&lt;p&gt;A DBA suggested that I read up on &amp;quot;Practical API Design: Confessions of
a Java Framework Architect&amp;quot;.&lt;/p&gt;
&lt;p&gt;Apparently the DBA had read the phrase &amp;quot;direct compiler support of
versioning of APIs&amp;quot; in a review of the book and -- immediately --
become terribly confused.&lt;/p&gt;
&lt;p&gt;I can see why a DBA would be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Sep 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-21:/2010_09_21-a_really_bad_idea_adding_clutter_to_a_language.html</guid><category>Technologies</category><category>configuration management</category><category>#python</category></item><item><title>What Innovation Looks Like</title><link>https://slott56.github.io/2010_09_16-what_innovation_looks_like.html</link><description>&lt;p&gt;Check out &amp;quot;&lt;a class="reference external" href="http://www.informationweek.com/news/telecom/collaboration/showArticle.jhtml?articleID=227300081"&gt;End User 2.0: When Employees Have All The
Answers&lt;/a&gt;&amp;quot;
in InformationWeek. This is about adoption of non-approved technology.
Think iPad.&lt;/p&gt;
&lt;p&gt;This shows what innovation looks like when it happens.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;There's no process for innovation.&lt;/li&gt;
&lt;li&gt;There's no &amp;quot;permission to fail&amp;quot;. Folks just fail or succeed
without anyone's support …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 16 Sep 2010 09:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-16:/2010_09_16-what_innovation_looks_like.html</guid><category>Technologies</category><category>innovation</category><category>disruption</category></item><item><title>Sustaining Innovation or Placating Management</title><link>https://slott56.github.io/2010_09_14-sustaining_innovation_or_placating_management.html</link><description>&lt;p&gt;Computerworld, July 26, 2010 cover story was &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/s/article/350480/Sustaining_Innovation"&gt;Sustaining
Innovation&lt;/a&gt;&amp;quot;.
The magazine was chock-full of thoughts on innovation.&lt;/p&gt;
&lt;p&gt;Much of it was good, but some of it is just appeasement to management
types who are focused on cost and schedule.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Establish processes and ownership. Organizations should have a
process for taking …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Sep 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-14:/2010_09_14-sustaining_innovation_or_placating_management.html</guid><category>Technologies</category><category>innovation</category><category>management</category></item><item><title>Transformation Pipelines</title><link>https://slott56.github.io/2010_09_08-transformation_pipelines.html</link><description>&lt;p&gt;My laptop chartplotter software (&lt;a class="reference external" href="http://www.gpsnavx.com/"&gt;GPSNavX&lt;/a&gt;)
is marvelous for visualizing a route. But, there are elements to route
planning that it doesn't handle gracefully.&lt;/p&gt;
&lt;p&gt;Specifically, it doesn't provide useful elapsed time calculation at
all. While the TTG and ETA (Time to Go and Estimated Time of Arrival)
for the next waypoint …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Sep 2010 22:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-08:/2010_09_08-transformation_pipelines.html</guid><category>Technologies</category><category>#python</category><category>functional programming</category></item><item><title>Legacy Data Preservation</title><link>https://slott56.github.io/2010_09_08-legacy_data_preservation.html</link><description>&lt;p&gt;Extracting legacy data can be really, really hard. However, it's of
central importance because data lives forever. Application &amp;quot;logic&amp;quot; and
&amp;quot;business rules&amp;quot; come and go.&lt;/p&gt;
&lt;p&gt;Today's case study is a dusty old Dell Inspiron Laptop running
Windows 98 with
&lt;a class="reference external" href="http://www.nobeltec.com/support/suppot_notice.asp"&gt;Chartview&lt;/a&gt;
software.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem 1.&lt;/strong&gt; Chartview. No extract or export capability, except …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Sep 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-08:/2010_09_08-legacy_data_preservation.html</guid><category>Technologies</category><category>data conversion</category><category>#python</category></item><item><title>Using SCons</title><link>https://slott56.github.io/2010_09_01-using_scons.html</link><description>&lt;p&gt;In looking at Application Lifecycle Management (see &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2010_02_04-alm_tools.html"&gt;ALM
Tools&lt;/a&gt;&amp;quot;),
I had found that &lt;a class="reference external" href="http://www.scons.org/"&gt;SCons&lt;/a&gt; appears to be pretty
popular. It's not as famous as all the make variants, or Apache Ant or
Apache Maven, but it seems to have a niche in the forest of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/List_of_build_automation_software"&gt;Build
Automation
Software&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;While it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 01 Sep 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-09-01:/2010_09_01-using_scons.html</guid><category>Technologies</category><category>RST</category><category>scons</category><category>#python</category><category>docutils</category><category>continuous integration</category></item><item><title>Oracle Analytics and Functional Programming</title><link>https://slott56.github.io/2010_08_30-oracle_analytics_and_functional_programming.html</link><description>&lt;p&gt;As a hypothetical, I was asked about doing Oracle Analytic functions in
Python.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;Sidebar: Politics&lt;/strong&gt;. The question came from a DBA in a C# shop.
That's why it's just hypothetical. Politically, they could never make
use of this information. In C# world, Functional Programming is often
scary and evil. It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 30 Aug 2010 07:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-08-30:/2010_08_30-oracle_analytics_and_functional_programming.html</guid><category>Technologies</category><category>#python</category><category>software design</category><category>functional programming</category><category>SQL</category></item><item><title>Is It Worth Describing Obscure Features?</title><link>https://slott56.github.io/2010_08_17-is_it_worth_describing_obscure_features.html</link><description>&lt;p&gt;I'm rewriting &lt;em&gt;Building Skills in Python&lt;/em&gt;. 2.7 is out. As more libraries
make the move, 3.1 is getting more and more viable.&lt;/p&gt;
&lt;p&gt;I'm looking closely at the Decorators chapter (&lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python/html/p03/p03c06_decorators.html"&gt;Part 3, Chapter
6&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;And I'm struggling with classmethod. It's a first-class part of
Python. And I'm sure there …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Aug 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-08-17:/2010_08_17-is_it_worth_describing_obscure_features.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>End User Programming -- Solution or Nuisance?</title><link>https://slott56.github.io/2010_08_09-end_user_programming_solution_or_nuisance.html</link><description>&lt;p&gt;The question of &amp;quot;customization&amp;quot; and &amp;quot;extension&amp;quot; is a common one. For
example, &amp;quot;non-technical users to be able to extend with simple scripts&amp;quot;.&lt;/p&gt;
&lt;p&gt;Read this question on Stack Overflow: &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/3410958/programming-scripting-language-aimed-at-non-technical-people"&gt;Programming / scripting
language aimed at non-technical
people&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;This is -- at best -- little more than an attractive nuisance. At
worst, of course, it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 09 Aug 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-08-09:/2010_08_09-end_user_programming_solution_or_nuisance.html</guid><category>Technologies</category><category>complexity</category><category>software process improvement</category><category>#python</category></item><item><title>Scrum Made Difficult</title><link>https://slott56.github.io/2010_07_22-scrum_made_difficult.html</link><description>&lt;p&gt;Here's a great post called &amp;quot;&lt;a class="reference external" href="http://www.mountaingoatsoftware.com/system/article/file/11/ScrumSmells.pdf?1267552461"&gt;Toward a Catalog of Scrum
Smells&lt;/a&gt;&amp;quot;.
This lists some &amp;quot;Management Smells&amp;quot;: specifically doing clumsy,
ineffective things and calling it &amp;quot;Scrum&amp;quot;.&lt;/p&gt;
&lt;p&gt;I found this in StackOverflow question, titled &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/3293691/any-stories-where-trying-to-apply-scrum-went-wrong"&gt;Any stories where
trying to apply Scrum went
wrong?&lt;/a&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;Another great answer was a link to &amp;quot;&lt;a class="reference external" href="http://www.informit.com/articles/article.aspx?p=1392832"&gt;Scrummerfall: World's …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Jul 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-07-22:/2010_07_22-scrum_made_difficult.html</guid><category>Technologies</category><category>software process improvement</category><category>scrum</category></item><item><title>Complexity and Simplicity</title><link>https://slott56.github.io/2010_07_12-complexity_and_simplicity.html</link><description>&lt;p&gt;Here's an interesting -- and common -- question.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;... any tools that I could use to create a web scraper that I could
use to interact with a .aspx website?&lt;/blockquote&gt;
&lt;p&gt;I want to build a tool that will read an input file (e.g. an excel
spreadsheet) containing a list of property parcel …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Jul 2010 21:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-07-12:/2010_07_12-complexity_and_simplicity.html</guid><category>Technologies</category><category>#python</category><category>Web Services</category><category>software design</category></item><item><title>Finding Simplicity</title><link>https://slott56.github.io/2010_07_01-finding_simplicity.html</link><description>&lt;p&gt;In Creating Complexity Where None Existed, I noted that it's possible to
create complexity out of thin air.&lt;/p&gt;
&lt;p&gt;Indeed, by wallowing in the supposed drama, one can turn the
differences between sales and service delivery into a hopelessly
complex situation. A focus on a manufactured &amp;quot;conflict&amp;quot; leads to the
following …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Jul 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-07-01:/2010_07_01-finding_simplicity.html</guid><category>Technologies</category><category>software process improvement</category><category>software design</category><category>analysis</category></item><item><title>Creating Complexity Where None Existed</title><link>https://slott56.github.io/2010_06_29-creating_complexity_where_none_existed.html</link><description>&lt;p&gt;I read a 482-word treatise that amounted to these four words &amp;quot;sales and
delivery disagree&amp;quot;.&lt;/p&gt;
&lt;p&gt;A more useful summary is &amp;quot;Sales and Delivery have different views of
the order&amp;quot;.&lt;/p&gt;
&lt;p&gt;It started out calling the standard sales-delivery differences a
&amp;quot;Conflict&amp;quot; requiring &amp;quot;Resolution&amp;quot;. The description was so
hopelessly enmeshed in the conflict …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Jun 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-29:/2010_06_29-creating_complexity_where_none_existed.html</guid><category>Technologies</category><category>complexity</category><category>software process improvement</category><category>use case</category></item><item><title>If only architectures were this simple</title><link>https://slott56.github.io/2010_06_25-if_only_architectures_were_this_simple.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://xkcd.com/730/"&gt;http://xkcd.com/730/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I almost wet myself. This is so typical.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 25 Jun 2010 06:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-25:/2010_06_25-if_only_architectures_were_this_simple.html</guid><category>Architecture &amp; Design</category><category>complexity</category><category>API Design</category><category>architecture</category></item><item><title>TDD and Python</title><link>https://slott56.github.io/2010_06_25-tdd_and_python.html</link><description>&lt;p&gt;First, let me say that
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Test-driven_development"&gt;TDD&lt;/a&gt; rocks.&lt;/p&gt;
&lt;p&gt;Few things are as much fun as (1) writing a test script for a
feature, and then (2) debugging the feature incrementally until it
passes the test. It's fun because a great deal of hand-wringing and
over-thinking is taken off the table.&lt;/p&gt;
&lt;p&gt;To …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 25 Jun 2010 05:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-25:/2010_06_25-tdd_and_python.html</guid><category>Technologies</category><category>RDBMS</category><category>#python</category><category>tdd</category></item><item><title>Adobe's Feckless Updater</title><link>https://slott56.github.io/2010_06_16-adobes_feckless_updater.html</link><description>&lt;a class="reference external image-reference" href="https://slott56.github.io/media/feckless.jpg"&gt;&lt;img alt="Adobe Error Dialog Box" id="blogger-photo-id-5482434982200131154" src="https://slott56.github.io/media/feckless.jpg" /&gt;&lt;/a&gt;
&lt;p&gt;Consider this dialog box.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The application was modified.&lt;/li&gt;
&lt;li&gt;It can't be updated.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Why not just replace it? Replacing a modified application seems to be
a perfectly sensible use case.&lt;/p&gt;
&lt;p&gt;But no, rather than doing something useful, it shows a dialog box. I
guess no one thought through this use case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Jun 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-16:/2010_06_16-adobes_feckless_updater.html</guid><category>Technologies</category><category>use case</category></item><item><title>Sales Person with Principles</title><link>https://slott56.github.io/2010_06_14-sales_person_with_principles.html</link><description>&lt;p&gt;My MacBook has an 80Gb drive with less than 2Gb available. A few times
I've totally filled the disk and had to spend time judiciously searching
and removing old files. Sigh.&lt;/p&gt;
&lt;p&gt;I have (and use) external hard drives, but it seems to violate some
kind of &amp;quot;laptop&amp;quot; principle to be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 14 Jun 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-14:/2010_06_14-sales_person_with_principles.html</guid><category>Technologies</category><category>apple</category><category>retail</category></item><item><title>Sagan-esque Data Volumes</title><link>https://slott56.github.io/2010_06_11-sagan_esque_data_volumes.html</link><description>&lt;p&gt;About once a week a question shows up on &lt;a class="reference external" href="http://stackoverflow.com/"&gt;Stack
Overflow&lt;/a&gt; that involves loading a database
with truly epic volumes of data. For example &amp;quot;billions of rows in a
single table for a month&amp;quot;.&lt;/p&gt;
&lt;p&gt;Billions of rows per month is a minimum insert rate of 385 row &lt;em&gt;per
second&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Also …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 11 Jun 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-11:/2010_06_11-sagan_esque_data_volumes.html</guid><category>Technologies</category><category>design</category><category>architecture</category></item><item><title>The Users Just Want "Search" -- What's So Hard?</title><link>https://slott56.github.io/2010_06_09-the_users_just_want_search_whats_so_hard.html</link><description>&lt;p&gt;Great article on &amp;quot;Search&amp;quot; from back in '08 in Forbes. &amp;quot;&lt;a class="reference external" href="http://www.forbes.com/2008/09/19/cio-enterprise-search-tech-cio-cx_dw_0922search.html"&gt;Why Google Isn't
Enough&lt;/a&gt;&amp;quot;,
by Dan Woods. He's talking about &amp;quot;Enterprise Search&amp;quot;: why in-house
Google-style search is really hard and often unsatisfying.&lt;/p&gt;
&lt;p&gt;Here's the cool quote.&lt;/p&gt;
&lt;blockquote&gt;
enterprise search systems also index and navigate information that
may reside in databases, content …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 09 Jun 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-06-09:/2010_06_09-the_users_just_want_search_whats_so_hard.html</guid><category>Technologies</category><category>dimensional data</category><category>database design</category></item><item><title>Python in the News</title><link>https://slott56.github.io/2010_05_21-python_in_the_news.html</link><description>&lt;p&gt;Making the rounds: &lt;a class="reference external" href="http://stackp.online.fr/?p=28"&gt;Droopy: easy file
receiving&lt;/a&gt;. Apparently, there were
some widely-read blog posts about this. Google &amp;quot;Droopy: A Tiny Web
Server That Makes Receiving Files a Snap&amp;quot; to see the buzz.&lt;/p&gt;
&lt;p&gt;The point here is that 750 lines of Python code can go a long way.
It's a complete …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 May 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-05-21:/2010_05_21-python_in_the_news.html</guid><category>Technologies</category><category>#python</category></item><item><title>Technology Adoption and the "No"-gates</title><link>https://slott56.github.io/2010_05_19-technology_adoption_and_the_no_gates.html</link><description>&lt;p&gt;Let's say you've found some new, good way to do business.&lt;/p&gt;
&lt;p&gt;JSON, for example. Or Agile Methods in general. Or TDD specifically.
Or use of an ORM.&lt;/p&gt;
&lt;p&gt;You read up on it. You build a spike solution to show that it's more
efficient.&lt;/p&gt;
&lt;div class="section" id="the-first-no-gate"&gt;
&lt;h2&gt;The First No-Gate&lt;/h2&gt;
&lt;p&gt;You make The Essential …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 19 May 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-05-19:/2010_05_19-technology_adoption_and_the_no_gates.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>A Limit to Reuse</title><link>https://slott56.github.io/2010_05_10-a_limit_to_reuse.html</link><description>&lt;p&gt;We do a lot of bulk loads. A lot.&lt;/p&gt;
&lt;p&gt;So many that we have some standard ETL-like modules for generic
&amp;quot;Validate&amp;quot;, &amp;quot;Load&amp;quot;, &amp;quot;Load_Dimension&amp;quot;, &amp;quot;Load_Fact&amp;quot; and those sorts of
obvious patterns.&lt;/p&gt;
&lt;p&gt;Mostly our business processes amount to a &amp;quot;dimensional conformance
and fact load&amp;quot;, followed by extracts, followed by a different
&amp;quot;dimensional …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 10 May 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-05-10:/2010_05_10-a_limit_to_reuse.html</guid><category>Technologies</category><category>#python</category><category>dimensional data</category><category>database design</category><category>refactoring</category></item><item><title>Functional Programming Goodness -- Python to the Rescue</title><link>https://slott56.github.io/2010_05_07-functional_programming_goodness_python_to_the_rescue.html</link><description>&lt;p&gt;Here's the situation.&lt;/p&gt;
&lt;p&gt;A vendor sent us three separate files which need to be merged.
70,000+ records each. They're CSV files, so column &lt;em&gt;position&lt;/em&gt; doesn't
much matter. The column &lt;em&gt;name&lt;/em&gt; (in row 1) is what matters.&lt;/p&gt;
&lt;p&gt;I looked at three solutions. Two of which are merely OK. The third …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 May 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-05-07:/2010_05_07-functional_programming_goodness_python_to_the_rescue.html</guid><category>Technologies</category><category>#python</category><category>threads</category><category>functional programming</category></item><item><title>Goodhart's Law and Numerosity</title><link>https://slott56.github.io/2010_05_05-goodharts_law_and_numerosity.html</link><description>&lt;p&gt;They say &amp;quot;&lt;a class="reference external" href="http://management.about.com/od/metrics/a/Measure2Manage.htm"&gt;You Can't Manage What You Don't
Measure&lt;/a&gt;&amp;quot;.
This isn't quite right, however. You can measure lots of things you
can't manage. Rainfall, for example. Software development is like that.
You can measure stuff that you can't actually control.&lt;/p&gt;
&lt;p&gt;The original
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/W._Edwards_Deming"&gt;Deming&lt;/a&gt; quotes
are more subtle: there are things …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 05 May 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-05-05:/2010_05_05-goodharts_law_and_numerosity.html</guid><category>Technologies</category><category>software process improvement</category><category>numerosity</category></item><item><title>NULL Confusion</title><link>https://slott56.github.io/2010_04_29-null_confusion.html</link><description>&lt;p&gt;The SQL database offers a domain-independent NULL value. This is a
terrible thing, and should be treated with a depth of respect and fear.&lt;/p&gt;
&lt;p&gt;Before using NULL values in a database, read things like &amp;quot;&lt;a class="reference external" href="http://www.springerlink.com/content/m774708n21277205/"&gt;Null
Values in Fuzzy
Datasets&lt;/a&gt;&amp;quot;
and &amp;quot;&lt;a class="reference external" href="http://www.springerlink.com/content/lmvekd0xj0r54rq6/"&gt;Null Values Revisited in Prospect of Data
Integration&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;See this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-29:/2010_04_29-null_confusion.html</guid><category>Technologies</category><category>design</category></item><item><title>Yet More Praise for Unit Tests</title><link>https://slott56.github.io/2010_04_27-yet_more_praise_for_unit_tests.html</link><description>&lt;p&gt;I can't say enough good things about TDD.&lt;/p&gt;
&lt;p&gt;But I'll try.&lt;/p&gt;
&lt;p&gt;Due to an epic failure to read the documentation
(&lt;a class="reference external" href="http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives#WSGIPassAuthorization"&gt;this&lt;/a&gt;,
specifically) I couldn't get our RESTful web services to work in
Apache.&lt;/p&gt;
&lt;p&gt;The entire application system has pretty good test coverage. I use
the Python
&lt;a class="reference external" href="http://docs.python.org/library/unittest.html"&gt;unittest&lt;/a&gt; to do
integration …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Apr 2010 07:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-27:/2010_04_27-yet_more_praise_for_unit_tests.html</guid><category>Architecture &amp; Design</category><category>unit testing</category><category>tdd</category></item><item><title>REST and HTTP Digest Authentication</title><link>https://slott56.github.io/2010_04_23-rest_and_http_digest_authentication.html</link><description>&lt;p&gt;It seems so simple: use the HTTP Digest Authorization with the Quality
of Protection set to &amp;quot;auth&amp;quot;.&lt;/p&gt;
&lt;p&gt;It's an easy algorithm. A nonce that encodes a timestamp can be used
to be sure no one is attempting to cache credentials. It's
potentially very, very nice.&lt;/p&gt;
&lt;p&gt;Except for one thing: Apache …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 23 Apr 2010 13:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-23:/2010_04_23-rest_and_http_digest_authentication.html</guid><category>Technologies</category><category>#python</category><category>architecture</category><category>Apache</category><category>WebServices</category><category>REST</category></item><item><title>Working Definitions of Complexity</title><link>https://slott56.github.io/2010_04_20-working_definitions_of_complexity.html</link><description>&lt;p&gt;Software developers get so used to their Culture of Complexity, they
hardly notice it.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.scottberkun.com/blog/2007/asshole-driven-development"&gt;Asshole-Driven Development&lt;/a&gt;
for more thoughts on this. The comments add lots and lots of examples
of dysfunctional development. Many of these are additional examples
of complexity run amok.&lt;/p&gt;
&lt;p&gt;My personal addition is Next Year's Dollars …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-20:/2010_04_20-working_definitions_of_complexity.html</guid><category>Technologies</category><category>complexity</category><category>software process improvement</category></item><item><title>Ways to Complicate Use Case Analysis</title><link>https://slott56.github.io/2010_04_13-ways_to_complicate_use_case_analysis.html</link><description>&lt;p&gt;I sat through a great use case analysis session recently.&lt;/p&gt;
&lt;p&gt;&amp;quot;Great&amp;quot; because I saw lots of ways to derail a simple process.
Eventually, we did identify a couple of actors and a couple of use
cases. But it took hours and hours.&lt;/p&gt;
&lt;p&gt;Bonus: this was the third go-round on these …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Apr 2010 09:52:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-13:/2010_04_13-ways_to_complicate_use_case_analysis.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Learning Styles -- The Astonishment Response</title><link>https://slott56.github.io/2010_04_12-learning_styles_the_astonishment_response.html</link><description>&lt;p&gt;We're not really talking about &amp;quot;&lt;a class="reference external" href="http://www.ldpride.net/learningstyles.MI.htm#Learning%20Styles%20Explained"&gt;Learning
Styles&lt;/a&gt;&amp;quot;
as much as &amp;quot;Denial Styles&amp;quot;. This is a list of responses to
&amp;quot;Astonishment&amp;quot; I've seen.&lt;/p&gt;
&lt;p&gt;We're not talking about the Kübler-Ross model of grief, although this
is similar.&lt;/p&gt;
&lt;p&gt;However, the response to astonishment isn't a &amp;quot;progression&amp;quot; toward
acceptance. Some folks simply don't like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-12:/2010_04_12-learning_styles_the_astonishment_response.html</guid><category>Technologies</category><category>software process improvement</category><category>learning</category><category>architecture</category></item><item><title>iPad Thoughts -- Fashion Accessory?</title><link>https://slott56.github.io/2010_04_09-ipad_thoughts_fashion_accessory.html</link><description>&lt;p&gt;From a Blog that's inside a company's firewall, so this had to be
heavily edited.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;The instant ON is a relief. The full page touch screen works just
like on the iPhone - only better. Web pages look great..
Photographs and Movies are fabulous. The screen resolution is
fantastic. Sharing pictures …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-09:/2010_04_09-ipad_thoughts_fashion_accessory.html</guid><category>Technologies</category><category>innovation</category><category>iPad</category></item><item><title>Fancy Literate Programming</title><link>https://slott56.github.io/2010_04_07-fancy_literate_programming.html</link><description>&lt;p&gt;My bias is toward &amp;quot;printable&amp;quot; documents. I like the idea of an HTML
document that is directly printable. I've used tools like &lt;a class="reference external" href="https://xhtmlrenderer.dev.java.net/"&gt;Flying
Saucer&lt;/a&gt; (and appropriate CSS) to
guarantee printability.&lt;/p&gt;
&lt;p&gt;I like using &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReStructured Text&lt;/a&gt; to create HTML
and LaTeX that match precisely.&lt;/p&gt;
&lt;p&gt;When I think of Literate Programming, I'm …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-07:/2010_04_07-fancy_literate_programming.html</guid><category>Technologies</category><category>literate programming</category></item><item><title>Dumb Info Security</title><link>https://slott56.github.io/2010_04_05-dumb_info_security.html</link><description>&lt;p&gt;A truly great question came up the other day.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Why change passwords every 90 days? What is the threat scenario
countered by that policy?&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Of course strong password policy means constantly changing passwords.
Right?&lt;/p&gt;
&lt;p&gt;Then I started to think about it. What -- actually -- does a password
change protect you against …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 05 Apr 2010 15:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-05:/2010_04_05-dumb_info_security.html</guid><category>Technologies</category><category>security</category></item><item><title>Getting Started Creating Web Pages</title><link>https://slott56.github.io/2010_04_05-getting_started_creating_web_pages.html</link><description>&lt;p&gt;Got this question recently.&lt;/p&gt;
&lt;blockquote&gt;
I’m looking for an HTML editor that fits into my price range (free
of course). I don’t need to do anything fancy, just vanilla HTML
to run on an Apache server ..., and maybe some PHP down the line.
Can you recommend any open source …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 05 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-05:/2010_04_05-getting_started_creating_web_pages.html</guid><category>Technologies</category><category>RST</category><category>PHP</category><category>Django</category><category>#python</category><category>HTML</category></item><item><title>The Final Design Review</title><link>https://slott56.github.io/2010_04_01-the_final_design_review.html</link><description>&lt;p&gt;Today, we're reviewing the final and only code in the application. It's
just that simple. We'll start with the data model.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
CREATE TABLE STUFF(
    COLUMN1 TEXT,
    COLUMN2 TEXT,
    COLUMN3 TEXT
    );
&lt;/pre&gt;
&lt;p&gt;As you can see from the enclosed table design, we have generalized
the general triple-store to make it more general …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Apr 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-04-01:/2010_04_01-the_final_design_review.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>software process improvement</category></item><item><title>Programming in the Large -- Multicore Goodness</title><link>https://slott56.github.io/2010_03_31-programming_in_the_large_multicore_goodness.html</link><description>&lt;p&gt;The lowly shell (bash, zsh, csh, the whole bunch) is usually a
dreadful programming environment. Perfectly awful. With some care,
you can easily architect applications so that you don't really need
the shell for very much.&lt;/p&gt;
&lt;p&gt;However, there is a precious nugget of goodness within the shell's
programming language. The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 31 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-31:/2010_03_31-programming_in_the_large_multicore_goodness.html</guid><category>Technologies</category><category>performance</category><category>Programming Languages</category><category>architecture</category></item><item><title>Building Skill Books -- Google Group</title><link>https://slott56.github.io/2010_03_25-building_skill_books_google_group.html</link><description>&lt;p&gt;The readers of the Building Skills Books have a number of needs:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;A way to post errors and corrections. I get a &lt;em&gt;lot&lt;/em&gt; of these.
Thanks!&lt;/li&gt;
&lt;li&gt;A way to share comments and questions. I get a fair number of
these.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A Google Group seems to be the best approach. We …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-25:/2010_03_25-building_skill_books_google_group.html</guid><category>Technologies</category><category>building skills books</category></item><item><title>Architecture Change: Breaking Conway's Law</title><link>https://slott56.github.io/2010_03_23-architecture_change_breaking_conways_law.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2010_03_22-architecture_change_recognizing_conways_law.html"&gt;Architecture Change: Recognizing Conway's
Law&lt;/a&gt;
we looked at the profound influence Conway's Law has on architecture.&lt;/p&gt;
&lt;p&gt;Recently I've looked at two gutsy declarations that an architecture
was broken. One recognized that a three-tiered architecture was too
complex for their needs. The other recognized that the Ontology tools
weren't performing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Mar 2010 10:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-23:/2010_03_23-architecture_change_breaking_conways_law.html</guid><category>Technologies</category><category>software process improvement</category><category>architecture</category><category>conway's law</category></item><item><title>Architecture Change: Recognizing Conway's Law</title><link>https://slott56.github.io/2010_03_22-architecture_change_recognizing_conways_law.html</link><description>&lt;p&gt;I've got lots of examples of places where Conway's Law has turned a
good idea into a poor implementation. A classic is a data warehouse
where there were three project managers, so they broke things up
three ways, leading to a crazy mess of dumb duplication.&lt;/p&gt;
&lt;p&gt;Countering that, I've recently …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 22 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-22:/2010_03_22-architecture_change_recognizing_conways_law.html</guid><category>Technologies</category><category>software process improvement</category><category>architecture</category><category>conway's law</category></item><item><title>Obsolescence</title><link>https://slott56.github.io/2010_03_20-obsolescence.html</link><description>&lt;p&gt;My old Citizen Pro-Master watch died. It needs batteries. It's a dive
watch, so it also needs to be opened by professionals, have the gaskets
replaced, and get pressure tested to be sure it works.&lt;/p&gt;
&lt;p&gt;I tried sending it to the Citizen Watch Service facility in
Dallas. Their &lt;a class="reference external" href="http://www.citizenwatchserv.com/?id=1"&gt;web site …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 20 Mar 2010 11:03:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-20:/2010_03_20-obsolescence.html</guid><category>Technologies</category><category>HTML</category><category>search optimization</category></item><item><title>Security Vulnerabilities</title><link>https://slott56.github.io/2010_03_19-security_vulnerabilities.html</link><description>&lt;p&gt;I lean on the OWASP list heavily.
&lt;a class="reference external" href="http://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project"&gt;http://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This analysis is handy also:
&lt;a class="reference external" href="http://www.cenzic.com/downloads/Cenzic_AppSecTrends_Q1-Q2-2009.pdf"&gt;http://www.cenzic.com/downloads/Cenzic_AppSecTrends_Q1-Q2-2009.pdf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The point is that most of the vulnerabilities are pretty clear.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Injection flaws: SQL, OS, and LDAP injection. Pretty clear that
building SQL …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 19 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-19:/2010_03_19-security_vulnerabilities.html</guid><category>Technologies</category><category>security</category></item><item><title>COBOL File Processing in Python (really)</title><link>https://slott56.github.io/2010_03_17-cobol_file_processing_in_python_really.html</link><description>&lt;p&gt;Years ago (6? 7?) I did some data profiling in Python.&lt;/p&gt;
&lt;p&gt;This required reading COBOL files with Python code.&lt;/p&gt;
&lt;p&gt;Superficially, this is not really very hard.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Python slice syntax will pick fields on of the record. For
example: data[12:14].&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;#.  Python codecs will convert from EBCDIC to Unicode without …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 17 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-17:/2010_03_17-cobol_file_processing_in_python_really.html</guid><category>Technologies</category><category>open source</category><category>COBOL</category><category>#python</category></item><item><title>How do I use all my cores?</title><link>https://slott56.github.io/2010_03_15-how_do_i_use_all_my_cores.html</link><description>&lt;p&gt;News Flash: Multi-core programming is &amp;quot;hard&amp;quot;. EVERYBODY PANIC.&lt;/p&gt;
&lt;p&gt;ZOMFG: We either need new tools, new languages or both! Right Now!&lt;/p&gt;
&lt;p&gt;Here's one example. You can find others. &amp;quot;&lt;a class="reference external" href="http://chipdesignmag.com/sld/blog/2009/03/27/taming-the-multicore-beast/"&gt;Taming the Multicore
Beast&lt;/a&gt;&amp;quot;:&lt;/p&gt;
&lt;blockquote&gt;
The next piece is application software, and most of the code that
has been written in the past has …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 15 Mar 2010 08:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-15:/2010_03_15-how_do_i_use_all_my_cores.html</guid><category>Technologies</category><category>performance</category><category>architecture</category></item><item><title>Literate Programming</title><link>https://slott56.github.io/2010_03_14-literate_programming.html</link><description>&lt;p&gt;About a decade ago, I discovered the concept of Literate Programming.
It's seductive. The idea is to write elegant documentation that embeds
the actual working code.&lt;/p&gt;
&lt;p&gt;For tricky, complex, high-visibility components, a literate
programming approach can give people confidence that the software
actually works as advertised.&lt;/p&gt;
&lt;p&gt;I actually wrote my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 14 Mar 2010 12:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-14:/2010_03_14-literate_programming.html</guid><category>Technologies</category><category>open source</category><category>#python</category><category>literate programming</category></item><item><title>Great Lies: "Design" vs. "Construction"</title><link>https://slott56.github.io/2010_03_11-great_lies_design_vs_construction.html</link><description>&lt;p&gt;In reflecting on Architecture, I realized that there are some profound
differences between &amp;quot;real&amp;quot; architecture and software architecture.&lt;/p&gt;
&lt;p&gt;One of the biggest differences is design.&lt;/p&gt;
&lt;p&gt;In the earliest days, software was built by very small groups of very
bright people. Alan Turing, Brian Kernighan, Dennis Ritchie, Steve
Bourne, Ken Thompson …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 11 Mar 2010 11:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-11:/2010_03_11-great_lies_design_vs_construction.html</guid><category>Technologies</category><category>software process improvement</category><category>project management</category><category>architecture</category></item><item><title>I see why you were confused</title><link>https://slott56.github.io/2010_03_09-i_see_why_you_were_confused.html</link><description>&lt;p&gt;Got a nice email about &lt;em&gt;architecture&lt;/em&gt; -- but the wrong kind.&lt;/p&gt;
&lt;p&gt;It was about physical structures, not software.&lt;/p&gt;
&lt;p&gt;It is a &amp;quot;bucket-list&amp;quot; of buildings one simply &lt;em&gt;must&lt;/em&gt; see. &lt;a class="reference external" href="http://constructionmanagementdegree.org/?page_id=459"&gt;100
Amazing Buildings Every Architecture Buff Should
See&lt;/a&gt;. A cool
list to have handy.&lt;/p&gt;
&lt;p&gt;I know bupkes about buildings. I've lived in them …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Mar 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-09:/2010_03_09-i_see_why_you_were_confused.html</guid><category>Technologies</category><category>design</category><category>architecture</category></item><item><title>Fun</title><link>https://slott56.github.io/2010_03_07-fun.html</link><description>&lt;p&gt;XKCD - &lt;a class="reference external" href="http://xkcd.com/710/"&gt;http://xkcd.com/710/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Collatz_conjecture#Syracuse_function"&gt;http://en.wikipedia.org/wiki/Collatz_conjecture#Syracuse_function&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I remember learning about this as an undergrad at Syracuse University
in the 70's and didn't think much of it. It was just &amp;quot;one of those
things&amp;quot; that I heard about, and perhaps wrote a homework assignment
in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 07 Mar 2010 17:28:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-07:/2010_03_07-fun.html</guid><category>Technologies</category><category>#python</category></item><item><title>The Web is my ESB, but it's slow...</title><link>https://slott56.github.io/2010_03_01-the_web_is_my_esb_but_its_slow.html</link><description>&lt;p&gt;Transaction design seems to be really hard for some people. The
transactions they build seem to based on some crazy assumptions. The
problem is that benchmarking is hard because you have to build enough
stuff to get a meaningful benchmark. Everyone thinks your done when
really, all you did was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 01 Mar 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-03-01:/2010_03_01-the_web_is_my_esb_but_its_slow.html</guid><category>Technologies</category><category>architecture</category></item><item><title>Numerosity -- More Metrics without Meaning</title><link>https://slott56.github.io/2010_02_23-numerosity_more_metrics_without_meaning.html</link><description>&lt;p&gt;Common Complaint: &amp;quot;&lt;em&gt;This was the nth time that someone was up in arms
that [X] was broken ... PL/SQL that ... has one function that is over
1,500 lines of [code].&lt;/em&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;Not a good solution: &amp;quot;&lt;em&gt;Find someway to measure &amp;quot;yucky code&amp;quot;.&lt;/em&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;Continuing down a path of relatively low value, the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Feb 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-23:/2010_02_23-numerosity_more_metrics_without_meaning.html</guid><category>Technologies</category><category>software process improvement</category><category>numerosity</category><category>project management</category></item><item><title>Information Technology -- It's all about Decision-Making</title><link>https://slott56.github.io/2010_02_19-information_technology_its_all_about_decision_making.html</link><description>&lt;p&gt;Check this SD Times article out: &lt;a class="reference external" href="http://www.sdtimes.com/link/34139"&gt;Future of data analysis lies in tools
for humans, not automatic
systems&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Andreas Weigend... said that “data is only worth as much as the
decisions made based on that data.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;This is the entire point of IT: &lt;strong&gt;IT Systems Support
Decision-Making&lt;/strong&gt;. The job is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 19 Feb 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-19:/2010_02_19-information_technology_its_all_about_decision_making.html</guid><category>Technologies</category><category>dimensional data</category><category>database design</category></item><item><title>Enterprise Applications (Revised)</title><link>https://slott56.github.io/2010_02_17-enterprise_applications_revised.html</link><description>&lt;p&gt;Enterprise Applications really make people sweat. Look at this selection
of StackOverflow questions. There are hundreds. People really get worked
into a lather over this.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/161991/what-makes-an-application-an-enterprise-or-enterprise-level-application"&gt;What makes an application an “enterprise” or “enterprise-level” application?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/349924/is-the-lamp-stack-appropriate-for-enterprise-use"&gt;Is the LAMP stack appropriate for Enterprise use?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/464514/what-is-enterprise-ready-can-we-test-for-it"&gt;What is “Enterprise ready”? Can we test for …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 17 Feb 2010 15:59:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-17:/2010_02_17-enterprise_applications_revised.html</guid><category>Technologies</category><category>#python</category></item><item><title>Layers of Management == Layers of Veto</title><link>https://slott56.github.io/2010_02_12-layers_of_management_layers_of_veto.html</link><description>&lt;p&gt;In an organization with more than one layer of management, the default
answer must be &amp;quot;no&amp;quot;. Folks get needlessly frustrated by this. But it's a
logical consequence of multiple layers of management.&lt;/p&gt;
&lt;p&gt;Consider that direction must come &lt;em&gt;down&lt;/em&gt; from above. If you're
suggesting something &lt;em&gt;up&lt;/em&gt; to your manager (or in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 12 Feb 2010 15:36:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-12:/2010_02_12-layers_of_management_layers_of_veto.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Controlling the Message</title><link>https://slott56.github.io/2010_02_09-controlling_the_message.html</link><description>&lt;p&gt;I finally figured out what is so bad about folks who need to &amp;quot;control
the message.&amp;quot;&lt;/p&gt;
&lt;p&gt;Architecture is as much politics as technology. And some folks think
that political spin and message control is required. I think it's a
mistake because the urge to control the message points up a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Feb 2010 06:50:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-09:/2010_02_09-controlling_the_message.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>ALM Tools</title><link>https://slott56.github.io/2010_02_04-alm_tools.html</link><description>&lt;p&gt;There's a Special Report in the January 15 SDTimes with a headline that
bothers me -- a lot. In the print edition, it's called &amp;quot;Can ALM tame the
agile beast?&amp;quot;. Online it's &lt;a class="reference external" href="http://www.sdtimes.com/ALM_TOOLS_EVOLVE_IN_FACE_OF_AGILE_PROCESSES/By_Jeff_Feinman/About_AGILE_and_ALM/34058"&gt;ALM Tools Evolve in the Face of Agile
Processes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The online title makes a lot more sense than the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Feb 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-04:/2010_02_04-alm_tools.html</guid><category>Technologies</category><category>software process improvement</category><category>configuration management</category><category>agile</category></item><item><title>Project Narrative Arc -- Is there a "middle"?</title><link>https://slott56.github.io/2010_02_01-project_narrative_arc_is_there_a_middle.html</link><description>&lt;p&gt;See Paul Glen's opinion piece on &lt;a class="reference external" href="http://www.computerworld.com/s/article/346443/Projects_and_the_Ungrounded_Middle"&gt;Projects and the Ungrounded
Middle&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There's a subtle issue here that bothers me. It's the phony narrative
arc imposed on a project.&lt;/p&gt;
&lt;p&gt;Glen says that &amp;quot;managers talk about beginnings and endings&amp;quot;. This is
a -- potentially -- phony narrative arc we're told to wrap around a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 01 Feb 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-02-01:/2010_02_01-project_narrative_arc_is_there_a_middle.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Aristotle's Poetics and Project Management</title><link>https://slott56.github.io/2010_01_28-aristotles_poetics_and_project_management.html</link><description>&lt;p&gt;It can be a fatal mistake to impose a story arc on a project.&lt;/p&gt;
&lt;p&gt;Aristotle's
&lt;a class="reference external" href="http://classics.mit.edu/Aristotle/poetics.html"&gt;Poetics&lt;/a&gt; is a
commentary on drama, in which he identified two story arcs that are
sure-fire hits: Big Man Brought Down, and Small Man Lifted Up. These
are the standard &amp;quot;Change in Fortune&amp;quot; story lines …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Jan 2010 08:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-28:/2010_01_28-aristotles_poetics_and_project_management.html</guid><category>Technologies</category><category>software process improvement</category><category>project management</category></item><item><title>Map-Reduce, Python and Named Tuples</title><link>https://slott56.github.io/2010_01_25-map_reduce_python_and_named_tuples.html</link><description>&lt;p&gt;A year and change back, I wrote this on &amp;quot;&lt;a class="reference external" href="http://homepage.mac.com/s_lott/iblog/architecture/C551260341/E20081005191603/index.html"&gt;Exploratory
Programming&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;p&gt;It turns out that it was a mistake. While the subclass-expansion
technique is a cool way to bang out a program incrementally, in the
long run, the subclassing is ill-advised.&lt;/p&gt;
&lt;p&gt;The more I look at Python generator functions and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 25 Jan 2010 07:44:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-25:/2010_01_25-map_reduce_python_and_named_tuples.html</guid><category>Technologies</category><category>map-reduce</category><category>#python</category></item><item><title>Exacting Definitions</title><link>https://slott56.github.io/2010_01_21-exacting_definitions.html</link><description>&lt;p&gt;Interesting comments to &lt;a class="reference external" href="https://slott56.github.io/2010_01_21-splitting_meta_hairs.html"&gt;Splitting
Meta-Hairs&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Terms like Scripting, Interpreted and Dynamic are &lt;em&gt;not&lt;/em&gt; &amp;quot;marketing
terms&amp;quot;. New, Improved, All Natural, Visual, Groovy, Lucid, etc., are
marketing terms. I regret giving the impression that one should &amp;quot;not
to spend time trying to get definitions that are exacting&amp;quot;. One
absolutely &lt;em&gt;must&lt;/em&gt; get definitions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 Jan 2010 11:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-21:/2010_01_21-exacting_definitions.html</guid><category>Technologies</category><category>#python</category><category>interpreted</category><category>scripted</category></item><item><title>Splitting Meta-Hairs</title><link>https://slott56.github.io/2010_01_21-splitting_meta_hairs.html</link><description>&lt;p&gt;Recently, I've been involved in some hair-splitting over the nature of
Python.&lt;/p&gt;
&lt;p&gt;I've described it as &amp;quot;interpreted&amp;quot;, &amp;quot;scripting&amp;quot; and &amp;quot;dynamic&amp;quot;, all of
which seem to be true, but yet each seems to lead to a standard --
and pointless -- dispute.&lt;/p&gt;
&lt;div class="section" id="yes-but-no"&gt;
&lt;h2&gt;Yes but No&lt;/h2&gt;
&lt;p&gt;Some folks object to &amp;quot;interpreted&amp;quot;. They feel a …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 Jan 2010 09:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-21:/2010_01_21-splitting_meta_hairs.html</guid><category>Technologies</category><category>#python</category><category>interpreted</category><category>scripted</category></item><item><title>The Secret Architect's Cabal</title><link>https://slott56.github.io/2010_01_16-the_secret_architects_cabal.html</link><description>&lt;p&gt;Recently, I had two very weird &amp;quot;meta&amp;quot; questions on the subject of OO
design.&lt;/p&gt;
&lt;p&gt;They bother me because they imply that some Brother or Sister
Architect has let slip the presence of the Secret Technologies that
we Architects are hiding from the Hoi Polloi developers.&lt;/p&gt;
&lt;p&gt;These are the real questions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 16 Jan 2010 07:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-16:/2010_01_16-the_secret_architects_cabal.html</guid><category>Technologies</category><category>object-oriented design</category></item><item><title>FW: Eight Things Business Hates About IT</title><link>https://slott56.github.io/2010_01_12-fw_eight_things_business_hates_about_it.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.cioinsight.com/c/a/IT-Management/8-Things-Business-Hates-About-IT-791460/?kc=CIOMINUTE01082010CIO1"&gt;Eight Things Business Hates About IT. Plus eight things IT hates about
business.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I suppose.&lt;/p&gt;
&lt;p&gt;While there are 8 things identified, they seem to boil down to 2
things to fix: Replace bureaucratic with Agile; replace Keep The
Lights On Management with any other way of budgeting.&lt;/p&gt;
&lt;p&gt;While Agility is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Jan 2010 09:38:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-12:/2010_01_12-fw_eight_things_business_hates_about_it.html</guid><category>Technologies</category><category>management</category><category>innovation</category><category>agile</category></item><item><title>Map Reduce -- How Cool is that?</title><link>https://slott56.github.io/2010_01_10-map_reduce_how_cool_is_that.html</link><description>&lt;p&gt;From time-to-time I hear a few mentions of MapReduce; up until recently,
I avoided looking into it.&lt;/p&gt;
&lt;p&gt;This month's &lt;a class="reference external" href="http://cacm.acm.org/magazines/2010/1"&gt;CACM&lt;/a&gt;,
however, is chock-full of MapReduce goodness.&lt;/p&gt;
&lt;p&gt;After reading some of the articles, I decided to look a little more
closely at that approach to handling large datasets.&lt;/p&gt;
&lt;div class="section" id="python-implementation"&gt;
&lt;h2&gt;Python Implementation&lt;/h2&gt;
&lt;p&gt;Map-Reduce …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 10 Jan 2010 12:57:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-10:/2010_01_10-map_reduce_how_cool_is_that.html</guid><category>Technologies</category><category>map-reduce</category><category>#python</category><category>software design</category></item><item><title>Fossil and SQLite</title><link>https://slott56.github.io/2010_01_03-fossil_and_sqlite.html</link><description>&lt;p&gt;Interesting thoughts:
&lt;a class="reference external" href="http://nedbatchelder.com/blog/201001/d_richard_hipps_software_universe.html"&gt;http://nedbatchelder.com/blog/201001/d_richard_hipps_software_universe.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I use SQLite heavily. Time to look into Fossil.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 03 Jan 2010 18:53:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-03:/2010_01_03-fossil_and_sqlite.html</guid><category>Technologies</category><category>Fossil</category><category>SQLite</category></item><item><title>Building Skills in Object-Oriented Design</title><link>https://slott56.github.io/2010_01_02-building_skills_in_object_oriented_design.html</link><description>&lt;p&gt;Completely revised &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/oodesign.html"&gt;Building Skills in Object-Oriented
Design&lt;/a&gt;. Cleaned
up many of the exercises to make them simpler and more sensible to the
n00b designer.&lt;/p&gt;
&lt;p&gt;Also, to make it easier to follow, I made use of the Sphinx
&amp;quot;ifconfig&amp;quot; feature to separate the text into two parallel editions: a
Python edition …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Jan 2010 11:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-02:/2010_01_02-building_skills_in_object_oriented_design.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category><category>building skills books</category><category>java</category></item><item><title>Python Book -- Thanks for the Bug Reports</title><link>https://slott56.github.io/2010_01_02-python_book_thanks_for_the_bug_reports.html</link><description>&lt;p&gt;I made some fundamental changes to the text processing pipeline. I think
I've corrected all of the typographical and production problems. (Plus,
I fixed some content errors, too.)&lt;/p&gt;
&lt;p&gt;I've republished the &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python.html"&gt;Building Skills in
Python&lt;/a&gt;, both
&lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python/html/index.html"&gt;HTML&lt;/a&gt;
and
&lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python/BuildingSkillsinPython.pdf"&gt;PDF&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Hopefully, this is considerably better and more usable.&lt;/p&gt;
&lt;p&gt;Next step -- revising …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Jan 2010 11:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-02:/2010_01_02-python_book_thanks_for_the_bug_reports.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>Python Book -- Version 2.6</title><link>https://slott56.github.io/2010_01_02-python_book_version_26.html</link><description>&lt;p&gt;Completely revised the &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python.html"&gt;Building Skills in
Python&lt;/a&gt; book.&lt;/p&gt;
&lt;p&gt;It now covers Python 2.6 and is much, must easier to maintain in
&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReStructured Text&lt;/a&gt;
markup, formatted with &lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt; and
&lt;a class="reference external" href="http://www.latex-project.org/"&gt;LaTeX&lt;/a&gt; (via
&lt;a class="reference external" href="http://www.tug.org/texlive/"&gt;TeXLive&lt;/a&gt;) than it was in XML.&lt;/p&gt;
&lt;p&gt;XML -- while modern and clean and uniform -- isn't as convenient as
LaTeX and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Jan 2010 11:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-02:/2010_01_02-python_book_version_26.html</guid><category>Technologies</category><category>RST</category><category>sphinx</category><category>xml</category><category>LaTeX</category><category>texlive</category><category>building skills books</category></item><item><title>Building Skills in Programming</title><link>https://slott56.github.io/2010_01_02-building_skills_in_programming.html</link><description>&lt;p&gt;I've updated &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/nonprogrammer.html#book-nonprogrammer"&gt;Building Skills in
Programming&lt;/a&gt;
-- an introduction to programming for non-programmers.&lt;/p&gt;
&lt;p&gt;The entire thing was redone in
&lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;RST&lt;/a&gt; and
&lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;, leading to an easier-to-read,
more colorful layout. The cross-references are generally better and
more complete. I also get Sphinx's indexing and search capabilities.&lt;/p&gt;
&lt;p&gt;Everything was touched, chapters were added …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Jan 2010 11:13:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2010-01-02:/2010_01_02-building_skills_in_programming.html</guid><category>Technologies</category><category>#python</category><category>building skills books</category></item><item><title>The Data Cartel and "Users"</title><link>https://slott56.github.io/2009_12_26-the_data_cartel_and_users.html</link><description>&lt;p&gt;I work with a CIO who calls the DBA's &amp;quot;The Data Cartel&amp;quot;. They control
the data. Working with some DBA's always seems to turn into hostage
negotiation sessions.&lt;/p&gt;
&lt;p&gt;The worst problems seem to arise when we get out of the DBA comfort
zone and start to talk about how the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 26 Dec 2009 10:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-12-26:/2009_12_26-the_data_cartel_and_users.html</guid><category>Technologies</category><category>database administration</category><category>database design</category></item><item><title>The Problem with Software Development is...</title><link>https://slott56.github.io/2009_12_15-the_problem_with_software_development_is.html</link><description>&lt;p&gt;Folks like to say that there's a &amp;quot;Software Crisis&amp;quot;. We can't build
software quickly enough, cheaply enough or well enough.&lt;/p&gt;
&lt;p&gt;I agree with EWD -- software is really very, very complex. See &lt;a class="reference external" href="http://www.cs.utexas.edu/users/EWD/transcriptions/EWD03xx/EWD316.2.html"&gt;EWD
316&lt;/a&gt;
for more justification of this position.&lt;/p&gt;
&lt;p&gt;Is my conclusion is that the cost of software stems from …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Dec 2009 14:19:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-12-15:/2009_12_15-the_problem_with_software_development_is.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Mutability Analysis</title><link>https://slott56.github.io/2009_12_09-mutability_analysis.html</link><description>&lt;p&gt;First, there are several tiers of mutability in requirements. These
tiers define typical levels of change context of the problem, the
problem itself and the forces that select a solution to the problem.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Natural Laws&lt;/strong&gt; (i.e., Gravity, Natural Selection). As well as
metaphysical &amp;quot;laws&amp;quot; (i.e., reality). These don't …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 09 Dec 2009 07:29:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-12-09:/2009_12_09-mutability_analysis.html</guid><category>Technologies</category><category>object-oriented design</category></item><item><title>The King Cnut School of Management</title><link>https://slott56.github.io/2009_12_03-the_king_cnut_school_of_management.html</link><description>&lt;p&gt;See this story of &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Cnut_the_Great#Ruler_of_the_waves"&gt;King Cnut ruling the
waves&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The King Cnut School of Management is management by fiat. Declaring
it so.&lt;/p&gt;
&lt;p&gt;PM: &amp;quot;When will this transition to production?&amp;quot;&lt;/p&gt;
&lt;p&gt;Me: &amp;quot;After the firewall and VM configuration.&amp;quot;&lt;/p&gt;
&lt;p&gt;PM: &amp;quot;So, can we say Thursday?&amp;quot;&lt;/p&gt;
&lt;p&gt;Me: &amp;quot;You can say that, if you want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Dec 2009 07:16:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-12-03:/2009_12_03-the_king_cnut_school_of_management.html</guid><category>Technologies</category><category>project management</category></item><item><title>Standard "Distributed" Database Issues</title><link>https://slott56.github.io/2009_11_24-standard_distributed_database_issues.html</link><description>&lt;p&gt;Here's a quote &amp;quot;standard issues associated w/ a disitributed db&amp;quot;. And
&amp;quot;There is the push versus pull of data. Say you use push and...&amp;quot; and
more stuff after that.&lt;/p&gt;
&lt;p&gt;First, by &amp;quot;Distributed Database&amp;quot;, the question could mean almost
anything. However, they provide the specific example of Oracle's
Multi-Master Replication. That …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 24 Nov 2009 21:43:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-24:/2009_11_24-standard_distributed_database_issues.html</guid><category>Technologies</category><category>architecture</category><category>software design</category><category>ESB</category><category>SOA</category></item><item><title>ORM magic</title><link>https://slott56.github.io/2009_11_16-orm_magic.html</link><description>&lt;p&gt;The ORM layer is magic, right?&lt;/p&gt;
&lt;p&gt;The ORM layer &amp;quot;hides&amp;quot; the database, right?&lt;/p&gt;
&lt;p&gt;We &lt;em&gt;never&lt;/em&gt; have to think about persistence, right? It just magically
&amp;quot;happens.&amp;quot;&lt;/p&gt;
&lt;p&gt;Wrong.&lt;/p&gt;
&lt;p&gt;Here's some quotes from a recent email:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Somehow people are surprised that we would have performance issues.
Somehow people are surprised that now that …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 16 Nov 2009 23:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-16:/2009_11_16-orm_magic.html</guid><category>Technologies</category><category>performance</category><category>ORM</category></item><item><title>Another HTML Cleanup</title><link>https://slott56.github.io/2009_11_10-another_html_cleanup.html</link><description>&lt;p&gt;Browsers are required to skip over bad HTML and render something.&lt;/p&gt;
&lt;p&gt;Consequently, many web sites have significant HTML errors that don't
show up until you try to scrape their content.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful Soup&lt;/a&gt;
has a handy hook for doing &lt;a class="reference external" href="http://www.crummy.com/software/BeautifulSoup/documentation.html#Sanitizing%20Bad%20Data%20with%20Regexps"&gt;markup
massage&lt;/a&gt;
prior to parsing. This is a way of fixing site-specific …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Nov 2009 06:28:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-10:/2009_11_10-another_html_cleanup.html</guid><category>Technologies</category><category>HTML</category><category>#python</category><category>beautiful soup</category></item><item><title>BBEdit Configuration</title><link>https://slott56.github.io/2009_11_06-bbedit_configuration.html</link><description>&lt;p&gt;After installing Python 2.6 in Mac OS X, I had problems with BBEdit not
finding the right version of Python. It kept running an old 2.5 version.&lt;/p&gt;
&lt;p&gt;I finally tracked down the BBEdit documentation,
&lt;a class="reference external" href="http://pine.barebones.com/manual/BBEdit_9_User_Manual.pdf"&gt;http://pine.barebones.com/manual/BBEdit_9_User_Manual.pdf&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Found this: &amp;quot;BBEdit expects to find Python …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 06 Nov 2009 10:07:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-06:/2009_11_06-bbedit_configuration.html</guid><category>Technologies</category><category>macosx</category><category>#python</category><category>bbedit</category></item><item><title>Parsing HTML from Microsoft Products (Like Front Page, etc.)</title><link>https://slott56.github.io/2009_11_06-parsing_html_from_microsoft_products_like_front_page_etc.html</link><description>&lt;p&gt;Ugh. When you try to parse MS-generated HTML, you find some extension
syntax that is completely befuddling.&lt;/p&gt;
&lt;p&gt;I've tried a few things in the past, none were particularly good.&lt;/p&gt;
&lt;p&gt;In reading a file recently, I found that even &lt;a class="reference external" href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful
Soup&lt;/a&gt; was unable to
prettify or parse it.&lt;/p&gt;
&lt;p&gt;The document was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 06 Nov 2009 09:53:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-06:/2009_11_06-parsing_html_from_microsoft_products_like_front_page_etc.html</guid><category>Technologies</category><category>HTML</category><category>#python</category><category>beautiful soup</category></item><item><title>Stored Procedures and Ad Hominem Arguments</title><link>https://slott56.github.io/2009_11_05-stored_procedures_and_ad_hominem_arguments.html</link><description>&lt;p&gt;The question of &amp;quot;Stored Procedures and Triggers&amp;quot; comes up fairly
frequently.&lt;/p&gt;
&lt;p&gt;Over the years (since the 90's, when stored procedures were
introduced to Oracle) I've learned precisely how awful a mistake this
technology is.&lt;/p&gt;
&lt;p&gt;I've seen numerous problems that have stored procedures as their root
cause. I'll identify just a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 05 Nov 2009 21:07:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-05:/2009_11_05-stored_procedures_and_ad_hominem_arguments.html</guid><category>Technologies</category><category>stored procedures</category><category>architecture</category><category>database design</category><category>triggers</category></item><item><title>Open Source in the News</title><link>https://slott56.github.io/2009_11_04-open_source_in_the_news.html</link><description>&lt;p&gt;Whitehouse.gov is publicly using open source tools.&lt;/p&gt;
&lt;p&gt;See Boing Boing blog
&lt;a class="reference external" href="http://www.boingboing.net/2009/10/27/the-white-house-swit.html"&gt;entry&lt;/a&gt;.
Plus Huffington Post blog
&lt;a class="reference external" href="http://www.huffingtonpost.com/huff-wires/20091024/us-obama-web-site/"&gt;entry&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Most importantly, read
&lt;a class="reference external" href="http://radar.oreilly.com/2009/10/whitehouse-switch-drupal-opensource.html"&gt;this&lt;/a&gt;
from O'Reilly.&lt;/p&gt;
&lt;p&gt;Many places are using open source in stealth mode. Some even deny it.
Ask your CIO what the policy on open source is, then check to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 04 Nov 2009 08:14:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-11-04:/2009_11_04-open_source_in_the_news.html</guid><category>Technologies</category><category>open source</category></item><item><title>Painful Python Import Lessons</title><link>https://slott56.github.io/2009_10_30-painful_python_import_lessons.html</link><description>&lt;p&gt;Python's packages and modules are -- generally -- quite elegant.&lt;/p&gt;
&lt;p&gt;They're relatively easy to manage. The &lt;tt class="docutils literal"&gt;__init__.py&lt;/tt&gt; file (to make a
module into a package) is very elegant. And stuff can be put into the
&lt;tt class="docutils literal"&gt;__init__.py&lt;/tt&gt; file to create a kind of top-level or header module in a
larger package …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 30 Oct 2009 09:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-30:/2009_10_30-painful_python_import_lessons.html</guid><category>Technologies</category><category>Django</category><category>#python</category><category>module</category><category>package</category></item><item><title>Process Not Working -- Must Have More Process</title><link>https://slott56.github.io/2009_10_27-process_not_working_must_have_more_process.html</link><description>&lt;p&gt;After all, programmers are all lazy and stupid.&lt;/p&gt;
&lt;p&gt;Got his complaint recently.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Developers on a fairly routine basis check in code into the wrong
branch.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;Followed by a common form of the lazy and stupid complaint.
&amp;quot;Someone should think about which branch is used for what and
when.&amp;quot; Clearly &amp;quot;someone …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Oct 2009 11:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-27:/2009_10_27-process_not_working_must_have_more_process.html</guid><category>Technologies</category><category>configuration management</category><category>agile</category><category>architecture</category></item><item><title>Breaking into Agile</title><link>https://slott56.github.io/2009_10_22-breaking_into_agile.html</link><description>&lt;p&gt;I had a recent conversation with some folks who were desperate to
&amp;quot;processize&amp;quot; everything. They were asking about Scrum Master
certification and what standards organizations define the &amp;quot;official&amp;quot;
Scrum method.&lt;/p&gt;
&lt;p&gt;Interestingly, I also saw a cool column in Better Software magazine,
called
&amp;quot;&lt;a class="reference external" href="http://stickyminds.com/BetterSoftware/magazine.asp?fn=citoc"&gt;Scrumdamentalism&lt;/a&gt;&amp;quot;
on the same basic question.&lt;/p&gt;
&lt;p&gt;In my …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Oct 2009 21:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-22:/2009_10_22-breaking_into_agile.html</guid><category>Technologies</category><category>scrum</category><category>agile</category></item><item><title>Django Capacity Planning -- Reading the Meta Model</title><link>https://slott56.github.io/2009_10_16-django_capacity_planning_reading_the_meta_model.html</link><description>&lt;p&gt;I find that some people spend way too much time doing &amp;quot;meta&amp;quot;
programming. I prefer to use someone's framework rather than (a)
write my own or (b) extend theirs. I prefer to learn their features
(and quirks).&lt;/p&gt;
&lt;p&gt;Having disclaimed an interest in meta programming, I do have to
participate in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 16 Oct 2009 14:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-16:/2009_10_16-django_capacity_planning_reading_the_meta_model.html</guid><category>Technologies</category><category>Django</category><category>database design</category><category>capacity planning</category></item><item><title>Unit Testing in C</title><link>https://slott56.github.io/2009_10_14-unit_testing_in_c.html</link><description>&lt;p&gt;I haven't written new C code since the turn of the millennium. Since
then it's been almost all Java and Python. Along with Java and Python
come JUnit and Python's unittest module.&lt;/p&gt;
&lt;p&gt;I've grown completely dependent on unit testing.&lt;/p&gt;
&lt;p&gt;I'm looking at some C code, and I want a unit …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Oct 2009 11:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-14:/2009_10_14-unit_testing_in_c.html</guid><category>Technologies</category><category>unit testing</category><category>C</category><category>#python</category><category>tdd</category><category>java</category><category>JUnit</category></item><item><title>Sometimes the universe appears multidimensional -- but isn't</title><link>https://slott56.github.io/2009_10_12-sometimes_the_universe_appears_multidimensional_but_isnt.html</link><description>&lt;p&gt;Had a knock-down drag-out fight with another architect recently over
&amp;quot;status&amp;quot; and &amp;quot;priority&amp;quot;.&lt;/p&gt;
&lt;p&gt;She claimed that the backlog priority and the status where the same
thing. I claimed that you can easily have this.&lt;/p&gt;
&lt;p&gt;Priority: 1, Status: Not Started&lt;/p&gt;
&lt;p&gt;Priority: 2, Status: In Process&lt;/p&gt;
&lt;p&gt;Priority: 3, Status: Completed&lt;/p&gt;
&lt;p&gt;See? It's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Oct 2009 18:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-12:/2009_10_12-sometimes_the_universe_appears_multidimensional_but_isnt.html</guid><category>Technologies</category><category>star-schema</category><category>dimensional data</category><category>database design</category></item><item><title>Flattening Nested Lists -- You're Doing It Wrong</title><link>https://slott56.github.io/2009_10_07-flattening_nested_lists_youre_doing_it_wrong.html</link><description>&lt;p&gt;On StackOverflow you can read numerous questions on &amp;quot;flattening&amp;quot; nested
lists in Python.&lt;/p&gt;
&lt;p&gt;They all have a similar form.&lt;/p&gt;
&lt;p&gt;&amp;quot;How do I flatten this list &lt;tt class="docutils literal"&gt;[ [ 1, 2, 3 ], [ 4, 5, 6 ], ... , [ 98, 99, 100 ] ]&lt;/tt&gt;?&amp;quot;&lt;/p&gt;
&lt;p&gt;The answers include list comprehensions, itertools, and other clever
variants.&lt;/p&gt;
&lt;p&gt;[STRIKEOUT:All] Much of which is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Oct 2009 10:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-07:/2009_10_07-flattening_nested_lists_youre_doing_it_wrong.html</guid><category>Technologies</category><category>#python</category></item><item><title>Code Kata : Analyze A Hard Drive</title><link>https://slott56.github.io/2009_10_05-code_kata_analyze_a_hard_drive.html</link><description>&lt;p&gt;This isn't computer forensics; it's something much simpler.&lt;/p&gt;
&lt;p&gt;A colleague has been struck down with a disease (or won the lottery)
and won't be back to work any time soon. Worse, they did not use SVN
to do daily check-ins. Their laptop has the latest and greatest. As
well as …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 05 Oct 2009 07:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-05:/2009_10_05-code_kata_analyze_a_hard_drive.html</guid><category>Technologies</category><category>code-kata</category></item><item><title>Agile Methods and "Total Cost"</title><link>https://slott56.github.io/2009_10_03-agile_methods_and_total_cost.html</link><description>&lt;p&gt;Many folks ask about Agile project planning and total cost. As our
internal project managers wrestle with this, there are a lot of
questions.&lt;/p&gt;
&lt;p&gt;Mostly these questions are rejections of incremental delivery (&amp;quot;All
or Nothing&amp;quot;) or rejections of flexibility (&amp;quot;Total Total Cost&amp;quot;). We'll
look at these rejections in detail.&lt;/p&gt;
&lt;p&gt;Traditional …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 03 Oct 2009 07:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-03:/2009_10_03-agile_methods_and_total_cost.html</guid><category>Technologies</category><category>COCOMO</category><category>TCO</category><category>agile</category><category>estimating</category></item><item><title>Agile Project Management</title><link>https://slott56.github.io/2009_10_01-agile_project_management.html</link><description>&lt;p&gt;Got this question recently.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Any suggestions on PM tools that meet the following
considerations&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Planning&lt;/li&gt;
&lt;li&gt;Estimating&lt;/li&gt;
&lt;li&gt;Tracking (allowing both PM input and developer input)&lt;/li&gt;
&lt;li&gt;Reporting&lt;/li&gt;
&lt;li&gt;Support both Agile and Waterfall projects&lt;/li&gt;
&lt;li&gt;Releases&lt;/li&gt;
&lt;li&gt;Bug fixes (probably just another type of backlog)&amp;quot;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Agile PM requires far less planning than you're used to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Oct 2009 09:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-01:/2009_10_01-agile_project_management.html</guid><category>Technologies</category><category>software process improvement</category><category>agile</category><category>project management</category></item><item><title>Duct Tape Programmers</title><link>https://slott56.github.io/2009_10_01-duct_tape_programmers.html</link><description>&lt;p&gt;See Joel On Software: &lt;a class="reference external" href="http://www.joelonsoftware.com/items/2009/09/23.html"&gt;The Duct Tape
Programmer&lt;/a&gt;: he
lauds the programmer who gets stuff done with &amp;quot;duct tape and WD-40&amp;quot;.&lt;/p&gt;
&lt;p&gt;Here's why: &amp;quot;Shipping is a feature. A really important feature. Your
product must have it.&amp;quot;&lt;/p&gt;
&lt;p&gt;Dave Drake sent the link along with the following:&lt;/p&gt;
&lt;p&gt;This &amp;quot;speaks of coding for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Oct 2009 09:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-10-01:/2009_10_01-duct_tape_programmers.html</guid><category>Technologies</category><category>software process improvement</category><category>tdd</category></item><item><title>Code Kata : Parse USPS ZIP3 table</title><link>https://slott56.github.io/2009_09_23-code_kata_parse_usps_zip3_table.html</link><description>&lt;div class="section" id="situation"&gt;
&lt;h2&gt;Situation&lt;/h2&gt;
&lt;p&gt;The USPS ZIP codes have a multi-part structure. The first three
digits are a prefix that defines a sectional center facility.&lt;/p&gt;
&lt;p&gt;The USPS table L005 3-Digit ZIP Code Prefix Groups—SCF Sortation
maps clusters of ZIP3 prefixes to Facility and State codes. The
following URL has this table.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://pe.usps.gov/text/DMM300/L005.htm"&gt;http …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 Sep 2009 20:49:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-23:/2009_09_23-code_kata_parse_usps_zip3_table.html</guid><category>Technologies</category><category>code-kata</category></item><item><title>Code Kata : Merge Changes</title><link>https://slott56.github.io/2009_09_23-code_kata_merge_changes.html</link><description>&lt;div class="section" id="the-situation"&gt;
&lt;h2&gt;The Situation&lt;/h2&gt;
&lt;p&gt;A co-worker has mistakenly cloned a directory tree rather than link
to it. Then they made some number of changes to files in that
directory.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="your-job"&gt;
&lt;h2&gt;Your Job&lt;/h2&gt;
&lt;p&gt;Your job is to compute a directory-level difference between an
official copy and the changes they made. Sadly, you can't trivially …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 Sep 2009 20:36:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-23:/2009_09_23-code_kata_merge_changes.html</guid><category>Technologies</category><category>code-kata</category></item><item><title>Innovation and Outsourcing</title><link>https://slott56.github.io/2009_09_20-innovation_and_outsourcing.html</link><description>&lt;p&gt;Good stuff in ComputerWorld: &lt;a class="reference external" href="http://www.computerworld.com/s/article/342303/Partnerships_Can_Go_Too_Far"&gt;Partnerships can Go Too
Far&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&amp;quot;Consider vendor innovation. As companies become large and
entrenched, they typically become more risk-averse and less creative,
often rejecting ideas that challenge conventional wisdom.&amp;quot;&lt;/p&gt;
&lt;p&gt;This is really only half the story.&lt;/p&gt;
&lt;div class="section" id="first-things-first"&gt;
&lt;h2&gt;First Things First&lt;/h2&gt;
&lt;p&gt;Programming is hard -- really hard. Read &lt;a class="reference external" href="http://www.cs.utexas.edu/users/EWD/transcriptions/EWD03xx/EWD316.2.html"&gt;EWD …&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 20 Sep 2009 08:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-20:/2009_09_20-innovation_and_outsourcing.html</guid><category>Technologies</category><category>innovation</category></item><item><title>Fedora 11 and Python 2.6</title><link>https://slott56.github.io/2009_09_16-fedora_11_and_python_26.html</link><description>&lt;p&gt;Upgraded a VM to Fedora 11 recently.&lt;/p&gt;
&lt;p&gt;This -- it turns out -- comes with Python 2.6 installed.&lt;/p&gt;
&lt;p&gt;It is, however, an incomplete build. To do anything, I had to install
a some additional Python packages. Specifically, the &amp;quot;libraries and
header files needed for Python development&amp;quot;. Also, IIRC, the tkinter
package …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Sep 2009 16:13:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-16:/2009_09_16-fedora_11_and_python_26.html</guid><category>Technologies</category><category>#python</category></item><item><title>The world is multidimensional? Really?</title><link>https://slott56.github.io/2009_09_15-the_world_is_multidimensional_really.html</link><description>&lt;p&gt;I cannot believe that people still consider top-down, uni-dimensional,
taxonomic hierarchies useful.&lt;/p&gt;
&lt;p&gt;This Stack Overflow question (&lt;a class="reference external" href="http://stackoverflow.com/questions/1402721/rest-how-to-create-a-resource-that-depends-on-three-or-more-resources-of-differe"&gt;REST: How to Create a Resource That
Depends on Three or More Resources of Different
Types?&lt;/a&gt;)
repeats an assumption. Essentially the confusion comes from assuming
that &amp;quot;URI's map directly to a hierarchy&amp;quot;.&lt;/p&gt;
&lt;p&gt;I think …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Sep 2009 11:33:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-15:/2009_09_15-the_world_is_multidimensional_really.html</guid><category>Technologies</category><category>dimensional data</category><category>database design</category><category>content management</category></item><item><title>Python in the News</title><link>https://slott56.github.io/2009_09_11-python_in_the_news.html</link><description>&lt;p&gt;See this in Boing Boing:
&lt;a class="reference external" href="http://www.boingboing.net/2009/09/11/hairy-type.html"&gt;http://www.boingboing.net/2009/09/11/hairy-type.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;They're talking about
&lt;a class="reference external" href="http://nodebox.net/code/index.php/Home"&gt;NodeBox&lt;/a&gt;, something I'd
never heard of before.&lt;/p&gt;
&lt;p&gt;&amp;quot;NodeBox is a Mac OS X application that lets you create 2D visuals
(static, animated or interactive) using Python programming code and
export them as a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 11 Sep 2009 20:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-11:/2009_09_11-python_in_the_news.html</guid><category>Technologies</category><category>#python</category></item><item><title>API Quality Check</title><link>https://slott56.github.io/2009_09_11-api_quality_check.html</link><description>&lt;p&gt;A recent request for an API quality check sent me into a paroxysm.&lt;/p&gt;
&lt;p&gt;The request seemed simple enough. They had two varieties of API
design: varietal &lt;strong&gt;M&lt;/strong&gt; had a lot of methods, each with relatively few
parameters. Varietal &lt;strong&gt;P&lt;/strong&gt; had a few methods, but each had a
boat-load of parameters …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 11 Sep 2009 20:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-11:/2009_09_11-api_quality_check.html</guid><category>Technologies</category><category>API Design</category></item><item><title>RDBMS Issues and Concerns</title><link>https://slott56.github.io/2009_09_08-rdbms_issues_and_concerns.html</link><description>&lt;p&gt;Check out this blog post:
&lt;a class="reference external" href="http://cacm.acm.org/browse-by-subject/data-storage-and-retrieval/32212-the-end-of-a-dbms-era-might-be-upon-us/fulltext"&gt;http://cacm.acm.org/browse-by-subject/data-storage-and-retrieval/32212-the-end-of-a-dbms-era-might-be-upon-us/fulltext&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The first issue is that the RDBMS code base in ancient. The second
issue is that we keep pushing the envelope on the RDBMS model;
examples include OLAP and RDF triple-stores.&lt;/p&gt;
&lt;p&gt;Some folks want to say &amp;quot;reports …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Sep 2009 15:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-08:/2009_09_08-rdbms_issues_and_concerns.html</guid><category>Technologies</category><category>RDBMS</category><category>SQL</category><category>COBOL</category></item><item><title>Macintosh Support</title><link>https://slott56.github.io/2009_09_04-macintosh_support.html</link><description>&lt;p&gt;A handy CNET review site: &lt;a class="reference external" href="http://reviews.cnet.com/macfixit/"&gt;http://reviews.cnet.com/macfixit/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 04 Sep 2009 07:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-09-04:/2009_09_04-macintosh_support.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>SQL Injection Attacks the Top Vulnerability</title><link>https://slott56.github.io/2009_08_30-sql_injection_attacks_the_top_vulnerability.html</link><description>&lt;p&gt;This is an amazing quote: &amp;quot;We see SQL injection as the top attack
technique on the Web&amp;quot;.&lt;/p&gt;
&lt;p&gt;See ComputerWorld's &lt;a class="reference external" href="http://www.computerworld.com/s/article/print/9136805/SQL_injection_attacks_led_to_Heartland_Hannaford_breaches_?taxonomyName=Security&amp;amp;taxonomyId=17"&gt;SQL Injection Attacks Lead to Heartland, Hannaford Breaches&lt;/a&gt;
for more on this topic.&lt;/p&gt;
&lt;p&gt;I'm amazed because SQL injection is entirely a preventable bug. Yet,
it's the top attack technique.&lt;/p&gt;
&lt;p&gt;That's an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 30 Aug 2009 08:33:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-30:/2009_08_30-sql_injection_attacks_the_top_vulnerability.html</guid><category>Technologies</category><category>security</category></item><item><title>Code Kata Resources (Updated)</title><link>https://slott56.github.io/2009_08_27-code_kata_resources_updated.html</link><description>&lt;p&gt;I've got a ton of exercises in the &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/index.html"&gt;Building
Skills&lt;/a&gt; books.
Specifically, my &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/oodesign.html#book-oodesign"&gt;OO
Design&lt;/a&gt;
book is based on my own personal Code Kata exercises.&lt;/p&gt;
&lt;p&gt;Plus there's the established Code Kata resources. The
&lt;a class="reference external" href="http://codekata.pragprog.com/"&gt;CodeKata&lt;/a&gt; page, Mark Needham's
blog posting on
&lt;a class="reference external" href="http://www.markhneedham.com/blog/tag/code-kata/"&gt;code-kata&lt;/a&gt;,
Rizky Farhan's &lt;a class="reference external" href="http://frizky.wikidot.com/projects:code-kata"&gt;Collection of Software
Projects&lt;/a&gt;,
jp.hamilton's &lt;a class="reference external" href="http://www.jphamilton.net/post/Coding-Dojo-and-Code-Kata-Resources.aspx"&gt;Code …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Aug 2009 08:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-27:/2009_08_27-code_kata_resources_updated.html</guid><category>Technologies</category><category>code-kata</category><category>software process improvement</category></item><item><title>Meetings</title><link>https://slott56.github.io/2009_08_26-meetings.html</link><description>&lt;p&gt;I found this note while cleaning up. I think it's a summary of John
Cleese's short movie &amp;quot;&lt;a class="reference external" href="http://www.imdb.com/title/tt0295434/"&gt;Meetings Bloody
Meetings&lt;/a&gt;&amp;quot;.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Plan&lt;/strong&gt;. Why are we meeting? What's the purpose? What are the
subjects?&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inform&lt;/strong&gt;. Tell the attendees what, why and the expected outcome.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Prepare&lt;/strong&gt;. Create an agenda, with a time line …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Aug 2009 22:33:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-26:/2009_08_26-meetings.html</guid><category>Technologies</category><category>agile</category><category>software process improvement</category><category>scrum</category></item><item><title>Building Skills Books Toolset (Update)</title><link>https://slott56.github.io/2009_08_20-building_skills_books_toolset_update.html</link><description>&lt;p&gt;I wrote the first &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/index.html"&gt;Building
Skills&lt;/a&gt; books using
&lt;a class="reference external" href="http://www.apple.com/support/appleworks/"&gt;Appleworks&lt;/a&gt;. It wasn't too
bad to organize the styles around basic semantics of the subject area.
It's an easy, productive writing environment. Except, of course, for
internal cross-references, indexes, and tables of contents.&lt;/p&gt;
&lt;p&gt;I converted to &lt;a class="reference external" href="http://www.docbook.org/"&gt;DocBook XML&lt;/a&gt; markup. The
conversion was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 20 Aug 2009 07:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-20:/2009_08_20-building_skills_books_toolset_update.html</guid><category>Technologies</category><category>pdf</category><category>RST</category><category>xml</category><category>LaTeX</category><category>xhtml</category></item><item><title>Code Dojo and OO Design -- OO Design Dojo</title><link>https://slott56.github.io/2009_08_14-code_dojo_and_oo_design_oo_design_dojo.html</link><description>&lt;p&gt;Code Dojo, to an extent, includes a fair amount of OO Design.&lt;/p&gt;
&lt;p&gt;I've been pondering ways to help folks who clearly have no design
skills at all. I've read their code. It's appalling.&lt;/p&gt;
&lt;p&gt;Toward that end, I looked at some of the Code Kata links: the
&lt;a class="reference external" href="http://codekata.pragprog.com/"&gt;CodeKata&lt;/a&gt; page, Mark Needham's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 14 Aug 2009 14:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-14:/2009_08_14-code_dojo_and_oo_design_oo_design_dojo.html</guid><category>Technologies</category><category>code-kata</category><category>object-oriented design</category></item><item><title>The E. W. Dijkstra Archive (Update)</title><link>https://slott56.github.io/2009_08_06-the_e_w_dijkstra_archive_update.html</link><description>&lt;p&gt;The &lt;a class="reference external" href="http://www.cs.utexas.edu/~EWD/welcome.html"&gt;E. W. Dijkstra&lt;/a&gt;
Archive is a collection of over 1,000 manuscripts that EWD sent around
during his career.&lt;/p&gt;
&lt;p&gt;This Stack Overflow question (&amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/1229611/explaining-software-development-to-management/1229660#1229660"&gt;explaining software development to
management&lt;/a&gt;&amp;quot;)
had a really brilliant comment on one of the answers.&lt;/p&gt;
&lt;blockquote&gt;
Analogies are always leaky, and you will end up with proposed …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Aug 2009 13:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-06:/2009_08_06-the_e_w_dijkstra_archive_update.html</guid><category>Technologies</category><category>software process improvement</category><category>object-oriented design</category><category>defensive programming</category></item><item><title>No Brown M&amp;M's -- A Brilliant Compliance Test</title><link>https://slott56.github.io/2009_08_06-no_brown_mms_a_brilliant_compliance_test.html</link><description>&lt;p&gt;My son's a musician, and one of the standard jokes boils down to the
phrase &amp;quot;no brown M&amp;amp;M's&amp;quot;. They use it as a catch-all phrase for people
being fussy to a level that's senseless.&lt;/p&gt;
&lt;p&gt;Then BoingBoing pointed me to the &lt;a class="reference external" href="http://www.snopes.com/music/artists/vanhalen.asp"&gt;Van Halen Brown
M&amp;amp;M&lt;/a&gt; story in
snopes.com …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 06 Aug 2009 09:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-06:/2009_08_06-no_brown_mms_a_brilliant_compliance_test.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Wishful Thinking -- An Accident Waiting To Happen</title><link>https://slott56.github.io/2009_08_03-wishful_thinking_an_accident_waiting_to_happen.html</link><description>&lt;p&gt;Some assumptions are really hard to identify as &amp;quot;assumptions&amp;quot;. Some
assumptions are more &amp;quot;wishful thinking&amp;quot; than &amp;quot;assumption&amp;quot;.&lt;/p&gt;
&lt;p&gt;We process a lot of spreadsheets. As far as I'm concerned, the
Spreadsheet User Interface (SUI) is a first-class part of any
application. Users understand them, and you don't have to code as …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 03 Aug 2009 07:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-08-03:/2009_08_03-wishful_thinking_an_accident_waiting_to_happen.html</guid><category>Technologies</category><category>agile</category><category>object-oriented design</category></item><item><title>Object Models and Relational Joins -- Endless Confusion</title><link>https://slott56.github.io/2009_07_31-object_models_and_relational_joins_endless_confusion.html</link><description>&lt;p&gt;Check out this list of questions from Stack Overflow: &lt;a class="reference external" href="http://stackoverflow.com/search?q=%5Bdjango%5D+join"&gt;[Django]
join&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;These are all folks trying to do joins or outer joins even though
they have objects fetched through the ORM.&lt;/p&gt;
&lt;p&gt;How does this confusion arise? Easy. Folks work with SQL as if the
relational world-view is Important and Universal …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 31 Jul 2009 07:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-31:/2009_07_31-object_models_and_relational_joins_endless_confusion.html</guid><category>Technologies</category><category>Django</category><category>#python</category><category>object-oriented design</category><category>SQL</category><category>ORM</category></item><item><title>Programming Language Popularity -- Update</title><link>https://slott56.github.io/2009_07_31-programming_language_popularity_update.html</link><description>&lt;p&gt;I used to rely on the TIOBE Software &lt;a class="reference external" href="http://www.tiobe.com/index.php/content/paperinfo/tpci/index.html"&gt;Programming Community
Index&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Today, I learned about the &lt;a class="reference external" href="http://www.langpop.com/"&gt;langpop&lt;/a&gt;
site. The context was following an SD Times blog posting on Haskell.
But I got distracted looking at language rankings and what it means
to consulting companies.&lt;/p&gt;
&lt;p&gt;[Until corrected, I was] particularly drawn …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 31 Jul 2009 06:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-31:/2009_07_31-programming_language_popularity_update.html</guid><category>Technologies</category><category>PHP</category><category>#python</category><category>java</category><category>C#</category><category>Programming Languages</category><category>VB</category></item><item><title>Python and UML</title><link>https://slott56.github.io/2009_07_27-python_and_uml.html</link><description>&lt;p&gt;Searched for this the other day. Came up empty. Clearly, didn't search
hard enough.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://stackoverflow.com/questions/1190854/automatically-generated-python-code-from-an-uml-diagram"&gt;Automatically Generated Python Code from an UML
diagram?&lt;/a&gt;
So far, there are three separate answers listing a total of five
separate products.&lt;/p&gt;
&lt;p&gt;I really want to annotate the UML with docstrings. If that was
supported, it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Jul 2009 18:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-27:/2009_07_27-python_and_uml.html</guid><category>Technologies</category><category>#python</category><category>UML</category></item><item><title>Privacy and Encryption</title><link>https://slott56.github.io/2009_07_25-privacy_and_encryption.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://cio.ulitzer.com/node/1046285"&gt;Massachusetts Says Encrypt It
All!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This gives a hint as to the future of personal information collection
and dissemination.&lt;/p&gt;
&lt;p&gt;This is potentially A Bad Thing.&lt;/p&gt;
&lt;p&gt;I don't see a problem with using SSL to encrypt &amp;quot;over the wire&amp;quot; data
transfers. I don't see a problem with adding layers of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 25 Jul 2009 07:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-25:/2009_07_25-privacy_and_encryption.html</guid><category>Technologies</category><category>encryption</category><category>security</category></item><item><title>Software Performance Improvement</title><link>https://slott56.github.io/2009_07_24-software_performance_improvement.html</link><description>&lt;p&gt;Yesterday, I looked at some marketing material on SPI (Software Process
Improvement). It was quite good. The approach was very pragmatic, the
deliverables very sound.&lt;/p&gt;
&lt;p&gt;The hard part is connecting with customers.&lt;/p&gt;
&lt;p&gt;I've only worked with a few customers who were actually interested in
process &lt;em&gt;improvement&lt;/em&gt;. I've worked with close …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 24 Jul 2009 09:49:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-24:/2009_07_24-software_performance_improvement.html</guid><category>Technologies</category><category>software process improvement</category></item><item><title>Java vs. PL/SQL</title><link>https://slott56.github.io/2009_07_24-java_vs_plsql.html</link><description>&lt;p&gt;Quite a while ago, I compared &lt;a class="reference external" href="http://homepage.mac.com/s_lott/iblog/architecture/C465799452/E20070527090758/index.html"&gt;Java and
PL/SQL&lt;/a&gt;
to gauge their relative performance.&lt;/p&gt;
&lt;p&gt;Recently (okay, back in mid-June) I got this request.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One thing I would like to compare is Java vs PL/SQL using native
compilation (search Oracle for NCOMP). Would you be willing to
repeat
your …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 24 Jul 2009 06:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-24:/2009_07_24-java_vs_plsql.html</guid><category>Technologies</category><category>PL/SQL</category><category>performance</category><category>java</category></item><item><title>XML Parsing</title><link>https://slott56.github.io/2009_07_23-xml_parsing.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://thomas.apestaart.org/log/?p=962"&gt;Python XML parsing&lt;/a&gt; and
&lt;a class="reference external" href="http://kaens.blogspot.com/2007/05/parsing-simple-xml-files-in-python.html"&gt;Parsing simple XML files in python using
etree&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Originally, I used
&lt;a class="reference external" href="http://docs.python.org/library/xml.sax.html"&gt;SAX&lt;/a&gt; -- but built
DOM objects with it. I moved from application-specific DOM's to
generic DOM's.&lt;/p&gt;
&lt;p&gt;Then I switched to the
&lt;a class="reference external" href="http://docs.python.org/library/xml.dom.minidom.html"&gt;miniDOM&lt;/a&gt;
parser. It gave me structures I could walk with a pleasant
&lt;strong&gt;Visitor&lt;/strong&gt; design …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Jul 2009 20:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-23:/2009_07_23-xml_parsing.html</guid><category>Technologies</category><category>python</category><category>xml</category><category>lxml</category></item><item><title>Software Overdesign -- An Update</title><link>https://slott56.github.io/2009_07_23-software_overdesign_an_update.html</link><description>&lt;p&gt;Saw a horrifying design document recently. One that was at the &amp;quot;gouge
out my eyes&amp;quot; level of badness. That's one step below &amp;quot;drink until I
forget what I saw&amp;quot;, but one level above &amp;quot;beat the author with a tire
iron.&amp;quot;&lt;/p&gt;
&lt;p&gt;They were -- I'm guessing here -- trying to develop their own …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 23 Jul 2009 10:12:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-23:/2009_07_23-software_overdesign_an_update.html</guid><category>Technologies</category><category>RST</category><category>xml</category><category>DOM</category><category>UML</category></item><item><title>Flying Saucer</title><link>https://slott56.github.io/2009_07_11-flying_saucer.html</link><description>&lt;p&gt;The old code was 5700 lines of bad VB.
The new code is &lt;a class="reference external" href="http://velocity.apache.org/"&gt;Velocity&lt;/a&gt;, &lt;a class="reference external" href="https://xhtmlrenderer.dev.java.net/"&gt;Flying
Saucer&lt;/a&gt;,
&lt;a class="reference external" href="http://www.lowagie.com/iText/"&gt;iText&lt;/a&gt; and 120 lines of glue. The old
code will be replaced with perhaps 500 lines of XHTML-producing Velocity
templates.&lt;/p&gt;
&lt;p&gt;[The Flying Saucer site -- with the main menu on the right -- was
confusing at …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 11 Jul 2009 12:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-11:/2009_07_11-flying_saucer.html</guid><category>Technologies</category><category>pdf</category><category>css</category><category>xhtml</category><category>java</category></item><item><title>Architecture? We don't need no stinking architecture! (Update)</title><link>https://slott56.github.io/2009_07_08-architecture_we_dont_need_no_stinking_architecture_update.html</link><description>&lt;p&gt;Context: We're reverse engineering some bad VB application code.&lt;/p&gt;
&lt;p&gt;What I saw. &amp;quot;This problem report pushed this module over the 64k
limit for modules. Therefore all code used for XYZ has been removed
from this module and placed in the new bas module XYZ.&amp;quot;&lt;/p&gt;
&lt;p&gt;What I learned. Good design -- irrelevant …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Jul 2009 15:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-08:/2009_07_08-architecture_we_dont_need_no_stinking_architecture_update.html</guid><category>Technologies</category><category>VB</category><category>architecture</category></item><item><title>Test-Driven Reverse Engineering and Perniciously Bad Code</title><link>https://slott56.github.io/2009_07_06-test_driven_reverse_engineering_and_perniciously_bad_code.html</link><description>&lt;p&gt;I've done a fair amount of reverse engineering over the years.&lt;/p&gt;
&lt;p&gt;In the early days, you went from code to specification to new code.
It took forever and the problems you uncovered -- well -- they often
derailed the project.&lt;/p&gt;
&lt;p&gt;Recently, I used a TDD-like approach. Each piece of legacy code was …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 06 Jul 2009 15:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-07-06:/2009_07_06-test_driven_reverse_engineering_and_perniciously_bad_code.html</guid><category>Technologies</category><category>tdd</category><category>reverse engineering</category></item><item><title>It used to work... Now they've fixed it.</title><link>https://slott56.github.io/2009_06_29-it_used_to_work_now_theyve_fixed_it.html</link><description>&lt;p&gt;Apple's Time Capsule rocks.&lt;/p&gt;
&lt;p&gt;For a while the Airport Extreme Base Station (AEBS) -- with a disk
added -- would do the same thing. You got Time Capsule backups
seamlessly and continuously.&lt;/p&gt;
&lt;p&gt;No more. Version 7.4.2. fixed the &amp;quot;bug&amp;quot;. Now the AEBS no longer backs
up to a disk.&lt;/p&gt;
&lt;p&gt;They've …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 29 Jun 2009 20:52:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-29:/2009_06_29-it_used_to_work_now_theyve_fixed_it.html</guid><category>Technologies</category><category>macosx</category><category>apple</category><category>backups</category></item><item><title>Semantic Markup -- RST vs. XML</title><link>https://slott56.github.io/2009_06_24-semantic_markup_rst_vs_xml.html</link><description>&lt;p&gt;I have very mixed feelings about XML's usability.&lt;/p&gt;
&lt;p&gt;An avowed goal of the inventors of XML was &amp;quot;XML documents should be
human-legible and reasonably clear.&amp;quot; While I like to think that
&amp;quot;legible&amp;quot; means &lt;em&gt;usable&lt;/em&gt;, I'm feeling that legibility is really a
minimal standard; I think it's a polite way of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 24 Jun 2009 14:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-24:/2009_06_24-semantic_markup_rst_vs_xml.html</guid><category>Technologies</category><category>RST</category><category>sphinx</category><category>xml</category></item><item><title>Failure To Grasp Polymorphism</title><link>https://slott56.github.io/2009_06_20-failure_to_grasp_polymorphism.html</link><description>&lt;p&gt;I've cataloged a third specific case of fundamental failures to
understand polymorphism. The first two I've seen a fair number of times.
The third seems to be more rare.&lt;/p&gt;
&lt;p&gt;1. &amp;quot;How do I determine which subclass an object has?&amp;quot; The
Identification problem.&lt;/p&gt;
&lt;p&gt;2. &amp;quot;How do I morph an object to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 20 Jun 2009 08:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-20:/2009_06_20-failure_to_grasp_polymorphism.html</guid><category>Technologies</category><category>polymorphism</category><category>#python</category><category>object-oriented design</category></item><item><title>The First Number Sticks Forever</title><link>https://slott56.github.io/2009_06_19-the_first_number_sticks_forever.html</link><description>&lt;p&gt;Two months ago, we looked at some Data Warehouse design information.&lt;/p&gt;
&lt;p&gt;It looked like 8 months of work. It might be finished by year-end.
Fatal mistake: we gave a &amp;quot;number&amp;quot;. Year-end.&lt;/p&gt;
&lt;p&gt;We did due diligence, investigating source applications, data marts,
subject areas, etc. And, the client delayed their decision-making
process …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 19 Jun 2009 21:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-19:/2009_06_19-the_first_number_sticks_forever.html</guid><category>Technologies</category><category>agile</category><category>estimating</category></item><item><title>How to Derail Use Case Analysis: Focus on the Processes</title><link>https://slott56.github.io/2009_06_14-how_to_derail_use_case_analysis_focus_on_the_processes.html</link><description>&lt;p&gt;It's easy to prevent successful use case analysis: make it into an
exercise of defining lots of &amp;quot;processes&amp;quot; in excruciating detail.&lt;/p&gt;
&lt;p&gt;First, ignore all &amp;quot;objects&amp;quot; definition.  All business domain entities
-- and actors -- must be treating as second class artifacts.&lt;/p&gt;
&lt;p&gt;Second, define everything as a process.  A domain entity is just …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 14 Jun 2009 15:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-14:/2009_06_14-how_to_derail_use_case_analysis_focus_on_the_processes.html</guid><category>Technologies</category><category>analysis</category><category>use case</category></item><item><title>Agile Methods, Inversion of Control, Emergent Behavior</title><link>https://slott56.github.io/2009_06_10-agile_methods_inversion_of_control_emergent_behavior.html</link><description>&lt;p&gt;I've run in to some Agility questions recently.  Questions that indicate
that some people just don't like the Inversion of Control aspect of
Agile methods.&lt;/p&gt;
&lt;p&gt;We used to call IoC &amp;quot;Emergent Behavior&amp;quot;.  The system isn't designed
from top-down to fill specific use cases.  Instead, the system is
designed so that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 10 Jun 2009 09:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-10:/2009_06_10-agile_methods_inversion_of_control_emergent_behavior.html</guid><category>Technologies</category><category>agile</category></item><item><title>A "Don't Break the Build" Tip for Solo Python Developers</title><link>https://slott56.github.io/2009_06_08-a_dont_break_the_build_tip_for_solo_python_developers.html</link><description>&lt;p&gt;One of the Agile practices is &lt;a class="reference external" href="http://martinfowler.com/articles/continuousIntegration.html"&gt;Continuous
Integration&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Fowler suggests that everyone commits every day.  In &lt;a class="reference external" href="http://www.elssamadisy.com/books.html"&gt;Elssamadisy's
book&lt;/a&gt; includes specific advice
on why a daily check-in helps.&lt;/p&gt;
&lt;p&gt;Some folks call this the &amp;quot;Don't Break the Build&amp;quot; practice.&lt;/p&gt;
&lt;p&gt;But what does that mean for Python where there is no build?  And …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 08 Jun 2009 16:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-08:/2009_06_08-a_dont_break_the_build_tip_for_solo_python_developers.html</guid><category>Technologies</category><category>agile</category><category>#python</category><category>tdd</category></item><item><title>Devastating Design Changes -- An Agile Methods Story</title><link>https://slott56.github.io/2009_06_04-devastating_design_changes_an_agile_methods_story.html</link><description>&lt;p&gt;We have a design, we have code and we have tests that all pass.&lt;/p&gt;
&lt;p&gt;Tuesday, we got some new input data that just wouldn't work.&lt;/p&gt;
&lt;p&gt;What -- if anything -- went wrong?&lt;/p&gt;
&lt;p&gt;Agile is as Agile Does&lt;/p&gt;
&lt;p&gt;We're following an Agile approach for several reasons.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I'm too lazy to draw up an …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Jun 2009 09:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-04:/2009_06_04-devastating_design_changes_an_agile_methods_story.html</guid><category>Technologies</category><category>#python</category><category>csv</category><category>xlrd</category><category>agile</category></item><item><title>Think Once -- Code Twice</title><link>https://slott56.github.io/2009_06_02-think_once_code_twice.html</link><description>&lt;p&gt;Some thoughts for the day&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&amp;quot;Quick And Dirty == Guaranteed Rework&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;He Who Codes First Loses&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Think Once -- Code Twice&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Admin's Law: It's Always Permissions&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Programmer's Law: If it's not permissions, it's the path&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;If it seems hard, you're doing it wrong&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;One-Off == The First of Many&amp;quot;&lt;/li&gt;
&lt;li&gt;&amp;quot;Requirements Translation: Never == Rarely …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Jun 2009 12:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-06-02:/2009_06_02-think_once_code_twice.html</guid><category>Technologies</category><category>aphorism</category></item><item><title>Updates to Building Skills in Python</title><link>https://slott56.github.io/2009_05_28-updates_to_building_skills_in_python.html</link><description>&lt;p&gt;I got a bug report (back in April) about an exercise in &lt;a class="reference external" href="http://homepage.mac.com/s_lott/books/python.html"&gt;Building Skills
in Python&lt;/a&gt;.  It was
a change from 2.2 that I never validated in 2.5.   Thanks to my readers
for responding with questions and complaints.&lt;/p&gt;
&lt;p&gt;I've finally updated and posted the revisions.&lt;/p&gt;
&lt;p&gt;Further, after some …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 May 2009 10:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-28:/2009_05_28-updates_to_building_skills_in_python.html</guid><category>Technologies</category><category>#python</category></item><item><title>That's odd -- Python faster than Java</title><link>https://slott56.github.io/2009_05_27-thats_odd_python_faster_than_java.html</link><description>&lt;p&gt;Here's an amazing Stack Overflow
&lt;a class="reference external" href="http://stackoverflow.com/questions/918359/my-python-program-executes-faster-than-my-java-version-of-the-same-program-what"&gt;question&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The follow-up conversation is great stuff.&lt;/p&gt;
&lt;p&gt;The question shows two versions of approximately the same processing.
Python is faster than Java.  That's unexpected.&lt;/p&gt;
&lt;p&gt;Java has static compilation and the hot-spot translation to machine
code.  Apparently, Python has some optimizations that are just as
valuable …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 27 May 2009 20:43:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-27:/2009_05_27-thats_odd_python_faster_than_java.html</guid><category>Technologies</category><category>performance</category><category>#python</category><category>java</category></item><item><title>Semantic Markup with Docutils Interpreted Text Roles</title><link>https://slott56.github.io/2009_05_27-semantic_markup_with_docutils_interpreted_text_roles.html</link><description>&lt;p&gt;A resume is a slippery thing -- a package of semi-structured data.&lt;/p&gt;
&lt;p&gt;It has a kind of database-like feel to it, but there are so many
exceptions and special cases that the database never works out quite
the way you wanted.&lt;/p&gt;
&lt;p&gt;For example, I've got -- essentially -- one employer over the past …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 27 May 2009 12:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-27:/2009_05_27-semantic_markup_with_docutils_interpreted_text_roles.html</guid><category>Technologies</category><category>RST</category><category>#python</category><category>xml</category></item><item><title>ReStructured Text markup and Content Management</title><link>https://slott56.github.io/2009_05_25-restructured_text_markup_and_content_management.html</link><description>&lt;p&gt;I can't say enough good things about ReStructuredText (RST).  I've
used all of the available markup languages (SGML, HTML and XML).
They have their place, but they all fall short of being truly
usable.&lt;/p&gt;
&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2009_05_20-this_sounds_complicated_because_it_is.html"&gt;This sounds complicated, because it
is&lt;/a&gt; I
reviewed some of my history of cheap content …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 25 May 2009 11:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-25:/2009_05_25-restructured_text_markup_and_content_management.html</guid><category>Technologies</category><category>RST</category><category>xml</category><category>sgml</category><category>HTML</category></item><item><title>Open Source Use Rising</title><link>https://slott56.github.io/2009_05_22-open_source_use_rising.html</link><description>&lt;p&gt;Or so claims SD Times...&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.sdtimes.com/link/33430"&gt;http://www.sdtimes.com/link/33430&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The decision process includes: &amp;quot;find a low-cost solution&amp;quot;.  More
importantly, it includes &amp;quot;justify the fees to purchase and for
support.&amp;quot;&lt;/p&gt;
&lt;p&gt;This drives down the cost of software and support for commercial
products.   It also rationalizes what your buy when …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 22 May 2009 08:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-22:/2009_05_22-open_source_use_rising.html</guid><category>Technologies</category><category>open source</category></item><item><title>Name Matching Alternatives</title><link>https://slott56.github.io/2009_05_21-name_matching_alternatives.html</link><description>&lt;p&gt;The users want to locate people by last name.  They want flexible
matching.  That's not very hard.&lt;/p&gt;
&lt;p&gt;The DBA wants to do some wild-card searches efficiently.  The DBA may
not be responding to the users actual request, making this more
complex than it needs to be.&lt;/p&gt;
&lt;p&gt;I'm not in contact …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 May 2009 17:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-21:/2009_05_21-name_matching_alternatives.html</guid><category>Technologies</category><category>metaphone</category><category>soundex</category><category>regular expressions</category><category>software design</category><category>SQL</category></item><item><title>Applet Not Inited; the "Red X" problem</title><link>https://slott56.github.io/2009_05_21-applet_not_inited_the_red_x_problem.html</link><description>&lt;p&gt;I haven't done Applet stuff in years.&lt;/p&gt;
&lt;p&gt;I do -- intensely -- like embedding functionality in web pages.
RIA/Ajax and what-not are something I have trouble with because I'm
not a graphic designer.  Javascript and Applets fall into three clear
categories:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Basic usability.  Javascript offers lots of little enhancements to
HTML …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 21 May 2009 07:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-21:/2009_05_21-applet_not_inited_the_red_x_problem.html</guid><category>Technologies</category><category>HTML</category><category>applet</category><category>java</category></item><item><title>This sounds complicated, because it is</title><link>https://slott56.github.io/2009_05_20-this_sounds_complicated_because_it_is.html</link><description>&lt;p&gt;For a while, I generated documentation with
&lt;a class="reference external" href="http://www.cheetahtemplate.org/"&gt;Cheetah&lt;/a&gt;. I wrote bodies as a
fragment of HTML and used Cheetah to wrap those bodies in standard
templates with navigation and branding.
To write my books, I learned &lt;a class="reference external" href="http://www.docbook.org/"&gt;DocBook&lt;/a&gt;
markup and used &lt;a class="reference external" href="http://www.sagehill.net/docbookxsl/"&gt;DocBook XSL&lt;/a&gt;
tools to create HTML and PDF versions of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 20 May 2009 07:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-20:/2009_05_20-this_sounds_complicated_because_it_is.html</guid><category>Technologies</category><category>RST</category><category>sphinx</category><category>#python</category><category>jinja</category><category>HTML</category><category>cheetah</category></item><item><title>Data Structures in Python and SQL</title><link>https://slott56.github.io/2009_05_17-data_structures_in_python_and_sql.html</link><description>&lt;p&gt;This is -- partially -- about the &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Object-Relational_impedance_mismatch"&gt;object-relational impedance
mismatch&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But it's also about the parallel concepts between objects and
relations.  We'll use Python as our object model.&lt;/p&gt;
&lt;p&gt;First, the obvious.&lt;/p&gt;
&lt;p&gt;A SQL table is a list of rows.  A row is a dictionary that maps a
column name to a column …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 May 2009 19:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-17:/2009_05_17-data_structures_in_python_and_sql.html</guid><category>Technologies</category><category>#python</category><category>object-oriented design</category><category>SQL</category></item><item><title>Ways to Crush Innovation</title><link>https://slott56.github.io/2009_05_17-ways_to_crush_innovation.html</link><description>&lt;p&gt;Check this out:  “&lt;a class="reference external" href="http://sayamindu.randomink.org/ramblings/2009/04/29/why-should-i-bother/"&gt;Why should I
bother&lt;/a&gt;?”.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All organizations have an “Official Technology List”.  I work
“Enterprise IT”, where the official languages are limited to Java, VB
.Net, C, C++.  After that... well... it may as well be Esperanto or
&lt;a class="reference external" href="http://compsoc.dur.ac.uk/whitespace/"&gt;Whitespace&lt;/a&gt;.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;PHP, for example, is near the top of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 May 2009 15:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-17:/2009_05_17-ways_to_crush_innovation.html</guid><category>Technologies</category><category>PHP</category><category>#python</category></item><item><title>All Those TODO's</title><link>https://slott56.github.io/2009_05_17-all_those_todos.html</link><description>&lt;p&gt;About a year ago, we started out doing Python development with simple
&lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/tools.html"&gt;rst2html&lt;/a&gt;documents for requirements, design, etc.  In the code, we had comments
that used &lt;a class="reference external" href="http://epydoc.sourceforge.net/"&gt;epydoc&lt;/a&gt; with the
&lt;a class="reference external" href="http://epydoc.sourceforge.net/manual-epytext.html"&gt;epytext&lt;/a&gt;markup language.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;No, it wasn’t confusing.  Free-text documents (requirements,
architecture, design, test plans, etc.) are easy and fun to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 May 2009 15:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-17:/2009_05_17-all_those_todos.html</guid><category>Technologies</category><category>RST</category><category>sphinx</category><category>#python</category><category>epydoc</category></item><item><title>Multi-threaded apps and module globals</title><link>https://slott56.github.io/2009_05_17-multi_threaded_apps_and_module_globals.html</link><description>&lt;p&gt;Learned about module globals the hard way.&lt;/p&gt;
&lt;p&gt;The mod_wsgi daemon by default spawns 15 threads.  This is important,
but not obvious.&lt;/p&gt;
&lt;p&gt;During load testing, we had intermittent weird errors.  We were seeing
an odd inconsistency in replies.  My experience in creating military
software in the ’80’s leads me to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 May 2009 15:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-17:/2009_05_17-multi_threaded_apps_and_module_globals.html</guid><category>Technologies</category><category>#python</category><category>threads</category></item><item><title>Changing Platforms</title><link>https://slott56.github.io/2009_05_17-changing_platforms.html</link><description>&lt;p&gt;iBlog doesn’t work well -- and hasn’t for a while.&lt;/p&gt;
&lt;p&gt;I have iWeb as part of my iLife package -- and I use iLife heavily.&lt;/p&gt;
&lt;p&gt;Perhaps it’s time to move.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There are some small “howevers” in that.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;344 blog entires that I’d like to migrate to iWeb.  It …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 May 2009 15:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-17:/2009_05_17-changing_platforms.html</guid><category>Technologies</category><category>blogging</category><category>iWeb</category></item><item><title>iWeb -- not so nice</title><link>https://slott56.github.io/2009_05_14-iweb_not_so_nice.html</link><description>&lt;p&gt;For techincal blogging (like this) iWeb is weak.&lt;/p&gt;
&lt;p&gt;The total MacOSX integration -- pictures, podcast, etc. -- is nice.
It's very cool for my travelogues. But for code samples and the kind
of customized HTML widgets that are required by Technorati, it's too
hard to deal with.&lt;/p&gt;
&lt;p&gt;The size of the iWeb …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 May 2009 23:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-05-14:/2009_05_14-iweb_not_so_nice.html</guid><category>Technologies</category><category>blogging</category><category>iWeb</category></item><item><title>Unit Test Coverage</title><link>https://slott56.github.io/2009_02_25-unit_test_coverage.html</link><description>&lt;p&gt;Unit test coverage is a politically sensitive issue.&lt;/p&gt;
&lt;p&gt;If you don't like (or want) unit testing, you set the threshold really high.  100% code coverage, or worse, 100% logic path coverage.  Since these goals are difficult to achieve, the whole unit testing business can be made to go away.&lt;/p&gt;
&lt;p&gt;If …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 25 Feb 2009 20:22:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-25:/2009_02_25-unit_test_coverage.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Python Business Rules Engine</title><link>https://slott56.github.io/2009_02_20-python_business_rules_engine.html</link><description>&lt;p&gt;On Stack Overflow I was captivated by &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/532814/what-tools-would-you-used-to-write-a-modular-database-in-python"&gt;What tools would you used to write a modular database in Python?&lt;/a&gt; &amp;quot; and &amp;quot;&lt;a class="reference external" href="http://stackoverflow.com/questions/467738/implementing-a-rules-engine-in-python"&gt;Implementing a 'rules engine' in Python&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;Both questions are quite amazing because they already have a modular, flexible rules engine (called &amp;quot;python&amp;quot;) but it's not good enough: they want to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 20 Feb 2009 11:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-20:/2009_02_20-python_business_rules_engine.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>python</category></item><item><title>Python and .NET News</title><link>https://slott56.github.io/2009_02_19-python_and_net_news.html</link><description>&lt;p&gt;The Windows and .NET watch column, February 1, was &lt;a class="reference external" href="http://www.sdtimes.com/WINDOWS__NET_WATCH_PYTHON_ARBITRARILY_INTERESTING/By_Larry_O_Brien/About_DOCUMENTATION_and_NET_and_PYTHON_and_WINDOWS_and_RESOLVER/33233"&gt;Python: arbitrarily interesting&lt;/a&gt; .  For certain classes of &amp;quot;interesting&amp;quot; problems, where interesting is defined arbitrarily, Python is an easy way to tackle those interesting problems.&lt;/p&gt;
&lt;p&gt;It picks out a few specific areas of IronPython application, which is good and bad.  Good because …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 19 Feb 2009 14:22:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-19:/2009_02_19-python_and_net_news.html</guid><category>News</category><category>news</category></item><item><title>Open Source Business Opportunities</title><link>https://slott56.github.io/2009_02_18-open_source_business_opportunities.html</link><description>&lt;p&gt;See the &lt;a class="reference external" href="http://www.cioinsight.com/c/a/IT-Management/10-Areas-Where-Open-Source-is-Open-for-Business/?kc=CIOMINEPNL01302009"&gt;10 Open Source Opportunities&lt;/a&gt;  entry in CIO Minute.&lt;/p&gt;
&lt;p&gt;The OS and Virtualization territory is already staked out.  Not sure this will be a real opportunity space.&lt;/p&gt;
&lt;p&gt;Enterprise applications (CRM, ERP, BI) are scary.  Scary because these are purchased by CIO's.  CIO's are herd animals and -- of course -- an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 Feb 2009 01:30:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-18:/2009_02_18-open_source_business_opportunities.html</guid><category>Management</category><category>management</category></item><item><title>The Future of Windows -- And the Future WIthout WIndows</title><link>https://slott56.github.io/2009_02_11-the_future_of_windows_and_the_future_without_windows.html</link><description>&lt;p&gt;The disruption from Microsoft's failures are only starting to be felt.  Check out Frank Hayes' &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;taxonomyName=Management&amp;amp;articleId=332889"&gt;The Pain Begins&lt;/a&gt; &amp;quot; column in the January 26th Computer World.&lt;/p&gt;
&lt;p&gt;Corporate IT stubbed Vista.  What will it do with Windows 7?  And what's the fall-back plan if Windows 7 is bust and Microsoft does an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Feb 2009 02:49:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-11:/2009_02_11-the_future_of_windows_and_the_future_without_windows.html</guid><category>Management</category><category>management</category></item><item><title>Python and Perl compare/contrast</title><link>https://slott56.github.io/2009_02_02-python_and_perl_comparecontrast.html</link><description>&lt;p&gt;Check out Binstock's January 15th column in Software Development Times, &lt;a class="reference external" href="http://www.sdtimes.com/INTEGRATION_WATCH_THE_END_FOR_PERL_/About_JAVA_and_PERL_and_PYTHON_and_GOOGLE/33186"&gt;Integration Watch: The End of PERL?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Very compelling case, generally free of the kind of subjective rants that often characterize analysis of PERL's viability.  I tell people to &lt;a class="reference external" href="https://slott56.github.io/2006_01_27-after_perl_what_revised.html"&gt;drop PERL&lt;/a&gt;  all the time, but I don't often have as clear …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 02 Feb 2009 10:57:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-02-02:/2009_02_02-python_and_perl_comparecontrast.html</guid><category>News</category><category>news</category></item><item><title>Security Resources [Update]</title><link>https://slott56.github.io/2009_01_25-security_resources_update.html</link><description>&lt;p&gt;Years ago, I was working with a client who was implementing their first web site.&lt;/p&gt;
&lt;p&gt;Well, actually, it wasn't their first.  It was their third.  But their first two were haphazard &amp;quot;we hope this works&amp;quot; kind of web sites.  They relied on third-party security and were pretty sure they were …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 25 Jan 2009 01:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-25:/2009_01_25-security_resources_update.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>OWASP</category></item><item><title>Mac OS X Sync and iPhone</title><link>https://slott56.github.io/2009_01_15-mac_os_x_sync_and_iphone.html</link><description>&lt;p&gt;Last week I noticed that some contacts were repeated in my iPhone contacts.  That's awful.  It makes the phone suddenly very hard to use.&lt;/p&gt;
&lt;p&gt;I did a little reading, found some stuff about various levels of synchronization.  I have a Mac OS X 10.4, plus 10.5, plus the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Jan 2009 01:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-15:/2009_01_15-mac_os_x_sync_and_iphone.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>News -- Music, Python 3.0 and more music</title><link>https://slott56.github.io/2009_01_14-news_music_python_30_and_more_music.html</link><description>&lt;p&gt;Thing 1 -- My son's album is out today.  You can visit the &lt;a class="reference external" href="http://sivanoir.com/"&gt;Siva Noir&lt;/a&gt;  site.  You can buy from their site or iTunes.  Samples are available on their &lt;a class="reference external" href="http://www.myspace.com/sivanoir"&gt;MySpace&lt;/a&gt;  page.&lt;/p&gt;
&lt;p&gt;Thing 2 -- More updates on Python 3.0.  The story is not on the SD Times web site yet, but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Jan 2009 00:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-14:/2009_01_14-news_music_python_30_and_more_music.html</guid><category>News</category><category>news</category></item><item><title>ROI - Buzzword Bingo</title><link>https://slott56.github.io/2009_01_13-roi_buzzword_bingo.html</link><description>&lt;p&gt;Here's the article,
&amp;quot;&lt;a class="reference external" href="http://www.businessweek.com/innovate/content/jan2009/id2009017_198183.htm"&gt;The New Focus Group: The Collective&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;The point is that simplistic Return on Investment misses the point.  The point is that marketing models aren't simple linear relationships between promotional dollars and sales.&lt;/p&gt;
&lt;p&gt;I was all excited about the &lt;a class="reference external" href="https://slott56.github.io/2008_04_09-innovation_includes_failure_some_organizations_call_it_learning_however.html"&gt;value of innovation&lt;/a&gt;
and the &lt;a class="reference external" href="https://slott56.github.io/2008_04_16-innovation_pushed_to_vendors.html"&gt;source of innovation&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Jan 2009 01:42:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-13:/2009_01_13-roi_buzzword_bingo.html</guid><category>News</category><category>news</category></item><item><title>Reader Feedback -- what a helpful thing</title><link>https://slott56.github.io/2009_01_07-reader_feedback_what_a_helpful_thing.html</link><description>&lt;p&gt;I've received a steady flow of email on &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/python.html"&gt;Building Skills in Python&lt;/a&gt;  and &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;Building Skills in OO Design&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Readers have located a number of mistakes.  It's been easy to correct and republish these books on-line.&lt;/p&gt;
&lt;p&gt;At some point, I'll have to start the Python 2.6/3.0 revisions.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Jan 2009 02:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-07:/2009_01_07-reader_feedback_what_a_helpful_thing.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Personal Spam</title><link>https://slott56.github.io/2009_01_02-personal_spam.html</link><description>&lt;p&gt;In previous years, I had several email lists: my Yahoo! list, my Google list, my desktop.  To figure out what to send, I had to merge the lists, which meant reading vCards, and CSV files.  This is totally the sweet-spot for Python.&lt;/p&gt;
&lt;p&gt;The Mac OS X &lt;a class="reference external" href="http://www.apple.com/mobileme/"&gt;Mobile Me&lt;/a&gt;  has a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Jan 2009 01:25:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2009-01-02:/2009_01_02-personal_spam.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Building Documentation</title><link>https://slott56.github.io/2008_12_31-building_documentation.html</link><description>&lt;p&gt;For years, I've written documentation using &lt;a class="reference external" href="http://docutils.sourceforge.net/rst.html"&gt;ReStructured Text&lt;/a&gt;  (RST).  It's just one of several &amp;quot;&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Lightweight_markup_language"&gt;lightweight markup languages&lt;/a&gt; &amp;quot;.  For others, look at &lt;a class="reference external" href="http://daringfireball.net/projects/markdown/syntax"&gt;Markdown&lt;/a&gt; , &lt;a class="reference external" href="http://dev.zope.org/Members/jim/StructuredTextWiki/FrontPage/"&gt;StructuredText&lt;/a&gt; , &lt;a class="reference external" href="http://docutils.sourceforge.net/mirror/setext.html"&gt;Setext&lt;/a&gt; , among many others.&lt;/p&gt;
&lt;p&gt;I generally use the &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/tools.html#rst2html-py"&gt;rst2html&lt;/a&gt;  utility that comes with &lt;a class="reference external" href="http://docutils.sourceforge.net/"&gt;Docutils&lt;/a&gt; .  It works fine for small things.&lt;/p&gt;
&lt;p&gt;I just read about the &lt;a class="reference external" href="http://sphinx.pocoo.org/"&gt;Sphinx&lt;/a&gt;  documentation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 31 Dec 2008 23:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-12-31:/2008_12_31-building_documentation.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>Blogging and Technical Writing</title><link>https://slott56.github.io/2008_12_22-blogging_and_technical_writing.html</link><description>&lt;p&gt;Check out Carol Johnson's book &lt;a class="reference external" href="http://www.baywood.com/books/previewbook.asp?id=978-0-89503-384-0"&gt;The Language of Work: Technical Communication at Lukens Steel, 1810 to 1925&lt;/a&gt; .  It puts technical writing in a bigger perspective.&lt;/p&gt;
&lt;p&gt;The cool thing is dragging meaning out of a corpus of documents.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 22 Dec 2008 00:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-12-22:/2008_12_22-blogging_and_technical_writing.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>My Favorite Appliance</title><link>https://slott56.github.io/2008_12_18-my_favorite_appliance.html</link><description>&lt;p&gt;December 11th, the electric power went out here in the northeast, and stayed out until late on the 14th.&lt;/p&gt;
&lt;p&gt;We have gas heat, gas cooking.  But the furnace wouldn't run without AC power.  So, I now have a favorite electrical appliance -- the blower on my furnace.:Apple-tab-span:``&lt;/p&gt;
&lt;p&gt;Here's my strategy …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 18 Dec 2008 00:47:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-12-18:/2008_12_18-my_favorite_appliance.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>hardware</category></item><item><title>Configuration Files -- Again</title><link>https://slott56.github.io/2008_12_09-configuration_files_again.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.heikkitoivonen.net/blog/2008/12/07/configuration-options-in-code-or-ini-files/"&gt;Configuration Options in Code or INI Files?&lt;/a&gt; .  Also, see &lt;a class="reference external" href="https://slott56.github.io/2008_03_28-python_as_configuration_language_more_good_ideas.html"&gt;Python as Configuration Language&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Here's some of the argument.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Editing&lt;/strong&gt;.  Which is easier?  Which is more expressive?  Some say that Text (INI format especially) is easier -- but I don't see what.  Python is just as easy as INI, and has …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Dec 2008 02:29:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-12-09:/2008_12_09-configuration_files_again.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category></item><item><title>Conflating Test and Debug</title><link>https://slott56.github.io/2008_12_02-conflating_test_and_debug.html</link><description>&lt;p&gt;Check out this StackOverflow &amp;quot;question&amp;quot;: &lt;a class="reference external" href="http://stackoverflow.com/questions/333922/does-anyone-have-metrics-on-the-utility-of-formal-unit-testing"&gt;Does anyone have metrics on the utility of formal Unit Testing?&lt;/a&gt; . While -- technically -- it does have a question, it's more of a rant against formal unit testing than a proper question.&lt;/p&gt;
&lt;p&gt;Here's the conflation comment.  &amp;quot;I've worked with developers who never caught any errors in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Dec 2008 18:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-12-02:/2008_12_02-conflating_test_and_debug.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Rickrolling Trifecta</title><link>https://slott56.github.io/2008_11_29-rickrolling_trifecta.html</link><description>&lt;p&gt;No one wants to be Rickrolled.  I suppose it could have been funny, once, for about 15 minutes.  I didn't think it was all that funny to begin with, but there it is -- a part of the lexicon.  However, it remains obscure, and sometimes hard to explain to non-technical folks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 29 Nov 2008 20:50:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-29:/2008_11_29-rickrolling_trifecta.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Open Source In The News</title><link>https://slott56.github.io/2008_11_24-open_source_in_the_news.html</link><description>&lt;p&gt;The &lt;a class="reference external" href="http://www.informationweek.com/news/software/open_source/showArticle.jhtml?articleID=212002355&amp;amp;subSection=Open+Source"&gt;Open Source Enterprise&lt;/a&gt;  article in the November 15th InformationWeek is quite cool.  Here's the &amp;quot;wow&amp;quot; quote for me.&lt;/p&gt;
&lt;blockquote&gt;
Another way that open source code meets current needs is through lighter-weight integration than commercial vendors typically offer. By definition, open source code adheres to publicly approved standards. That means open …&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Nov 2008 15:24:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-24:/2008_11_24-open_source_in_the_news.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>Schrodinger's cat lives! Or doesn't!</title><link>https://slott56.github.io/2008_11_22-schrodingers_cat_lives_or_doesnt.html</link><description>&lt;p&gt;See this question on &lt;a class="reference external" href="http://stackoverflow.com/questions/293431/python-object-deleting-itself"&gt;Python objects deleting themselves&lt;/a&gt; .  There was some fundamental confusion about objects, deletion and garbage collection.&lt;/p&gt;
&lt;p&gt;Some additional material was posted in an answer (not in the question, where it belongs) making it a little hard to go from question to answers.  The original poster's non-answer had …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 22 Nov 2008 23:27:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-22:/2008_11_22-schrodingers_cat_lives_or_doesnt.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category></item><item><title>Concealing the code base -- in Python. I think not.</title><link>https://slott56.github.io/2008_11_17-concealing_the_code_base_in_python_i_think_not.html</link><description>&lt;p&gt;There's this huge gulf between &amp;quot;protecting&amp;quot; our intellectual property (IP) and making money off our intellectual property.  In our case, we have experts creating business models that we embody in some source code as business rules.&lt;/p&gt;
&lt;p&gt;What's the IP?  The software or the model?  Where's the value?  Is it out …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 17 Nov 2008 11:10:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-17:/2008_11_17-concealing_the_code_base_in_python_i_think_not.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>To GUI or not to GUI, that is a question</title><link>https://slott56.github.io/2008_11_13-to_gui_or_not_to_gui_that_is_a_question.html</link><description>&lt;p&gt;How do we provide some kind of admin support/tools/procedures for the sales team?&lt;/p&gt;
&lt;p&gt;We know they'll invent new scenarios.  We know they'll want to save that configuration.  With Django's admin utilities, we can do a &amp;quot;dumpdata&amp;quot; that preserves the interesting parts of the the database.  That much is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Nov 2008 11:25:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-13:/2008_11_13-to_gui_or_not_to_gui_that_is_a_question.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>GUI</category><category>UX</category></item><item><title>Python 3.0</title><link>https://slott56.github.io/2008_11_08-python_30.html</link><description>&lt;p&gt;The SD Times article (&lt;a class="reference external" href="http://www.sdtimes.com/link/32947"&gt;Python 3.0 won't be compatible...&lt;/a&gt; ) was very helpful -- crisp, to the point, management-friendly coverage.  [For some additional thoughts, see the &lt;a class="reference external" href="http://stackoverflow.com/questions/273524/python-30-and-language-evolution"&gt;Python 3.0 and Language Evolution&lt;/a&gt;  question on Stackoverflow.]&lt;/p&gt;
&lt;p&gt;This applied to what we're building at work.  Here's the best part.  When I started on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 08 Nov 2008 13:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-08:/2008_11_08-python_30.html</guid><category>News</category><category>news</category></item><item><title>The Python "Connection Reset By Peer" Problem</title><link>https://slott56.github.io/2008_11_01-the_python_connection_reset_by_peer_problem.html</link><description>&lt;p&gt;We've got a fairly complex application that fits the &amp;quot;broker&amp;quot; pattern.  It offers web services and it consumes web services.  It does some complex calculations of it's own and it's got a pretty complex database.&lt;/p&gt;
&lt;p&gt;One thing I like to have is a &amp;quot;ready for deployment&amp;quot; test suite that exercises …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 01 Nov 2008 00:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-11-01:/2008_11_01-the_python_connection_reset_by_peer_problem.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Classic / Ancient Bit of Marketing</title><link>https://slott56.github.io/2008_10_25-classic_ancient_bit_of_marketing.html</link><description>&lt;p&gt;Found this on a shelf in my office.  The &lt;em&gt;Apple 32 Developer's Handbook&lt;/em&gt;.  It covers the Lisa 2, Lisa 2/5, Lisa 2/10 and the Macintosh.  Apple described this family of machines as the SuperMicros.&lt;/p&gt;
&lt;img alt="Apple 32.png" src="https://slott56.github.io/media/BF33A83C-72CA-4C4A-8665-BDC37B8BAFC6.png" /&gt;
&lt;p&gt;It might be a collectable -- it's in pristine condition -- never used as a coaster …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 25 Oct 2008 14:57:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-10-25:/2008_10_25-classic_ancient_bit_of_marketing.html</guid><category>News</category><category>news</category></item><item><title>How can we demo web services?</title><link>https://slott56.github.io/2008_10_21-how_can_we_demo_web_services.html</link><description>&lt;p&gt;The obvious answer is that we need a customer-like demo site that shows how the customer's software interacts with our software.&lt;/p&gt;
&lt;p&gt;The problem is that it's a totally back-office kind of relationship.  Worse, we don't have solid use cases.  We have working software for some use cases, but every conference …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 21 Oct 2008 22:47:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-10-21:/2008_10_21-how_can_we_demo_web_services.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>I hate CSS -- mostly because I don't understand it</title><link>https://slott56.github.io/2008_10_12-i_hate_css_mostly_because_i_dont_understand_it.html</link><description>&lt;p&gt;I found &lt;a class="reference external" href="http://blog.isotoma.com/2008/10/css_systems.html"&gt;CSS Systems&lt;/a&gt; , in the Isotoma blog.  Which lead me to &lt;a class="reference external" href="http://natbat.net/2008/Sep/28/css-systems/"&gt;CSS Systems for writing maintainable CSS&lt;/a&gt;  from Natalie Downe.  That was a &amp;quot;aha!&amp;quot; moment.  The problem is that I've been looking at incomplete, poorly-structured examples.&lt;/p&gt;
&lt;p&gt;One problem I have with CSS and XPath is the multiple dimensions of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 12 Oct 2008 12:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-10-12:/2008_10_12-i_hate_css_mostly_because_i_dont_understand_it.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>Exploratory Programming -- Incremental Development in Python (Revised)</title><link>https://slott56.github.io/2008_10_05-exploratory_programming_incremental_development_in_python_revised.html</link><description>&lt;p&gt;After some processing by customers and us and vendors and god-alone-only-knows who else, our statistician has 4 zip files, each about 15Mb.&lt;/p&gt;
&lt;p&gt;Step one is to look inside the zip archives and see what we have.  Clearly, we can do this any of several ways.  Looking manually doesn't get us …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 05 Oct 2008 23:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-10-05:/2008_10_05-exploratory_programming_incremental_development_in_python_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>python</category></item><item><title>Programming Languages I've Learned (more-or-less in order) [Update]</title><link>https://slott56.github.io/2008_09_28-programming_languages_ive_learned_more_or_less_in_order_update.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://stackoverflow.com/questions/111859/did-you-ever-switch-from-one-programming-language-to-another"&gt;Did you ever switch from one programming language to another?&lt;/a&gt;  A ridiculous question -- the answer is always &amp;quot;yes&amp;quot; unless you're a hobbyist.&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://jtauber.com/blog/2008/09/28/programming_languages_i've_learned_in_order/"&gt;Programming Languages I've Learned In Order&lt;/a&gt; .  See &lt;a class="reference external" href="http://www.eflorenzano.com/blog/post/programming-languages-ive-learned-rough-order/"&gt;Programming Languages I've Learned (In Rough Order) Meme&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Here's my list.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;High Scool - Early 70's&lt;/strong&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;IBM 1620 Assembler&lt;/li&gt;
&lt;li&gt;IBM …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 28 Sep 2008 23:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-28:/2008_09_28-programming_languages_ive_learned_more_or_less_in_order_update.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>How did I start with Python?</title><link>https://slott56.github.io/2008_09_28-how_did_i_start_with_python.html</link><description>&lt;p&gt;I can't find the exact question -- it was something along the lines of &amp;quot;Why did you start with Python?&amp;quot; or &amp;quot;How did you choose Python?&amp;quot;   It was probably one tagged with &lt;a class="reference external" href="http://stackoverflow.com/questions/tagged/programming-languages"&gt;programming-languages&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;For several days, I couldn't recall why or how I started looking at Python.&lt;/p&gt;
&lt;p&gt;At first, all I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 28 Sep 2008 02:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-28:/2008_09_28-how_did_i_start_with_python.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>"The Business Analyst Lied" Or "Python To The Rescue"</title><link>https://slott56.github.io/2008_09_24-the_business_analyst_lied_or_python_to_the_rescue.html</link><description>&lt;p&gt;This is a long, sordid story.  Maybe a the title should be &amp;quot;Seduced by Technology&amp;quot;, rather than &amp;quot;The Business Analyst Lied.&amp;quot;&lt;/p&gt;
&lt;p&gt;Initially, it sounded like this:&lt;/p&gt;
&lt;p&gt;&amp;quot;Our customer asks for a recommendation regarding an offering.  Based on the description of the offering, we use web services to get some scoring …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 24 Sep 2008 12:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-24:/2008_09_24-the_business_analyst_lied_or_python_to_the_rescue.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Too much of the wrong kind of fun.</title><link>https://slott56.github.io/2008_09_23-too_much_of_the_wrong_kind_of_fun.html</link><description>&lt;p&gt;The point, from the FAQ is to answer programming questions with people who a trusted by their peers.&lt;/p&gt;
&lt;p&gt;Go to the &lt;a class="reference external" href="http://stackoverflow.com/questions/tagged/python"&gt;Python&lt;/a&gt;  tag to join that conversation.&lt;/p&gt;
&lt;p&gt;Your reputation is your overall score.  Every time your question (or answer) is voted up, you get 10 reputation points.  Each time you're …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Sep 2008 00:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-23:/2008_09_23-too_much_of_the_wrong_kind_of_fun.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Filesystem Deployment: Some Hand-Wringing</title><link>https://slott56.github.io/2008_09_14-filesystem_deployment_some_hand_wringing.html</link><description>&lt;p&gt;There are two candidate locations on the file system for application components.  What are the criteria for choosing among them?&lt;/p&gt;
&lt;p&gt;The Python site-packages directory, IMO, is for packages that have two important criteria.  First, they have to be widely reusable.  Second, they have (or would benefit from) a setup.py …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 14 Sep 2008 20:03:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-14:/2008_09_14-filesystem_deployment_some_hand_wringing.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data persistence</category></item><item><title>I didn't get the memo -- apparently, I'm not on the distribution list -- in fact, there may be no list</title><link>https://slott56.github.io/2008_09_09-i_didnt_get_the_memo_apparently_im_not_on_the_distribution_list_in_fact_there_may_be_no_list.html</link><description>&lt;p&gt;Recently, I started on an architecture for which &lt;a class="reference external" href="http://www.fastcgi.com/"&gt;Fast CGI&lt;/a&gt;  seemed like a good idea.  But then, I couldn't find a pre-built &lt;a class="reference external" href="http://fedoraproject.org/wiki/Tools/yum"&gt;YUM&lt;/a&gt;  distro for &lt;a class="reference external" href="http://fedoraproject.org/"&gt;Fedora Core 9&lt;/a&gt; .  Further, I couldn't really build my own, because I couldn't find the FC9 version of /usr/local/apache2.&lt;/p&gt;
&lt;p&gt;Stuff moved.  And no …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 09 Sep 2008 09:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-09:/2008_09_09-i_didnt_get_the_memo_apparently_im_not_on_the_distribution_list_in_fact_there_may_be_no_list.html</guid><category>Management</category><category>management</category></item><item><title>Bind Variables and Prepared Statements -- Good, Bad or Indifferent?</title><link>https://slott56.github.io/2008_09_06-bind_variables_and_prepared_statements_good_bad_or_indifferent.html</link><description>&lt;p&gt;A Gentle Reader provided references to folks who are distrustful of prepared statements.&lt;/p&gt;
&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="http://krow.livejournal.com/599921.html"&gt;Prepared Statements, Musings&lt;/a&gt; &amp;quot; and &amp;quot;&lt;a class="reference external" href="http://pooteeweet.org/blog/0/1201#m1201"&gt;Prepared statements are dead, long live prepared statements&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;In &amp;quot;musings&amp;quot; we're told &amp;quot;...users do not clean up/close unused prepared statements.&amp;quot;  For this reason, they're bad, and should be avoided.  Eventually, &amp;quot;...unless …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 06 Sep 2008 01:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-06:/2008_09_06-bind_variables_and_prepared_statements_good_bad_or_indifferent.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>The Lean Architecture</title><link>https://slott56.github.io/2008_09_04-the_lean_architecture.html</link><description>&lt;p&gt;First, look at &amp;quot;&lt;a class="reference external" href="http://www.linux.com/feature/145341"&gt;Protecting your MySQL database from SQL injection attacks with GreenSQL&lt;/a&gt; &amp;quot;.  Okay, a longish article on the ins and outs of installing something that blah blah blah&lt;/p&gt;
&lt;p&gt;Wait -- what?  &lt;a class="reference external" href="http://sourceforge.net/projects/greensql/"&gt;GreenSQL&lt;/a&gt;  is a proxy for MySQL that checks the SQL for certain kinds of injection attacks!?!?!&lt;/p&gt;
&lt;p&gt;Now read &lt;a class="reference external" href="Twistedradix:thisisarant"&gt;Twisted …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Sep 2008 10:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-04:/2008_09_04-the_lean_architecture.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>database design</category></item><item><title>Lean Projects — Not Deficient Projects</title><link>https://slott56.github.io/2008_09_02-lean_projects_not_deficient_projects.html</link><description>&lt;p&gt;Here's a great quote from a reader regarding &lt;a class="reference external" href="https://slott56.github.io/2008_09_02-the_big_plan_for_changetm_since_it_never_works_whats_the_alternative.html"&gt;Big Plan for Change&lt;/a&gt; : &amp;quot;[the advice] doesn't account for project tracking requirements of the organization. Budgeting. Metrics. Hiring. Documenting. Transitioning to new staff.&amp;quot;&lt;/p&gt;
&lt;p&gt;Good point.  Let's look at these in a little bit of depth.  We'll cover the three management practices first …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Sep 2008 19:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-02:/2008_09_02-lean_projects_not_deficient_projects.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category><category>agile</category></item><item><title>The Big Plan For Change™ -- Since it never works, what's the alternative?</title><link>https://slott56.github.io/2008_09_02-the_big_plan_for_changetm_since_it_never_works_whats_the_alternative.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;articleId=324808"&gt;Fast, but Slowly&lt;/a&gt; .  ComputerWorld, Frankly Speaking, August 25, 2008, by Frank Hayes.&lt;/p&gt;
&lt;p&gt;This is a very cool restatement of some essential Agile principles.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Sure, we can train and plan -- and we should. But there are too many unknowns to train and plan for everything. A slow ramp-up lets us …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Sep 2008 10:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-09-02:/2008_09_02-the_big_plan_for_changetm_since_it_never_works_whats_the_alternative.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category></item><item><title>Tooling to Build Test Cases</title><link>https://slott56.github.io/2008_08_30-tooling_to_build_test_cases.html</link><description>&lt;p&gt;Here's a recipe for transforming a pile of similarly-formatted source spreadsheets into a suite of unittest test cases.&lt;/p&gt;
&lt;div class="section" id="some-use-cases"&gt;
&lt;h2&gt;Some Use Cases&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The subject matter experts will tinker with the spreadsheets.  They'll invent new cases, revise old cases, retract cases.  You'll be regenerating the test suite constantly.&lt;/li&gt;
&lt;li&gt;The subject matter experts …&lt;/li&gt;&lt;/ol&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Aug 2008 13:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-30:/2008_08_30-tooling_to_build_test_cases.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>The Joy of Unit Testing</title><link>https://slott56.github.io/2008_08_28-the_joy_of_unit_testing.html</link><description>&lt;p&gt;The customer sent a screen grab from an accounting desktop application with a couple of rows highlighted. They claim that the application I reverse engineered from C and rewrote in Java didn't work for this one case.&lt;/p&gt;
&lt;p&gt;Step 1.  Get clarification on the screen grab information.  The data labels don't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Aug 2008 09:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-28:/2008_08_28-the_joy_of_unit_testing.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Risk-Based Testing</title><link>https://slott56.github.io/2008_08_22-risk_based_testing.html</link><description>&lt;p&gt;First, read Bach's &lt;a class="reference external" href="www.satisfice.com/articles/hrbt.pdf"&gt;Heuristic Risk-Based Testing&lt;/a&gt; .  Clear and simple.&lt;/p&gt;
&lt;p&gt;Then, read Amland and Garborgsv &lt;a class="reference external" href="www.stickyminds.com/getfile.asp?ot=XML&amp;amp;id=13289&amp;amp;fn=XUS31659994file1.doc"&gt;Risk-Based Testing and Metrics&lt;/a&gt; .  Not so clear -- probability gets folded in, confusing the issue.  Also check out Schaefer's &lt;a class="reference external" href="www.cs.tut.fi/tapahtumat/testaus04/schaefer.pdf"&gt;Risk-Based Testing&lt;/a&gt; .  Probabilities are waved around like they're important.  They aren't.&lt;/p&gt;
&lt;p&gt;Risk management shouldn’t be confused with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 22 Aug 2008 10:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-22:/2008_08_22-risk_based_testing.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Universal Truths</title><link>https://slott56.github.io/2008_08_22-universal_truths.html</link><description>&lt;p&gt;First, a standard &lt;a class="reference external" href="http://weblogs.sqlteam.com/mladenp/archive/2008/08/12/Software-Development-Cycle-truism.aspx"&gt;software development life cycle&lt;/a&gt; .  Simply multiply by your team's billable rate.&lt;/p&gt;
&lt;p&gt;Here's &lt;a class="reference external" href="http://www.urbaczewski.com/humor/softdevcycle.htm"&gt;another version&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Also, see &lt;a class="reference external" href="http://murali.weblogs.us/images/software_development1.jpg"&gt;Software Development&lt;/a&gt;  illustration.&lt;/p&gt;
&lt;p&gt;This lead me to &lt;a class="reference external" href="http://www.visitor-tracking.com/pm-jokes.php"&gt;Project Management&lt;/a&gt; .  Also pretty-well universally true.  Except -- of course -- the page has a bunch of odd bugs like a repeated joke and damaged HTML …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 22 Aug 2008 00:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-22:/2008_08_22-universal_truths.html</guid><category>Management</category><category>management</category></item><item><title>What is Perception? What is Reality? It seems to depend on your sponsors.</title><link>https://slott56.github.io/2008_08_20-what_is_perception_what_is_reality_it_seems_to_depend_on_your_sponsors.html</link><description>&lt;p&gt;The article by Joe Wilcox in eWeek is actually really good -- except for the silly subtitle.  See &lt;a class="reference external" href="http://www.eweek.com/c/a/Enterprise-Applications/No-Enterprise-Thaw-for-Vista/"&gt;&amp;quot;No Enterprise Thaw for Vista&lt;/a&gt; &amp;quot;.  It provides solid evidence that Vista is covered in FAIL.  Not rumor or bias, but solid research on sales, adoption, conversion and the like.&lt;/p&gt;
&lt;p&gt;The only flaw in …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 20 Aug 2008 23:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-20:/2008_08_20-what_is_perception_what_is_reality_it_seems_to_depend_on_your_sponsors.html</guid><category>News</category><category>news</category></item><item><title>The Technology Obsession</title><link>https://slott56.github.io/2008_08_16-the_technology_obsession.html</link><description>&lt;p&gt;An old professor of mine writes &amp;quot;There are lots of pathological propensities at work ..., &amp;quot;Gee, we've got a way to use the computer to ...&amp;quot;  In short, automation for the sake of automation.&amp;quot;&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.jbox.dk/quotations.htm"&gt;jbox.dk Quotations on Simplicity&lt;/a&gt; .  The fundamental principle is that simplicity is really important.  But how do …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 16 Aug 2008 01:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-16:/2008_08_16-the_technology_obsession.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category></item><item><title>Testing RESTful web services in Django -- Tantalizingly Close.</title><link>https://slott56.github.io/2008_08_13-testing_restful_web_services_in_django_tantalizingly_close.html</link><description>&lt;p&gt;Here's what's great about &lt;a class="reference external" href="http://www.djangoproject.com"&gt;Django&lt;/a&gt;  coupled with the &lt;a class="reference external" href="http://code.google.com/p/django-rest-interface/"&gt;Django-REST Interface&lt;/a&gt; :  It's almost all model.  You define the model, write some tests.  Add the URL mappings, write some tests using the built-in Django client.&lt;/p&gt;
&lt;p&gt;We're almost there, but this doesn't work out perfectly.  To do complete tests, we have to either …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 13 Aug 2008 10:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-13:/2008_08_13-testing_restful_web_services_in_django_tantalizingly_close.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>The Schema Evolution Problem</title><link>https://slott56.github.io/2008_08_06-the_schema_evolution_problem.html</link><description>&lt;p&gt;Fundamentally, we need to provide explicit version identification on a schema.   This is technically easy, but organizationally nearly impossible.&lt;/p&gt;
&lt;p&gt;Technically, we need to use some kind of version control software for our model and the resulting DDL.  We need some meta-meta-data to track schema names and version numbers.  If we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 06 Aug 2008 10:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-06:/2008_08_06-the_schema_evolution_problem.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Stored Procedures Are A Configuration Management Nightmare (revised)</title><link>https://slott56.github.io/2008_08_03-stored_procedures_are_a_configuration_management_nightmare_revised.html</link><description>&lt;p&gt;I've been asked about the proper location of Stored Procedures more than once.  I've come down very strongly in opposition to triggers and stored procedures.&lt;/p&gt;
&lt;p&gt;First, &lt;a class="reference external" href="https://slott56.github.io/2007_05_27-plsql_and_java_the_benchmark_challenge_revised.html"&gt;PL/SQL is slow&lt;/a&gt; .  Anecdotally, people claim that introducing PL/SQL made an app faster.  I submit that they restructured the application significantly to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 03 Aug 2008 16:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-08-03:/2008_08_03-stored_procedures_are_a_configuration_management_nightmare_revised.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Small Not-For-Profit, Part II</title><link>https://slott56.github.io/2008_07_31-small_not_for_profit_part_ii.html</link><description>&lt;p&gt;In the &lt;a class="reference external" href="https://slott56.github.io/2008_07_28-small_not_for_profit_web_presence_what_to_do.html"&gt;Small Not-for-Profit Web Presence&lt;/a&gt;  posting, I identified a software portfolio for a small NFP.  Basically, it was a list of cheap (or free) web resources that would provide a solid web presence with relatively low cost.  More importantly, it would move them off a legacy web presence that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 Jul 2008 10:13:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-31:/2008_07_31-small_not_for_profit_part_ii.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>not-for-profit</category></item><item><title>Getting to an Agile process</title><link>https://slott56.github.io/2008_07_30-getting_to_an_agile_process.html</link><description>&lt;p&gt;Here's a great summary of Agile techniques.  It's in ComputerWorld's Development section, in an article by Heather Havenstein: &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;articleId=9110219"&gt;Five Web 2.0 app dev lessons for enterprise IT&lt;/a&gt; &amp;quot;.  I think the article is mis-titled, since it's basically &amp;quot;Agile for Big IT.&amp;quot;&lt;/p&gt;
&lt;p&gt;Some of the five techniques are motherhood and apple-pie …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 30 Jul 2008 13:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-30:/2008_07_30-getting_to_an_agile_process.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>sotware design</category><category>methodology</category><category>process</category><category>agile</category></item><item><title>Small Not-For-Profit Web Presence -- What to do?</title><link>https://slott56.github.io/2008_07_28-small_not_for_profit_web_presence_what_to_do.html</link><description>&lt;p&gt;Let's talk about a Small Not For Profit that has a number of web assets, but a web presence that isn't working well.&lt;/p&gt;
&lt;p&gt;First, they have a Domain Name (pretend it's www.smallnfp.org). They have an associated organization which is hosting their web site.  Let's call them the Associated …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Jul 2008 22:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-28:/2008_07_28-small_not_for_profit_web_presence_what_to_do.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>not-for-profit</category></item><item><title>Technology and Compromise</title><link>https://slott56.github.io/2008_07_18-technology_and_compromise.html</link><description>&lt;p&gt;Two recent conversations with the Non-Compromisers.&lt;/p&gt;
&lt;p&gt;NC:  &amp;quot;I can't use Yahoo! mail&amp;quot;&lt;/p&gt;
&lt;p&gt;Me:  &amp;quot;What?&amp;quot;&lt;/p&gt;
&lt;p&gt;NC: &amp;quot;Yahoo! mail has a &amp;quot;Home&amp;quot; tab which isn't the inbox.  It always lands there.&amp;quot;&lt;/p&gt;
&lt;p&gt;Me:  &amp;quot;Yep.  That's a javascript thing.  The tab isn't bookmarkable.&amp;quot;&lt;/p&gt;
&lt;p&gt;NC:  &amp;quot;The fact that I can't land directly on the &amp;quot;Inbox …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 18 Jul 2008 10:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-18:/2008_07_18-technology_and_compromise.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>What's Central Here?</title><link>https://slott56.github.io/2008_07_12-whats_central_here.html</link><description>&lt;p&gt;The requirements are a sequence diagram showing a complex back-and-forth with the vendor's web service.  Each request and reply is detailed, but there's no overview or summary stated.  It's implied, and all of the business folks can articulate it, but no one wrote any of it down.&lt;/p&gt;
&lt;p&gt;This looks like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 12 Jul 2008 15:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-12:/2008_07_12-whats_central_here.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Voice of the Customer</title><link>https://slott56.github.io/2008_07_06-voice_of_the_customer.html</link><description>&lt;p&gt;I'm trying to make sense of the &amp;quot;Voice of the Customer&amp;quot; as the 6σ folks term it.&lt;/p&gt;
&lt;p&gt;I get email once in a while on my books (&lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/nonprogrammer.html"&gt;Programming&lt;/a&gt; , &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/python.html"&gt;Python&lt;/a&gt;  and &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;OO Design&lt;/a&gt; ).  The volume of mail indicates that I have a few hundred readers.  I'm honored to have readers who …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 06 Jul 2008 19:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-07-06:/2008_07_06-voice_of_the_customer.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>The "Which Language" Question</title><link>https://slott56.github.io/2008_06_29-the_which_language_question.html</link><description>&lt;p&gt;Here's how it shakes out from my point of view.  You could say that my bias is showing.  I think, however, I have solid evidence for my opinions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C++&lt;/strong&gt;.  Fine if you like memory management.  Don't get me wrong, some people love the nitty-gritty details.  Some people would prefer to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 29 Jun 2008 15:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-29:/2008_06_29-the_which_language_question.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Wrestling with REST</title><link>https://slott56.github.io/2008_06_25-wrestling_with_rest.html</link><description>&lt;p&gt;REST is cool because there's less protocol there -- little more than HTTP and some kind of representation for objects (XML, JSON or whatever.)   It seems to me that REST with JSON is a very lightweight approach to implementing web services.  Doing this in Python further trims down the technology stack …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 25 Jun 2008 10:18:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-25:/2008_06_25-wrestling_with_rest.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>REST</category><category>SOA</category></item><item><title>Building Skills in OO Design</title><link>https://slott56.github.io/2008_06_19-building_skills_in_oo_design.html</link><description>&lt;p&gt;I want to thank folks for their thoughtful comments.&lt;/p&gt;
&lt;p&gt;I clarified a few design points.&lt;/p&gt;
&lt;p&gt;Most importantly, I added four new appendices.  For Python programmers, I provided examples of unittest, doctest and epydoc.  For Java programmers, I provided examples of JUnit and javadoc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 19 Jun 2008 00:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-19:/2008_06_19-building_skills_in_oo_design.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Denormalization or "What did you mean by that?"</title><link>https://slott56.github.io/2008_06_14-denormalization_or_what_did_you_mean_by_that.html</link><description>&lt;p&gt;I use the word denormalization heavily, to make a point to a certain class of developers.  Other developers object to the term, since it doesn't have a precise meaning.&lt;/p&gt;
&lt;p&gt;The point I often have to make this:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;3rd Normal Form is for Updates.&lt;/li&gt;
&lt;li&gt;Data Warehousing is about Insert and Select …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 14 Jun 2008 11:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-14:/2008_06_14-denormalization_or_what_did_you_mean_by_that.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Genius Move -- Characteristic Functions</title><link>https://slott56.github.io/2008_06_07-genius_move_characteristic_functions.html</link><description>&lt;p&gt;The comment was eaten by Haloscan, but here's the text...&lt;/p&gt;
&lt;p&gt;You need to read Rozhenstein on characteristic functions.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
select
sum(case when a &amp;lt; .5 then 1 else 0 end) 'A'
,sum(case when a &amp;gt;= .5 and a &amp;lt; .75 then 1 else 0 end) 'B'
,sum(case when a &amp;gt;= .75 then …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 07 Jun 2008 13:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-07:/2008_06_07-genius_move_characteristic_functions.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>My Query Is Slow -- What To Do? Or Dumb-As-A-Post SQL (Revised)</title><link>https://slott56.github.io/2008_06_06-my_query_is_slow_what_to_do_or_dumb_as_a_post_sql_revised.html</link><description>&lt;p&gt;First, let me point out that the Data Cartel (&amp;quot;DBA&amp;quot; means Don't Bother Asking) won't release all the information I requested, so some of this is a guess.&lt;/p&gt;
&lt;p&gt;We'll look at a number of dumb-as-a-post SQL techniques.  This is proof -- if any were needed -- that bad SQL is worse than …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 06 Jun 2008 22:30:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-06:/2008_06_06-my_query_is_slow_what_to_do_or_dumb_as_a_post_sql_revised.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Tech Visionaries</title><link>https://slott56.github.io/2008_06_06-tech_visionaries.html</link><description>&lt;p&gt;See PC World, &amp;quot;&lt;a class="reference external" href="http://www.pcworld.com/article/id,145290/article.html?tk=nl_wbxnws"&gt;Top 50 Tech Visionaries&lt;/a&gt; .&amp;quot;&lt;/p&gt;
&lt;p&gt;I spent some quality time reading RFC's once upon a time.  It was the mid '90's and a client had a desktop application that depended on embedded FTP client that submitted batch jobs to a mainframe.&lt;/p&gt;
&lt;p&gt;[&lt;strong&gt;Note&lt;/strong&gt;.  It was the 90's.  Desktop computing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 06 Jun 2008 10:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-06:/2008_06_06-tech_visionaries.html</guid><category>News</category><category>news</category></item><item><title>In Praise of Serialization via __repr__ (Revised)</title><link>https://slott56.github.io/2008_06_03-in_praise_of_serialization_via___repr___revised.html</link><description>&lt;p&gt;The problem is this: parsing HTML from a variety of sources to create pleasant, easy-to-manipulate spreadsheets.  HTML can represent the same data in a variety of ways, even within a single web site.  What we have are several layers of parsing; layers which must be linked with increasingly simplified intermediate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jun 2008 09:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-06-03:/2008_06_03-in_praise_of_serialization_via___repr___revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category><category>html</category></item><item><title>Building Skills in OO Design -- Updated</title><link>https://slott56.github.io/2008_05_31-building_skills_in_oo_design_updated.html</link><description>&lt;p&gt;The updates to &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;Building Skills in Object-Oriented Design&lt;/a&gt;  cover some notes on testing, Agility and rework, two ongoing themes that can't be emphasized enough.&lt;/p&gt;
&lt;p&gt;There were two small updates regarding testability.&lt;/p&gt;
&lt;p&gt;First, creating Outcome instances — for testing purposes — does involve an ugly hack of repeating the payout odds.  Since we're …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 31 May 2008 20:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-31:/2008_05_31-building_skills_in_oo_design_updated.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>My Peers Don't Get PL/SQL, What Can I Do?</title><link>https://slott56.github.io/2008_05_30-my_peers_dont_get_plsql_what_can_i_do.html</link><description>&lt;p&gt;The email from a developer starts with a complaint and moves on to a plea: &amp;quot;I am constantly having to look at &amp;quot;IF o_status = 0&amp;quot;. Code would be a lot more compact and easy to read if exceptions were used.
Request favor: Please consider blogging about using exception handling vs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 30 May 2008 00:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-30:/2008_05_30-my_peers_dont_get_plsql_what_can_i_do.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>pl/sql</category></item><item><title>Brain Dead and Visual Basic: Coincidence?</title><link>https://slott56.github.io/2008_05_27-brain_dead_and_visual_basic_coincidence.html</link><description>&lt;p&gt;Don't ask why.  I can't explain it without violating a Non-Disclosure Agreement.&lt;/p&gt;
&lt;p&gt;However, check this out.  Search for NMEA Checksum VB.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.experts-exchange.com/Databases/GIS_GPS/Q_21413235.html"&gt;http://www.experts-exchange.com/Databases/GIS_GPS/Q_21413235.html&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codepedia.com/1/Calculating+and+Validating+NMEA+Checksums"&gt;http://www.codepedia.com/1/Calculating+and+Validating+NMEA+Checksums&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.codepedia.com/1/Taking+Out+the+Garbage:+NMEA+Checksums"&gt;http://www.codepedia.com/1/Taking+Out+the+Garbage:+NMEA+Checksums …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 May 2008 23:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-27:/2008_05_27-brain_dead_and_visual_basic_coincidence.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Some "Duck Typing Can't Scale" crap-ola</title><link>https://slott56.github.io/2008_05_24-some_duck_typing_cant_scale_crap_ola.html</link><description>&lt;p&gt;This put me over the edge.   Go deh! has a deep analysis of in &amp;quot;&lt;a class="reference external" href="http://paddy3118.blogspot.com/2008/05/duck-typing-done-right-is-wrong.html"&gt;Duck Typing Done Right is Wrong&lt;/a&gt; &amp;quot;.  It took a minute to parse, but the article is excellent.   (A less obscure title would quote the original posting properly: '&amp;quot;Duck Typing Done Right&amp;quot; is Wrong', but that's less …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 24 May 2008 11:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-24:/2008_05_24-some_duck_typing_cant_scale_crap_ola.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Keeping the Customer Satisfied</title><link>https://slott56.github.io/2008_05_14-keeping_the_customer_satisfied.html</link><description>&lt;p&gt;Here's some reference information on the &amp;quot;Cone of Uncertainty&amp;quot;.  JB says that Steve McConnell popularized it.  There's an orphaned &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Cone_of_Uncertainty"&gt;wikipedia article&lt;/a&gt; , a &lt;a class="reference external" href="http://www.construx.com/Page.aspx?hid=1648"&gt;note&lt;/a&gt;  on Construx.com's site, an &lt;a class="reference external" href="http://csdl2.computer.org/persagen/DLAbsToc.jsp?resourcePath=/dl/mags/so/&amp;amp;toc=comp/mags/so/2006/03/s3toc.xml&amp;amp;DOI=10.1109/MS.2006.82"&gt;article&lt;/a&gt;  in the IEEE Digital Library, and an &lt;a class="reference external" href="http://www.microsoft.com/china/technet/images/itsolutions/techguide/innsol/images/msfpmd07.gif"&gt;image&lt;/a&gt;  on Microsoft's china site.&lt;/p&gt;
&lt;p&gt;It's crap.  Why do we use it?  Because it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 May 2008 22:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-14:/2008_05_14-keeping_the_customer_satisfied.html</guid><category>Management</category><category>management</category></item><item><title>Parallelism Fetishes. #1: Equal-Sized Partitions</title><link>https://slott56.github.io/2008_05_12-parallelism_fetishes_1_equal_sized_partitions.html</link><description>&lt;p&gt;Let's talk about parallel processing, something I prefer to call concurrent processing.  It shows up in many places.  Most OS's have concurrent processes.  Applications like Apache have concurrent threads within a process for handling web requests.  Oracle not only handles concurrent queries from multiple users, but you can define a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 May 2008 12:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-12:/2008_05_12-parallelism_fetishes_1_equal_sized_partitions.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category><category>data structure</category><category>algorithm</category><category>concurrency</category></item><item><title>Python and the Star Schema</title><link>https://slott56.github.io/2008_05_09-python_and_the_star_schema.html</link><description>&lt;p&gt;The star schema represents data as a table of facts (measurable values) that are associated with the various dimensions of the fact.  Common dimensions include time, geography, organization, product and the like.  I'm working with some folks whose facts are a bunch of medical test results, and the dimensions are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 May 2008 10:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-09:/2008_05_09-python_and_the_star_schema.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category><category>data structure</category><category>algorithm</category><category>python</category><category>pycon</category></item><item><title>Standard Software Defects - Java Edition</title><link>https://slott56.github.io/2008_05_08-standard_software_defects_java_edition.html</link><description>&lt;p&gt;&lt;strong&gt;NUT&lt;/strong&gt;.  No Unit Test Cases.  Need I say more?  If there are not unit tests, this isn't real programming.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MCF&lt;/strong&gt;  and &lt;strong&gt;NCF&lt;/strong&gt;.  Minimal/No Use of Collections Framework.  The &lt;strong&gt;MCF&lt;/strong&gt;  defect occurs when someone uses only the Array or Vector classes.  The &lt;strong&gt;NCF&lt;/strong&gt;  defect occurs when someone uses only primitive …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 08 May 2008 12:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-05-08:/2008_05_08-standard_software_defects_java_edition.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>defects</category></item><item><title>Three More False Dichotomies -- Plus a Bonus Misdirection</title><link>https://slott56.github.io/2008_04_28-three_more_false_dichotomies_plus_a_bonus_misdirection.html</link><description>&lt;p&gt;What I said: &amp;quot;How about using the RDBMS product appropriately ? It's for persistence. Do processing in another product, appropriate for processing: Java.&amp;quot;&lt;/p&gt;
&lt;p&gt;What it became: &amp;quot;why not use a file system and skip the expense and overhead of an RDBMS ?&amp;quot;&lt;/p&gt;
&lt;p&gt;I was shocked that numerous good features of the RDBMS …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Apr 2008 23:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-28:/2008_04_28-three_more_false_dichotomies_plus_a_bonus_misdirection.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category></item><item><title>Tackling the Spreadsheet Problem</title><link>https://slott56.github.io/2008_04_27-tackling_the_spreadsheet_problem.html</link><description>&lt;p&gt;It's not that spreadsheets are evil incarnate, it's just that there are so many ways to abuse them.  Spreadsheets put a veneer of structure over some information.  Bad spreadsheet design, worse yet, puts unstructured information into a hard-to-manipulate format.&lt;/p&gt;
&lt;p&gt;I've complained about this before.  See &lt;a class="reference external" href="https://slott56.github.io/2007_02_07-great_quotes_about_the_spreadsheet_problemtm.html"&gt;Great Quotes about the Spreadsheet …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 27 Apr 2008 12:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-27:/2008_04_27-tackling_the_spreadsheet_problem.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>spreadsheet</category></item><item><title>SOA New Realities</title><link>https://slott56.github.io/2008_04_23-soa_new_realities.html</link><description>&lt;p&gt;I'm not a fan of XML as the one true language.  I've griped before about the attractive nuisance of XML.&lt;/p&gt;
&lt;p&gt;Recently, I saw Sean McGrath's &lt;a class="reference external" href="http://seanmcgrath.blogspot.com/2008/04/new-realities.html"&gt;New Realities&lt;/a&gt; , which lead me to &lt;a class="reference external" href="http://www.projectzero.org/"&gt;Project Zero&lt;/a&gt; , a RESTful/JSONic SOA architecture.  Their blog includes postings like &lt;a class="reference external" href="http://www.projectzero.org/wiki/bin/view/Community/JerrysBlog/BlogEntry5"&gt;A run-time for &amp;quot;the New Reality&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 Apr 2008 10:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-23:/2008_04_23-soa_new_realities.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>The Half-Truth About Consultants</title><link>https://slott56.github.io/2008_04_20-the_half_truth_about_consultants.html</link><description>&lt;p&gt;Some of Cringley's The &lt;a class="reference external" href="http://www.pbs.org/cringely/pulpit/2008/pulpit_20080418_004737.html"&gt;Truth About IT Consultants&lt;/a&gt;  is good stuff.  His Type &amp;quot;A&amp;quot; and Type &amp;quot;C&amp;quot; are both stories of consultants who are brought in because they have specific skills.  In the &amp;quot;A&amp;quot; case, it's a technical skill, and in the &amp;quot;C&amp;quot; case it's project management.&lt;/p&gt;
&lt;p&gt;In both cases …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 20 Apr 2008 11:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-20:/2008_04_20-the_half_truth_about_consultants.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>Innovation Pushed to Vendors</title><link>https://slott56.github.io/2008_04_16-innovation_pushed_to_vendors.html</link><description>&lt;p&gt;Here's the analysis.&lt;/p&gt;
&lt;p&gt;&amp;quot;60 cents of every IT dollar goes to maintaining existing systems&amp;quot;.  &amp;quot;This increased 'run the business' spending has consumed budget resources that were originally earmarked for more strategic and transformational investment,&amp;quot; writes Gartner analyst Jed Rubin.&lt;/p&gt;
&lt;p&gt;So, what happens with the &amp;quot;innovation&amp;quot; portion of the budget?&lt;/p&gt;
&lt;p&gt;In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 16 Apr 2008 10:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-16:/2008_04_16-innovation_pushed_to_vendors.html</guid><category>Management</category><category>management</category></item><item><title>Abuses of Use Cases - a Failure Taxonomy</title><link>https://slott56.github.io/2008_04_15-abuses_of_use_cases_a_failure_taxonomy.html</link><description>&lt;p&gt;I've seen a couple of recent use case problems.  The first recent failure of use cases was particularly alarming.  It was a small application; a few use cases, a couple of actors.&lt;/p&gt;
&lt;p&gt;One of the actors was labeled as &amp;quot;End User&amp;quot;.  Seriously.  Few labels could be as vague as End …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 15 Apr 2008 01:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-15:/2008_04_15-abuses_of_use_cases_a_failure_taxonomy.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>requirements</category></item><item><title>XKCD summarizes Python nicely</title><link>https://slott56.github.io/2008_04_13-xkcd_summarizes_python_nicely.html</link><description>&lt;p&gt;See the &lt;a class="reference external" href="http://xkcd.com/409/"&gt;Electric Skateboard&lt;/a&gt;  in XKCD.  &amp;quot;You don't realize how much time you were spending on the boring parts until you don't have to do them anymore.&amp;quot;&lt;/p&gt;
&lt;p&gt;A helpful answer to &amp;quot;Why is Python so cool?&amp;quot;  &lt;strong&gt;Fewer Boring Parts&lt;/strong&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 13 Apr 2008 02:30:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-13:/2008_04_13-xkcd_summarizes_python_nicely.html</guid><category>News</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Innovation includes Failure (some organizations call it "Learning", however)</title><link>https://slott56.github.io/2008_04_09-innovation_includes_failure_some_organizations_call_it_learning_however.html</link><description>&lt;p&gt;Some reading:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.itworld.com/AppDev/flexible-software-application-design-nlstipsm-080408/index.html"&gt;Flexible Software is Error-Enabling Software&lt;/a&gt; , by Sean McGrath.  If users can make changes, they can make mistakes.  Why would you allow users to make changes?  It's their process, it's their data.  But, everyone in IT is absolutely sure that end users a lying gypsies.  After all, if you …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 09 Apr 2008 13:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-09:/2008_04_09-innovation_includes_failure_some_organizations_call_it_learning_however.html</guid><category>Management</category><category>management</category></item><item><title>Building Skills Updates</title><link>https://slott56.github.io/2008_04_08-building_skills_updates.html</link><description>&lt;p&gt;Many, many thanks to readers who sent in comments, questions, suggestions and corrections.&lt;/p&gt;
&lt;p&gt;I've updated &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/python.html"&gt;Building Skills in Python&lt;/a&gt;  to correct the errors found so far.&lt;/p&gt;
&lt;p&gt;Also, in the process, I've revised chapter 36 a bit.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 08 Apr 2008 13:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-08:/2008_04_08-building_skills_updates.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Airport Extreme + Time Machine. Wow!</title><link>https://slott56.github.io/2008_04_07-airport_extreme_time_machine_wow.html</link><description>&lt;div class="section" id="attempt-1-plug-in-the-disk-create-users-fail"&gt;
&lt;h2&gt;Attempt 1 - Plug in the disk.  Create users.  Fail.&lt;/h2&gt;
&lt;p&gt;Time Machine won't use a networked disk.  The &lt;a class="reference external" href="http://www.apple.com/macosx/features/timemachine.html"&gt;advertising&lt;/a&gt;  and documentation is pretty clear that Time Machine wants USB or FireWire storage.&lt;/p&gt;
&lt;p&gt;And this is Apple, it either works seamlessly, silently or automatically, or I've got the wrong use case.  So …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 07 Apr 2008 13:55:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-07:/2008_04_07-airport_extreme_time_machine_wow.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Technology and New Business Models</title><link>https://slott56.github.io/2008_04_02-technology_and_new_business_models.html</link><description>&lt;p&gt;Let's look at one failing business model: record sales.  See Ars Technica for one summary: &lt;a class="reference external" href="http://arstechnica.com/news.ars/post/20051003-5381.html"&gt;Legal music downloads soar as CD sales fall&lt;/a&gt; .  That's news from 3 years ago.  Look at Digital Media Wire's report from this year &amp;quot;&lt;a class="reference external" href="http://www.dmwmedia.com/news/2008/02/19/report:-digital-music-download-sales-pass-cd-sales-2012"&gt;Digital Music Download Sales to Pass CD Sales by 2012&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;What does …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 Apr 2008 19:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-02:/2008_04_02-technology_and_new_business_models.html</guid><category>Management</category><category>management</category></item><item><title>POPO and GOPS - Plain Old Python Objects and Good Old Python Syntax</title><link>https://slott56.github.io/2008_04_01-popo_and_gops_plain_old_python_objects_and_good_old_python_syntax.html</link><description>&lt;p&gt;Processing XML and X12 messages is a struggle.  You have a number of use cases (I listed a bunch of features in &lt;a class="reference external" href="https://slott56.github.io/2008_03_31-synchronicity_and_document_object_models.html"&gt;Synchronicity and Document Object Models&lt;/a&gt; ).  These can be tackled a number of ways.&lt;/p&gt;
&lt;p&gt;What spoils me is the Object Relational Mapping (ORM) in &lt;a class="reference external" href="http://www.sqlalchemy.org/"&gt;SQLAlchemy&lt;/a&gt;  and the &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;  ORM …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Apr 2008 10:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-04-01:/2008_04_01-popo_and_gops_plain_old_python_objects_and_good_old_python_syntax.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>xml</category><category>edi</category><category>x12</category></item><item><title>Synchronicity and Document Object Models</title><link>https://slott56.github.io/2008_03_31-synchronicity_and_document_object_models.html</link><description>&lt;p&gt;Message-oriented applications involve an interface defined around messages (or documents).  I've been working on applications that involve a fair amount of manipulation of XML and X12.  Recently I started yet another, and started to recognize the essential design patterns.&lt;/p&gt;
&lt;p&gt;There are four use cases.  The first two use cases define …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 31 Mar 2008 15:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-31:/2008_03_31-synchronicity_and_document_object_models.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>xml</category><category>edi</category><category>x12</category></item><item><title>Python as Configuration Language -- More Good Ideas</title><link>https://slott56.github.io/2008_03_28-python_as_configuration_language_more_good_ideas.html</link><description>&lt;p&gt;Some recent thoughts on using Python, directly, as configuration file syntax.  In a way, a configuration is a highly-specialized Domain Specific Language focused on the application's problem domain.  The point is to leverage syntax we already have to create meaningful configuration files.&lt;/p&gt;
&lt;p&gt;&amp;quot;Python is sometimes a good use for a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 28 Mar 2008 21:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-28:/2008_03_28-python_as_configuration_language_more_good_ideas.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category></item><item><title>The Django World-View: Model+Admin First; Built-in Transparency and Trustworthiness</title><link>https://slott56.github.io/2008_03_24-the_django_world_view_modeladmin_first_built_in_transparency_and_trustworthiness.html</link><description>&lt;p&gt;See Michael Hugos &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;articleId=314557"&gt;Think about screens and the data on them to simplify system development&lt;/a&gt; &amp;quot; for some helpful insight on what an &amp;quot;application&amp;quot; really is -- access to data.  Simple transparency is lifted up as a critical value for software.&lt;/p&gt;
&lt;p&gt;I liked the &amp;quot;If you don't believe it could be this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Mar 2008 18:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-24:/2008_03_24-the_django_world_view_modeladmin_first_built_in_transparency_and_trustworthiness.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>The Passive-Aggressive Programmer, part II</title><link>https://slott56.github.io/2008_03_24-the_passive_aggressive_programmer_part_ii.html</link><description>&lt;p&gt;Here are a few more Passive-Aggressive argument techniques that can derail a project. Rather than provide an alternative or improvement, this passive kind of aggression raises things which are &amp;quot;potential&amp;quot; problems or issues.  Things which serve only to raise doubts.&lt;/p&gt;
&lt;p&gt;This approach plays into the hands of risk-averse management.  It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Mar 2008 13:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-24:/2008_03_24-the_passive_aggressive_programmer_part_ii.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>iBlog Buggy... Since Leopard's release... No fixes in sight.</title><link>https://slott56.github.io/2008_03_19-iblog_buggy_since_leopards_release_no_fixes_in_sight.html</link><description>&lt;p&gt;This is a kind of &amp;quot;case study&amp;quot; post.  It happens -- frequently -- that I wind up in a situation similar to this one.  Usually it involves large, complex pieces of software and lots of people with strongly-held opinions.  I'm usually brought in toward the end, and have to discover the parts …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 19 Mar 2008 15:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-19:/2008_03_19-iblog_buggy_since_leopards_release_no_fixes_in_sight.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Consequences of Reverse Engineering</title><link>https://slott56.github.io/2008_03_13-consequences_of_reverse_engineering.html</link><description>&lt;p&gt;Here's one recent example of a significant bug.&lt;/p&gt;
&lt;p&gt;The code said A is not NULL OrElse A != &amp;quot; &amp;quot;, which doesn't do anything useful.  If A has non-NULL data, this is true.  The second part of the clause (A != &amp;quot; &amp;quot;) is only evaluated if A is NULL.  If A is NULL, no other …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Mar 2008 23:43:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-13:/2008_03_13-consequences_of_reverse_engineering.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Censorship - who wins?</title><link>https://slott56.github.io/2008_03_12-censorship_who_wins.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://blog.wired.com/27bstroke6/2008/03/godaddy-silence.html"&gt;GoDaddy Silences Police Watchdog Site RateMyCop.com&lt;/a&gt; .  As of 3/12/08, GoDaddy won't comment.&lt;/p&gt;
&lt;p&gt;So far, they didn't produce a takedown notice, or even notify the owner.  So I guess this means GoDaddy is not a good choice for hosting or Domain Name registration.  The good news is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 12 Mar 2008 10:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-12:/2008_03_12-censorship_who_wins.html</guid><category>News</category><category>news</category></item><item><title>Al Gore's Internet? Wait -- What?</title><link>https://slott56.github.io/2008_03_11-al_gores_internet_wait_what.html</link><description>&lt;p&gt;Here's the lead-off quote&lt;/p&gt;
&lt;p&gt;&amp;quot;Check out how insecure Al Gore's internet is ....&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://arstechnica.com/news.ars/post/20080225-insecure-routing-redirects-youtube-to-pakistan.html"&gt;http://arstechnica.com/news.ars/post/20080225-insecure-routing-redirects-youtube-to-pakistan.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While losing YouTube isn't really an issue, shows how fragile the networking infrastructure is worldwide.&lt;/p&gt;
&lt;p&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;Sigh.  The Pakistan story is only “insecurity” in the broadest, vaguest sense of “secure”.  It …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Mar 2008 20:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-11:/2008_03_11-al_gores_internet_wait_what.html</guid><category>News</category><category>news</category></item><item><title>Technical Debt, the Cost of Cheap and "Get This Done ACAP"</title><link>https://slott56.github.io/2008_03_08-technical_debt_the_cost_of_cheap_and_get_this_done_acap.html</link><description>&lt;p&gt;See Martin Fowler's essay on &lt;a class="reference external" href="http://www.martinfowler.com/bliki/TechnicalDebt.html"&gt;Technical Debt&lt;/a&gt; .  Also see Steve McConnell's thoughts &amp;lt;&lt;a class="reference external" href="http://blogs.construx.com/blogs/stevemcc/archive/2007/11/01/technical-debt-2.aspx"&gt;http://blogs.construx.com/blogs/stevemcc/archive/2007/11/01/technical-debt-2.aspx&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We can use Agile techniques to get things done ASAP and ACAP (As Soon As Possible and As Cheap As Possible).  However, we still need to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 08 Mar 2008 15:30:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-08:/2008_03_08-technical_debt_the_cost_of_cheap_and_get_this_done_acap.html</guid><category>Management</category><category>management</category></item><item><title>Physical Database Design Questions -- Some Inner Mysteries</title><link>https://slott56.github.io/2008_03_01-physical_database_design_questions_some_inner_mysteries.html</link><description>&lt;p&gt;I have to say this first -- just because ERwin calls it &amp;quot;physical&amp;quot; that doesn't mean anything.  ERwin uses &amp;quot;physical&amp;quot; model to mean &amp;quot;product-specific logical&amp;quot; model.  They use &amp;quot;logical&amp;quot; to mean &amp;quot;product-independent logical&amp;quot; model.&lt;/p&gt;
&lt;p&gt;ERwin doesn't do &lt;em&gt;physical&lt;/em&gt;  modeling.  Not even a little bit.  The physical layer of a relational database …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 01 Mar 2008 19:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-03-01:/2008_03_01-physical_database_design_questions_some_inner_mysteries.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category><category>data structure</category><category>algorithm</category></item><item><title>More Programming for n00bz</title><link>https://slott56.github.io/2008_02_23-more_programming_for_n00bz.html</link><description>&lt;p&gt;Back in December, I posted &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2007_12_19-i_havent_written_a_program_in_years_how_do_i_rebuild_my_skills.html"&gt;I haven't written a program in years&lt;/a&gt; ...&amp;quot; with a tidy little example, suitable for someone who used to program.  The intent was to help them get a quick program written, leveraging their legacy skills using new tools.&lt;/p&gt;
&lt;p&gt;And (bonus to me) it helps me to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 23 Feb 2008 20:18:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-23:/2008_02_23-more_programming_for_n00bz.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Open Source and Corporate IT (again)</title><link>https://slott56.github.io/2008_02_15-open_source_and_corporate_it_again.html</link><description>&lt;p&gt;Someone sent this question to their manager and included me on the CC: list.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Would you consider tools like Django to quickly build web apps ?&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;My suggestion is that a bald query like this can only get on of two possible answers: &amp;quot;No&amp;quot; (and a large number of unsubtle variations …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 15 Feb 2008 21:26:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-15:/2008_02_15-open_source_and_corporate_it_again.html</guid><category>Management</category><category>management</category></item><item><title>Why Agile? What's the Point?</title><link>https://slott56.github.io/2008_02_14-why_agile_whats_the_point.html</link><description>&lt;p&gt;TC's full quote was &amp;quot;We consume a significant portion of the overall contract generating a functional specification whose sole use is to serve as the outline for the acceptance test. Those who choose to argue this point might like to explain the recurring customer comment 'You did an excellent job …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Feb 2008 11:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-14:/2008_02_14-why_agile_whats_the_point.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>softare design</category><category>agile</category><category>management</category></item><item><title>The Waterfall's Not Working -- Even A Client Said So</title><link>https://slott56.github.io/2008_02_11-the_waterfalls_not_working_even_a_client_said_so.html</link><description>&lt;p&gt;TC Writes &amp;quot;With 30 years in the biz, I’ve experienced all the pains associated with a rigid linear approach (functional spec -&amp;gt; design doc -&amp;gt; code -&amp;gt; integrate -&amp;gt; acceptance test, always being sure to maintain a current version of the traceability matrix). An iterative approach is inherently more appealing, but I’m …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 11 Feb 2008 11:23:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-11:/2008_02_11-the_waterfalls_not_working_even_a_client_said_so.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>agile</category><category>management</category></item><item><title>Quantum Time: Dates, Times, DateTimes and Timestamps (3rd ed.)</title><link>https://slott56.github.io/2008_02_09-quantum_time_dates_times_datetimes_and_timestamps_3rd_ed.html</link><description>&lt;p&gt;Time is simple.  You can make it complicated with any one of a large number of dumb-as-dirt decisions.&lt;/p&gt;
&lt;p&gt;In the &lt;strong&gt;Real World&lt;/strong&gt;™, time may be a quantum field (read stuff by &lt;a class="reference external" href="http://books.google.com/books?id=uPao7ThZEZAC"&gt;'t Hooft&lt;/a&gt; ).  For that matter, space itself may have some quantum granularity.  Or, this could be a handy hack …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 09 Feb 2008 12:57:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-09:/2008_02_09-quantum_time_dates_times_datetimes_and_timestamps_3rd_ed.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Python's Duck Typing Not General Enough; SQL's Minimally Typed Foreign Keys Not General Enough. Debugging Hilarity Ensues.</title><link>https://slott56.github.io/2008_02_05-pythons_duck_typing_not_general_enough_sqls_minimally_typed_foreign_keys_not_general_enough_debugging_hilarity_ensues.html</link><description>&lt;p&gt;The money quote was this &amp;quot;It’s not a big leap then for me to consolidate all three of those into one uber relationship table...&amp;quot;.&lt;/p&gt;
&lt;p&gt;The question was a good one because it involved the classic higher-order database relationship.&lt;/p&gt;
&lt;p&gt;The canonical SQL relationships are binary equi-join relationships that can be …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 05 Feb 2008 02:24:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-05:/2008_02_05-pythons_duck_typing_not_general_enough_sqls_minimally_typed_foreign_keys_not_general_enough_debugging_hilarity_ensues.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>database design</category></item><item><title>Open-Ended Date Ranges -- The "From Here to Eternity" Problem</title><link>https://slott56.github.io/2008_02_02-open_ended_date_ranges_the_from_here_to_eternity_problem.html</link><description>&lt;p&gt;There aren't too many variations on the open-ended date range problem.  We have a table of events or rules or policies that have start dates.  Some have end dates, because they've been replaced or superseded.  Others don't have end-dates because they apply for the foreseeable future.&lt;/p&gt;
&lt;p&gt;There are two kinds …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Feb 2008 03:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-02-02:/2008_02_02-open_ended_date_ranges_the_from_here_to_eternity_problem.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Building Skills In Python - 2.5 Edition</title><link>https://slott56.github.io/2008_01_28-building_skills_in_python_25_edition.html</link><description>&lt;p&gt;I've upgraded my
&lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/python.html"&gt;Building Skills in Python&lt;/a&gt;
to cover the 2.5 release.  It didn't take as long as I'd anticipated.&lt;/p&gt;
&lt;p&gt;The new features list for Python 2.5 is mercifully short.  I did a fair amount of reorganization to consolidate some things that had grown or split needlessly.&lt;/p&gt;
&lt;p&gt;Changes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Jan 2008 11:24:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-28:/2008_01_28-building_skills_in_python_25_edition.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Configuration File Scalability -- Who Knew? (Revised)</title><link>https://slott56.github.io/2008_01_26-configuration_file_scalability_who_knew_revised.html</link><description>&lt;p&gt;Background: I'm looking at parsing certain X12N messages.  There's a Perl program on CPAN to do &lt;a class="reference external" href="http://search.cpan.org/~prasad/X12-0.08/lib/X12/Parser.pm"&gt;X12 parsing&lt;/a&gt; ; the program itself isn't useful, but the X12 messages are defined via INI files.  There's also a &lt;a class="reference external" href="http://pyx12.sourceforge.net/"&gt;Python X12&lt;/a&gt;  parser with the X12 messages defined via XML files.  I don't really like …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 26 Jan 2008 23:12:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-26:/2008_01_26-configuration_file_scalability_who_knew_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Two Python Config-File Design Patterns</title><link>https://slott56.github.io/2008_01_19-two_python_config_file_design_patterns.html</link><description>&lt;p&gt;I hate to complain, but there's a Python syntax rule that has slightly cramped my style.  The problem stems from a need to describe a really complex and extensible structure.&lt;/p&gt;
&lt;p&gt;We need to describe X12N messages, which have a rather complex structure, and the structure can be customized.  While the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 19 Jan 2008 13:23:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-19:/2008_01_19-two_python_config_file_design_patterns.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category><category>edi</category><category>x12</category></item><item><title>Python as Config Language -- Forget XML and INI files</title><link>https://slott56.github.io/2008_01_12-python_as_config_language_forget_xml_and_ini_files.html</link><description>&lt;p&gt;See Sean McGrath's &lt;a class="reference external" href="http://itworlddaily.blogspot.com/2008/01/spot-warning-signs-in-configuration.html"&gt;Spot the warning signs in configuration file design&lt;/a&gt;  for thoughts on the ever-gnarly problem of how to provide a workable set of configuration parameters to a program.&lt;/p&gt;
&lt;p&gt;A programming language has all the advantages as a language for encoding parameters.  I see why it's rare -- too many …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 12 Jan 2008 01:54:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-12:/2008_01_12-python_as_config_language_forget_xml_and_ini_files.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>python</category></item><item><title>I Thought It Was Just Me</title><link>https://slott56.github.io/2008_01_05-i_thought_it_was_just_me.html</link><description>&lt;p&gt;See Scott Ambler's article in &lt;a class="reference external" href="http://ddj.com"&gt;Dr. Dobb's Journal&lt;/a&gt; , &amp;quot;&lt;a class="reference external" href="http://ddj.com/architect/205207998"&gt;Scaling Test-Driven Development&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;Recently, I'd seen some notes in SD Times on a similar theme, and blogged that in &lt;a class="reference external" href="https://slott56.github.io/2007_12_07-not_quite_following_the_book.html"&gt;Not Quite Following the Book&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;Ambler's point seems to be the same as Coplien's: &amp;quot;High-level architecture sketches created during your Iteration 0 envisioning …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 05 Jan 2008 14:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-05:/2008_01_05-i_thought_it_was_just_me.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Is This Software World's Equivalent of The Perpetual Motion Machine?</title><link>https://slott56.github.io/2008_01_03-is_this_software_worlds_equivalent_of_the_perpetual_motion_machine.html</link><description>&lt;p&gt;See Spolsky's &lt;a class="reference external" href="http://www.joelonsoftware.com/items/2007/12/03.html"&gt;Talks at Yale, Part 1 of 3&lt;/a&gt;  for a fairly typical summary of formal methods in software development.  Here's the part RL liked: &amp;quot;Now, if the spec does define everything about how the program is going to behave, then, lo and behold, it contains all the information necessary …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Jan 2008 11:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2008-01-03:/2008_01_03-is_this_software_worlds_equivalent_of_the_perpetual_motion_machine.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Model - View - Controller, and Related Patterns</title><link>https://slott56.github.io/2007_12_26-model_view_controller_and_related_patterns.html</link><description>&lt;p&gt;TP sent me this great link on MVC and related patterns.  It's Ctrl-Shift-B's posting, &lt;a class="reference external" href="http://ctrl-shift-b.blogspot.com/2007/08/interactive-application-architecture.html"&gt;Interactive Application Architecture Patterns&lt;/a&gt; .  It is helpful at disentangling the distinctions between various kinds of model-view-controller, and model-view-presenter alternatives.&lt;/p&gt;
&lt;p&gt;This is important because the terminology gets borrowed and adulterated sometimes.  When we look at &lt;a class="reference external" href="http://struts.apache.org/"&gt;Struts&lt;/a&gt; , we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Dec 2007 03:08:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-26:/2007_12_26-model_view_controller_and_related_patterns.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>How Essential Is Unit Testing? Or, How Do We Make It Essential?</title><link>https://slott56.github.io/2007_12_24-how_essential_is_unit_testing_or_how_do_we_make_it_essential.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://thomas.apestaart.org/log/?p=559"&gt;Present Perfect&lt;/a&gt;  for some thoughts on unit testing.   See some other commentary on the discipline required to write Python programs in &lt;a class="reference external" href="http://panela.blog-city.com/gnome_devs_too_lazy_for_python.htm"&gt;Gnome devs too lazy for python&lt;/a&gt; .  I think I see the disconnect that makes testing appear to be too costly; I think that some basic &amp;quot;meta-quality attributes&amp;quot; are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Dec 2007 11:31:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-24:/2007_12_24-how_essential_is_unit_testing_or_how_do_we_make_it_essential.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>I haven't written a program in years. How do I rebuild my skills?</title><link>https://slott56.github.io/2007_12_19-i_havent_written_a_program_in_years_how_do_i_rebuild_my_skills.html</link><description>&lt;p&gt;Here's part of a recent email, subject &amp;quot;Antique Programmer in search of face lift and/or brain transplant as appropriate...&amp;quot;.  It was from a VP/Director kind of person who'd been away from hands-on technology for a few years.&lt;/p&gt;
&lt;p&gt;&amp;quot;I’ve got a new Vista PC with dual drives so …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 19 Dec 2007 13:42:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-19:/2007_12_19-i_havent_written_a_program_in_years_how_do_i_rebuild_my_skills.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Building Skills in Python</title><link>https://slott56.github.io/2007_12_17-building_skills_in_python.html</link><description>&lt;p&gt;Since I spend a lot of time on skill upgrades for my clients, my books are oriented around that theme.  It's something that I learned from &lt;a class="reference external" href="http://www.dorsethouse.com/authors/bullock.html"&gt;Jim Bullock&lt;/a&gt; : there's a &lt;strong&gt;Clue Absorption Rate&lt;/strong&gt;, and you can't exceed that rate.  These books are about building skills incrementally.&lt;/p&gt;
&lt;p&gt;I've got three Python-related …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 17 Dec 2007 15:38:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-17:/2007_12_17-building_skills_in_python.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Database Design and UML - What was the question again?</title><link>https://slott56.github.io/2007_12_15-database_design_and_uml_what_was_the_question_again.html</link><description>&lt;p&gt;One issue in creating a database design is working around the limitations inherent in the SQL data model.  I'm going to call it the SQL model because you can make the case that the entity-relationship (ER) model is an abstraction and could have a far more expressive implementation.  I'm going …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 15 Dec 2007 13:08:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-15:/2007_12_15-database_design_and_uml_what_was_the_question_again.html</guid><category>Management</category><category>management</category></item><item><title>Not Quite Following the Book</title><link>https://slott56.github.io/2007_12_07-not_quite_following_the_book.html</link><description>&lt;p&gt;I can't find all of the &lt;strong&gt;Better Software Magazine&lt;/strong&gt; articles on the &lt;a class="reference external" href="http://www.stickyminds.com"&gt;Sticky Minds&lt;/a&gt;  web site, so I can't provide a permalink.  But look for &amp;quot;A Story About User Stories and Test Driven Development&amp;quot;.  It's good stuff, weighing out the good and bad features of &amp;quot;by-the-book&amp;quot; TDD.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://ddj.com/"&gt;Dr. Dobb's Journal …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 Dec 2007 21:23:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-07:/2007_12_07-not_quite_following_the_book.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Too Much of the Wrong Kind of Fun or The Object Model To The Rescue</title><link>https://slott56.github.io/2007_12_03-too_much_of_the_wrong_kind_of_fun_or_the_object_model_to_the_rescue.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2007_11_03-lenses_that_distort_our_software_flat_files_relational_databases_batch_processing.html"&gt;Lenses That Distort Our Software&lt;/a&gt; , I noted that the relational model of data can distort our view of the underlying reality that software models.  In that posting I was whining about how meaningful structure is sacrificed to force fit information into the rows and columns of the relational world …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 03 Dec 2007 03:04:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-12-03:/2007_12_03-too_much_of_the_wrong_kind_of_fun_or_the_object_model_to_the_rescue.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>object-oriented design</category><category>data structure</category><category>algorithm</category></item><item><title>The Passive-Aggressive Programmer or Why Nothing Gets Done (Revised)</title><link>https://slott56.github.io/2007_11_29-the_passive_aggressive_programmer_or_why_nothing_gets_done_revised.html</link><description>&lt;p&gt;I see organizations stymied by a few individuals that seem to subvert initiatives and prevent progress.  Or they somehow evade being useful and spend all their time in hand-wringing and &amp;quot;yeah-but&amp;quot;-ing.  I'm not sure how to exploit what they can do, while getting past the stalls and evasions.&lt;/p&gt;
&lt;p&gt;Here's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Nov 2007 11:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-11-29:/2007_11_29-the_passive_aggressive_programmer_or_why_nothing_gets_done_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Estimating, and the Unknown Unknowns</title><link>https://slott56.github.io/2007_11_11-estimating_and_the_unknown_unknowns.html</link><description>&lt;p&gt;Back in the olden days (ca. 1981) Barry Boehm's Software Engineering Economics provided a detailed and definitive guide to estimating.  It did one really important thing: it provided a conceptual model of software development that had a (relatively) focused set of degrees of freedom, an input driver and a couple …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 11 Nov 2007 20:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-11-11:/2007_11_11-estimating_and_the_unknown_unknowns.html</guid><category>Management</category><category>management</category></item><item><title>Lenses that Distort our Software: Flat Files, Relational Databases, Batch Processing</title><link>https://slott56.github.io/2007_11_03-lenses_that_distort_our_software_flat_files_relational_databases_batch_processing.html</link><description>&lt;p&gt;When approaching reverse-engineering, we have to partition the big puddle of code into some useful pieces that we can manage intellectually, and will likely become parts of the resulting application.  In some cases, this is either impossible or valueless.  It may be that the application is so hopelessly bad that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 03 Nov 2007 12:49:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-11-03:/2007_11_03-lenses_that_distort_our_software_flat_files_relational_databases_batch_processing.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>What Goes In the Database? Besides Data, of Course.</title><link>https://slott56.github.io/2007_11_01-what_goes_in_the_database_besides_data_of_course.html</link><description>&lt;p&gt;In order to talk about what goes in the database, we need to put the question into some kind of useful context.  Weirdly, the question came to me in a context so twisted and bizarre that it's a little hard to sort out what -- precisely -- was going on.  First, what …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Nov 2007 10:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-11-01:/2007_11_01-what_goes_in_the_database_besides_data_of_course.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>database design</category></item><item><title>Parallelism, Concurrency and Pipelines (Updated)</title><link>https://slott56.github.io/2007_10_29-parallelism_concurrency_and_pipelines_updated.html</link><description>&lt;p&gt;A taxonomy of pipeline alternatives is a big, hairy deal, involving lots of alternatives.  While your basic API methods are relatively few in number, each language and platform introduces new options.  Without some focus, it's challenging to produce a big, fluffy description of all potential alternatives.&lt;/p&gt;
&lt;p&gt;However, the interesting thing …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 29 Oct 2007 19:45:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-10-29:/2007_10_29-parallelism_concurrency_and_pipelines_updated.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>concurrency</category></item><item><title>Is it really test driven reverse engineering?</title><link>https://slott56.github.io/2007_10_21-is_it_really_test_driven_reverse_engineering.html</link><description>&lt;p&gt;When I was a kid, reverse engineering a legacy application was a challenge.  Tools were non-existent, and even a civilized practice like unit testing didn't really exist.  Now that we have test driven development, I think we can apply this to reverse engineering the billions of lines of legacy software …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 21 Oct 2007 21:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-10-21:/2007_10_21-is_it_really_test_driven_reverse_engineering.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>Obscure C-isms and How To Find Them</title><link>https://slott56.github.io/2007_10_19-obscure_c_isms_and_how_to_find_them.html</link><description>&lt;p&gt;This is not a Python to the rescue story.  This is a true, deeply horrible situation.  I was rescued by a reframing technique I'll call &lt;strong&gt;Extraction&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;First, the function had nested if's without enough else's -- the kind of thing that handles two of the four possible conditions.&lt;/p&gt;
&lt;pre class="literal-block"&gt;
if( a ) {
    if …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 19 Oct 2007 14:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-10-19:/2007_10_19-obscure_c_isms_and_how_to_find_them.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>My Bias is Showing</title><link>https://slott56.github.io/2007_10_10-my_bias_is_showing.html</link><description>&lt;p&gt;Why Python, indeed?&lt;/p&gt;
&lt;p&gt;&amp;quot;It's clear that &lt;em&gt;you&lt;/em&gt; find it easier and quicker to use Python, and that's fine. It's often quickest for people to use the tools that they know best.&amp;quot;&lt;/p&gt;
&lt;p&gt;As they say on Fark.com, &amp;quot;This&amp;quot;.&lt;/p&gt;
&lt;p&gt;However, the Python advantage doesn't stem from knowing Python better than Java …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 10 Oct 2007 10:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-10-10:/2007_10_10-my_bias_is_showing.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>SOA, Reuse and The Unmeasurable</title><link>https://slott56.github.io/2007_10_08-soa_reuse_and_the_unmeasurable.html</link><description>&lt;p&gt;I find the value proposition for a Service Oriented Architecture to be agility and simplicity.&lt;/p&gt;
&lt;p&gt;See Linthicum's Real World SOA blog postings, specifically &amp;quot;&lt;a class="reference external" href="http://weblog.infoworld.com/realworldsoa/archives/2007/10/core_value_of_a.html"&gt;Core Value of an SOA...&lt;/a&gt; &amp;quot;  Here's the interesting quote: &amp;quot;this does not mean that reuse is not a core value of SOA, but its value is much …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 08 Oct 2007 17:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-10-08:/2007_10_08-soa_reuse_and_the_unmeasurable.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>softare design</category><category>complexity</category><category>SOA</category><category>numerosity</category></item><item><title>SOA: Cheaper? Simpler?</title><link>https://slott56.github.io/2007_09_24-soa_cheaper_simpler.html</link><description>&lt;p&gt;My experience is that an SOA has the potential to be cheaper and simpler.  However, cheaper and simpler may not be the only value proposition.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/"&gt;Kontrawize&lt;/a&gt;  says:  &amp;quot;there is only something to gain with SOA for the parts of your software that genuinely have re-usable functionality, and are expected to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Sep 2007 16:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-09-24:/2007_09_24-soa_cheaper_simpler.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>SOA</category></item><item><title>Deconstructing Programs from C; or Finding The Objects™</title><link>https://slott56.github.io/2007_09_21-deconstructing_programs_from_c_or_finding_the_objects.html</link><description>&lt;p&gt;It's about 10,000 lines of C.  Much of the C is focused on &amp;quot;framework&amp;quot; issues -- logging, synchronization, parsing the parameters and that kind of thing.   In this case, it appears to be 30-50% of the original C code is stuff that is available in Java and can be removed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 Sep 2007 01:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-09-21:/2007_09_21-deconstructing_programs_from_c_or_finding_the_objects.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>unit testing</category><category>test-driven reverse engineering</category></item><item><title>ROI, NPV and Shermer's column in the July Scientific American , on Homo economicus (revised)</title><link>https://slott56.github.io/2007_09_08-roi_npv_and_shermers_column_in_the_july_scientific_american_on_homo_economicus_revised.html</link><description>&lt;p&gt;Michael Shermer's column, in the July 2007 &lt;em&gt;Scientific American&lt;/em&gt; , &amp;quot;&lt;a class="reference external" href="http://sciam.com/print_version.cfm?articleID=27333871-E7F2-99DF-3A66FD19F6C2AF91"&gt;The
Prospects for Homo economicus&lt;/a&gt; &amp;quot;, notes that we all impaired when it comes to
making economic decisions.&lt;/p&gt;
&lt;p&gt;Also, see Kathleen Melymuka's article in
the July 23, 2007 &lt;em&gt;Computerworld&lt;/em&gt; , &amp;quot;&lt;a class="reference external" href="http://www.computerworld.com/action/article.do?command=viewArticleBasic&amp;amp;taxonomyName=project_management&amp;amp;articleId=297575&amp;amp;taxonomyId=73&amp;amp;intsrc=kc_feat"&gt;Boiling the IT Frog&lt;/a&gt; &amp;quot;.   Harwell Thrasher
suggests that simple ROI calculations don't work …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 08 Sep 2007 19:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-09-08:/2007_09_08-roi_npv_and_shermers_column_in_the_july_scientific_american_on_homo_economicus_revised.html</guid><category>Management</category><category>management</category></item><item><title>Get this to "Work"</title><link>https://slott56.github.io/2007_08_27-get_this_to_work.html</link><description>&lt;p&gt;What I knew was this: I had a program, and I was supposed to make it work.  I went to a meeting, the responsibility was duly handed off to me.  &amp;quot;Alex has it mostly done, you just need to pitch in and help finish this by Friday.&amp;quot;&lt;/p&gt;
&lt;p&gt;Okay.&lt;/p&gt;
&lt;p&gt;I listened …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Aug 2007 10:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-27:/2007_08_27-get_this_to_work.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category><category>requirements</category></item><item><title>Something Else I Invented</title><link>https://slott56.github.io/2007_08_25-something_else_i_invented.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_07_04-what_i_love_about_python_what_i_hate_about_the_word_of_open_source.html"&gt;Recently&lt;/a&gt; , I found out that my HTML parser was only a mere shadow &lt;a class="reference external" href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful Soup&lt;/a&gt; .  I invented what is -- essentially -- a similar core structure.  I didn't carry it to the same level of completion.  From what little research I've done, my invention predates Beautiful Soup.&lt;/p&gt;
&lt;p&gt;It's one of those &amp;quot;collective …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 25 Aug 2007 11:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-25:/2007_08_25-something_else_i_invented.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>SOA, Web Services, and Other Religious Experiences</title><link>https://slott56.github.io/2007_08_17-soa_web_services_and_other_religious_experiences.html</link><description>&lt;p&gt;TC writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I’m sitting in the corner, considering SOA from various perspectives:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What sized company?&lt;/li&gt;
&lt;li&gt;When you sell/license the tech, what are you actually
trying to sell? The initial implementation, individual services, ???&lt;/li&gt;
&lt;li&gt;Chicken vs. egg – implement first or align the culture first?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;What is &lt;em&gt;our company's&lt;/em&gt;  approach?&lt;/p&gt;
&lt;p&gt;Has …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 17 Aug 2007 21:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-17:/2007_08_17-soa_web_services_and_other_religious_experiences.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>SOA</category></item><item><title>User Interface Testing</title><link>https://slott56.github.io/2007_08_14-user_interface_testing.html</link><description>&lt;p&gt;The question seemed simple, which testing framework is the simplest?  The situation is complex.  There's a web application, there are developers and there are testers.  The developers develop, and the testers test.  So far, not so complex.&lt;/p&gt;
&lt;p&gt;Here's the complexity.  The testers are pretty focused on manual point-and-click testing.  They …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 14 Aug 2007 10:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-14:/2007_08_14-user_interface_testing.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Problems, problems, problems</title><link>https://slott56.github.io/2007_08_08-problems_problems_problems.html</link><description>&lt;p&gt;Centuries ago -- it seems -- Jim Coplien facilitated a session for us at &lt;a class="reference external" href="http://hillside.net/chiliplop/"&gt;ChiliPLoP&lt;/a&gt; .  Eventually, I figured out that patterns are a solution to a problem in a context which resolves various alternative forces, and has some understood consequences.  Context - Problem - Forces - Solution - Consequences.&lt;/p&gt;
&lt;p&gt;In this month's CACM, the article on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 08 Aug 2007 19:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-08:/2007_08_08-problems_problems_problems.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Use Cases, Why Cases and The Bentley Test</title><link>https://slott56.github.io/2007_08_05-use_cases_why_cases_and_the_bentley_test.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://www.ddj.com/architect/201202946?cid=RSSfeed_DDJ_All"&gt;So What Are Requirements?&lt;/a&gt;  in Dr. Dobb's.&lt;/p&gt;
&lt;p&gt;I've seen requirements done badly.  I've seen some notable failures of the use case technique: almost entirely because people refuse to actually apply the technique; they refuse to write use cases from the actor's point of view.  I've whined about this before …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 05 Aug 2007 23:09:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-05:/2007_08_05-use_cases_why_cases_and_the_bentley_test.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>requirements</category></item><item><title>Dynamic Languages In The News</title><link>https://slott56.github.io/2007_08_03-dynamic_languages_in_the_news.html</link><description>&lt;p&gt;The Alex Handy story &lt;a class="reference external" href="http://www.sdtimes.com/article/LatestNews-20070715-12.html"&gt;Study Predicts Upswing in Dynamic Language Use&lt;/a&gt;  is old news, but when it's in a print publication like SD Times, then it starts to gain some traction.  And it's one of those journalistic things: you can't repeat the obvious without some kind of &amp;quot;angle&amp;quot;.  And the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 03 Aug 2007 13:57:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-08-03:/2007_08_03-dynamic_languages_in_the_news.html</guid><category>News</category><category>news</category></item><item><title>What I love about Python == what I hate about the word of open source</title><link>https://slott56.github.io/2007_07_04-what_i_love_about_python_what_i_hate_about_the_word_of_open_source.html</link><description>&lt;p&gt;The problem with Python is the vastness of the Open Source community.  You may think you have something cool for &lt;a class="reference external" href="../C1597055042/E20070702200105/index.html"&gt;HTML parsing&lt;/a&gt; , but then someone tells you about &lt;a class="reference external" href="http://www.crummy.com/software/BeautifulSoup/"&gt;Beautiful Soup&lt;/a&gt;  which already does it.&lt;/p&gt;
&lt;p&gt;In my defense, I actually did a version of this HTML parsing back in '02.  Indeed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 04 Jul 2007 14:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-07-04:/2007_07_04-what_i_love_about_python_what_i_hate_about_the_word_of_open_source.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>What I love about Python == What I hate about the HTML mixed-content model</title><link>https://slott56.github.io/2007_07_03-what_i_love_about_python_what_i_hate_about_the_html_mixed_content_model.html</link><description>&lt;p&gt;The &lt;a class="reference external" href="http://www.w3.org/TR/REC-xml/#sec-mixed-content"&gt;mixed content&lt;/a&gt;  model, defined succinctly in the XML standards, is pleasant enough for human communication, but leaves a lot to be desired.  For example, mapping a &lt;a class="reference external" href="http://www.xml.com/pub/a/2001/05/09/dtdtodbs.html?pagetarget="&gt;mixed content model to a relational database&lt;/a&gt;  is a hard problem.&lt;/p&gt;
&lt;p&gt;The problem is made worse when the document is HTML.  HTML doesn't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Jul 2007 00:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-07-03:/2007_07_03-what_i_love_about_python_what_i_hate_about_the_html_mixed_content_model.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>KTLO Management</title><link>https://slott56.github.io/2007_06_28-ktlo_management.html</link><description>&lt;p&gt;We wind up in this situation from time to time.&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Customer&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;[X] is broken, what will it cost to fix it?&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Us&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;Depends, but put $$$ in your budget.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Customer&lt;/strong&gt;:&lt;/dt&gt;
&lt;dd&gt;I can't afford $$$, I can barely afford to Keep The Lights On™!&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;At this point, the conversation is usually over.  There …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Jun 2007 19:20:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-28:/2007_06_28-ktlo_management.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category></item><item><title>State-Based Object Modeling</title><link>https://slott56.github.io/2007_06_25-state_based_object_modeling.html</link><description>&lt;p&gt;In &lt;a class="reference external" href="https://slott56.github.io/2005_10_16-object_modeling_revised.html"&gt;Object Modeling&lt;/a&gt; , I repeated a procedure for object identification that comes from the classic &lt;a class="reference external" href="http://www.amazon.com/Object-Oriented-Modeling-Design-James-Rumbaugh/dp/0136298419"&gt;Object-Oriented Modeling and Design&lt;/a&gt;  (Rumbaugh, et. al.)&lt;/p&gt;
&lt;p&gt;Objects are characterized by their state change.  Therefore, to distinguish among classes of objects, we need to determine if two objects have the same states and state transitions …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 25 Jun 2007 13:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-25:/2007_06_25-state_based_object_modeling.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>object-oriented design</category><category>methodology</category><category>process</category><category>agile</category></item><item><title>Django Project, Application and Database Naming</title><link>https://slott56.github.io/2007_06_22-django_project_application_and_database_naming.html</link><description>&lt;p&gt;When you start fresh (as I sometimes do), you create a &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt;  project into which you create your first application.  You use django-admin.py to spin up a project directory, and from in side there, use manage.py to create an application boilerplate.&lt;/p&gt;
&lt;p&gt;The Django folks are very clear on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 22 Jun 2007 19:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-22:/2007_06_22-django_project_application_and_database_naming.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>Java-related skills - response to a question</title><link>https://slott56.github.io/2007_06_20-java_related_skills_response_to_a_question.html</link><description>&lt;p&gt;I think that learning Java is challenging.  You've got to learn the language, object-oriented programming, the libraries and the endless Java Technologies.  The Java landscape is crowded with J*tx*  and &lt;em&gt;tx&lt;/em&gt; J add-ons, where &lt;em&gt;tx&lt;/em&gt;  is some technology abbreviation; for example, JAXWS, JAXB, SAAJ, JMS, JFC, JCE, JAAS, etc …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 20 Jun 2007 18:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-20:/2007_06_20-java_related_skills_response_to_a_question.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Methodologies we love to hate.</title><link>https://slott56.github.io/2007_06_19-methodologies_we_love_to_hate.html</link><description>&lt;p&gt;Today's entry in Scott Berkun's blog (&lt;a class="reference external" href="http://www.scottberkun.com/blog/2007/asshole-driven-development/#comment-146302"&gt;Asshole driven development&lt;/a&gt; ) is brilliantly scathing.  The comments are also handy for identifying the key dysfunctionality in an organization.&lt;/p&gt;
&lt;p&gt;A couple of years ago &lt;a class="reference external" href="http://www.mindspring.com/~mgrand/"&gt;Mark Grand&lt;/a&gt;  shared with me a number of things that seem to make software development needlessly clumsy and complex.  Indeed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 19 Jun 2007 23:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-19:/2007_06_19-methodologies_we_love_to_hate.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>softeware design</category><category>complexity</category></item><item><title>E-purchase woes</title><link>https://slott56.github.io/2007_06_14-e_purchase_woes.html</link><description>&lt;p&gt;I tried three times to square the order away.  I put in a bug report on Lifli's web site, got a response within 24 hours with my license key.&lt;/p&gt;
&lt;p&gt;Even though the on-line ordering is a little shaky, the customer service fills in the gaps.  I'm still satisfied.  I'm still …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Jun 2007 18:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-14:/2007_06_14-e_purchase_woes.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Maintenance and New Development</title><link>https://slott56.github.io/2007_06_14-maintenance_and_new_development.html</link><description>&lt;p&gt;I read recently a quick note on a &lt;a class="reference external" href="http://blog.vrplumber.com/1870"&gt;Very productive day&lt;/a&gt; .  New development feels more productive than maintenance because it's more &amp;quot;linear&amp;quot;; it sounds like that means fewer dead-ends, less exploration.&lt;/p&gt;
&lt;p&gt;I also read recently &amp;quot;&lt;a class="reference external" href="http://www.scottberkun.com/blog/2007/how-to-innovate-on-time/"&gt;How to innovate on time&lt;/a&gt; &amp;quot; where the trick is to increase your failure rate.  In …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 14 Jun 2007 13:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-06-14:/2007_06_14-maintenance_and_new_development.html</guid><category>Management</category><category>management</category></item><item><title>Programming for Non-Programmers Book</title><link>https://slott56.github.io/2007_05_31-programming_for_non_programmers_book.html</link><description>&lt;p&gt;The more time I spend coaching and teaching programmers, the more I am convinced that the bulk of programming is a core set of skills coupled with translations to a target language.&lt;/p&gt;
&lt;p&gt;However, not everything that's covered in ordinary Computer Science books is a core skill.  Some subtleties are features …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 May 2007 17:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-31:/2007_05_31-programming_for_non_programmers_book.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>PL/SQL and Java - The Benchmark Challenge (revised)</title><link>https://slott56.github.io/2007_05_27-plsql_and_java_the_benchmark_challenge_revised.html</link><description>&lt;p&gt;First, the confusion.  A couple of comments asked for code, offering to &amp;quot;fix&amp;quot; the problems.  Specifically, offering to optimize or improve the PL/SQL.  The code was already posted, but I failed to make that clear.  Here's a recap of the various blog entries on this subject.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://slott56.github.io/2007_03_23-plsql_vs_java_which_is_really_faster.html"&gt;PL/SQL vs …&lt;/a&gt;&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 27 May 2007 13:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-27:/2007_05_27-plsql_and_java_the_benchmark_challenge_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>pl/sql</category><category>java</category></item><item><title>PL/SQL vs. Java - Yet Again</title><link>https://slott56.github.io/2007_05_26-plsql_vs_java_yet_again.html</link><description>&lt;p&gt;There appear to be four responses.  Two were numbered, the third is a rambling thought on scalability, and the fourth
is a thought on management's discomfort with the truth.&lt;/p&gt;
&lt;div class="section" id="response-1-denial"&gt;
&lt;h2&gt;Response 1 -- Denial&lt;/h2&gt;
&lt;p&gt;&amp;quot;1) How can using Java/... be faster ? You have to go up and down the architectural stack of …&lt;/p&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 26 May 2007 14:43:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-26:/2007_05_26-plsql_vs_java_yet_again.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>pl/sql</category><category>java</category></item><item><title>Another Dimensional Model Implementation</title><link>https://slott56.github.io/2007_05_26-another_dimensional_model_implementation.html</link><description>&lt;p&gt;The &lt;a class="reference external" href="http://sourceforge.net/projects/cubulus/"&gt;Cubulus&lt;/a&gt;  project and &lt;a class="reference external" href="http://alxtoth.webfactional.com/"&gt;Alexandru Toth&lt;/a&gt; 's page describe an &amp;quot;OLAP Aggregation Engine&amp;quot;.  It is very nice to see advanced work done on the dimensional model.&lt;/p&gt;
&lt;p&gt;The cited research dates from 1999 (V. Markl, F. Ramsak, R. Bayer, &amp;quot;Improving OLAP Performance by Multidimensional Hierarchical Clustering&amp;quot;, &lt;em&gt;Proceedings of the Intl. Database …&lt;/em&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 26 May 2007 01:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-26:/2007_05_26-another_dimensional_model_implementation.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>"As the software industry shifts away from selling shrink-wrapped software..."</title><link>https://slott56.github.io/2007_05_23-as_the_software_industry_shifts_away_from_selling_shrink_wrapped_software.html</link><description>&lt;p&gt;In PC World, May 1st, there's one article, &amp;quot;&lt;a class="reference external" href="http://msn.pcworld.com/article/id,131421-page,1/article.html"&gt;Shrink-Wrapped Software's Days Numbered&lt;/a&gt; &amp;quot; by Robert Mullins.  This has quotes and numbers.  Very nice, and it specifically identifies open source and SaaS as beating out shrink-wrap.&lt;/p&gt;
&lt;p&gt;In MSDN, however, see &amp;quot;&lt;a class="reference external" href="http://msdn2.microsoft.com/en-us/library/aa479069.aspx"&gt;Building Distributed Applications: Architecture Strategies for Catching the Long Tail&lt;/a&gt; &amp;quot;.  This makes …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 May 2007 17:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-23:/2007_05_23-as_the_software_industry_shifts_away_from_selling_shrink_wrapped_software.html</guid><category>News</category><category>management</category></item><item><title>Switched to iBlog2</title><link>https://slott56.github.io/2007_05_23-switched_to_iblog2.html</link><description>&lt;p&gt;iBlog2 fixes a number of serious problems in iBlog1.  I'm happy so far.&lt;/p&gt;
&lt;p&gt;Most of the glitches I've seen are appear to be documented in the Lifli &lt;a class="reference external" href="http://www.lifli.com/Support/index.html"&gt;support forums&lt;/a&gt; .  I do have a huge beef, however, which isn't a &amp;quot;bug,&amp;quot; &lt;em&gt;per se&lt;/em&gt;.  The Theme Builder is a bit rugged.  Rulers …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 May 2007 16:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-23:/2007_05_23-switched_to_iblog2.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Web Services and Architecture</title><link>https://slott56.github.io/2007_05_22-web_services_and_architecture.html</link><description>&lt;p&gt;Thanks to everyone who attended.  See &lt;a class="reference external" href="http://java.sun.com/blueprints/guidelines/designing_webservices/"&gt;Designing Web Services with the J2EE(TM) 1.4 Platform : JAX-RPC, SOAP, and XML Technologies&lt;/a&gt;  for more information.
Also, check out Dr. Dobb's &lt;a class="reference external" href="http://www.ddj.com/dept/webservices/"&gt;SOA, Web Services and XML&lt;/a&gt;  department.&lt;/p&gt;
&lt;p&gt;Here's the Micro$oft PPT file:  &lt;a class="reference external" href="https://slott56.github.io/media/Web Services 8.ppt"&gt;Web Services 8.ppt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Here's the Open-Office file:  &lt;a class="reference external" href="https://slott56.github.io/media/Web Services 8.odp"&gt;Web …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 May 2007 23:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-22:/2007_05_22-web_services_and_architecture.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Just for a moment, I though I'd found something SQLAlchemy doesn't do perfectly.</title><link>https://slott56.github.io/2007_05_18-just_for_a_moment_i_though_id_found_something_sqlalchemy_doesnt_do_perfectly.html</link><description>&lt;p&gt;After having written a number of application-specific object-relational mappers, I have been on the prowl for an elegant, enduring solution.  I had started to come to grips with &lt;a class="reference external" href="http://www.djangoproject.com/"&gt;Django&lt;/a&gt; , and like much of the approach.  Django has a tiny infrastructure feature (the settings.py file) which made it unpleasant to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 18 May 2007 17:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-18:/2007_05_18-just_for_a_moment_i_though_id_found_something_sqlalchemy_doesnt_do_perfectly.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>The Web Mart Design Pattern.</title><link>https://slott56.github.io/2007_05_03-the_web_mart_design_pattern.html</link><description>&lt;p&gt;The &lt;strong&gt;Web Mart&lt;/strong&gt;  design pattern identifies three aspects
to a piece of web content:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The &lt;strong&gt;Core Concept&lt;/strong&gt;  - the &amp;quot;fact&amp;quot; that we will
present.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Access Dimensions&lt;/strong&gt;  - objects that identify a concept
or support navigation to the concept.&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Details&lt;/strong&gt; - objects that provide details in support of a concept.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 May 2007 13:28:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-03:/2007_05_03-the_web_mart_design_pattern.html</guid><category>News</category><category>news</category></item><item><title>Graphics Learning, Cairo and PyCairo</title><link>https://slott56.github.io/2007_05_02-graphics_learning_cairo_and_pycairo.html</link><description>&lt;p&gt;There are three reasons, none of them terribly
good in isolation.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;I build business applications, not graphics
applications, so the &amp;quot;basic&amp;quot; GTK was precisely what I needed.&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://cairographics.org/pycairo"&gt;PyCairo&lt;/a&gt;  is (to me) a fairly recent innovation,
and my GTK knowledge is a few years old.&lt;/li&gt;
&lt;li&gt;Cairo requires a more complex technology …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 May 2007 10:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-02:/2007_05_02-graphics_learning_cairo_and_pycairo.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category><category>pyGTK</category></item><item><title>Ouch!</title><link>https://slott56.github.io/2007_05_01-ouch.html</link><description>&lt;p&gt;Here's the shocking
result.&lt;/p&gt;
&lt;img alt="You are Visual Basic. You have little respect for common sense.  You are immature, but have recently begun to grow up.  Which Programming Language are You?" src="http://www.bbspot.com/Images/News_Features/2006/08/language/visual_basic.jpg" /&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.bbspot.com/News/2006/08/language_quiz.php"&gt;http://www.bbspot.com/News/2006/08/language_quiz.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;And I thought I was just arrogant.  Now I see
that it's worse than I thought.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 May 2007 10:51:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-05-01:/2007_05_01-ouch.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Python and Reverse Engineering, Part 5</title><link>https://slott56.github.io/2007_04_30-python_and_reverse_engineering_part_5.html</link><description>&lt;p&gt;Python is a top-shelf toolset for creating sample
data to do performance testing.&lt;/p&gt;
&lt;p&gt;Let's
say that you need to validate a data warehouse design, and you need a million
facts that join with thousands of dimension entities across a half-dozen
dimensions.  You'll be generating data for seven different tables, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 30 Apr 2007 13:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-30:/2007_04_30-python_and_reverse_engineering_part_5.html</guid><category>Management</category><category>management</category></item><item><title>IT Management's Love-Hate Relationship with Tools</title><link>https://slott56.github.io/2007_04_28-it_managements_love_hate_relationship_with_tools.html</link><description>&lt;p&gt;Mr. Hayes says that &amp;quot;...we’re afraid that
programmers simply won’t use the hot new technology and that the money we
spend on it will be wasted.&amp;quot;  He plays up this fear factor, providing lots of
programmer-centric reasons: &amp;quot;Either programmers don’t use the tools at
all, or they …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 28 Apr 2007 13:04:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-28:/2007_04_28-it_managements_love_hate_relationship_with_tools.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>Python and Reverse Engineering, Part 4</title><link>https://slott56.github.io/2007_04_18-python_and_reverse_engineering_part_4.html</link><description>&lt;p&gt;At this point, we have
clex.py, which
uses
sqlpreproc.py
to create a proper lexer for C source code.  We use &lt;a class="reference external" href="http://www.dabeaz.com/ply/"&gt;PLY&lt;/a&gt;  's ANSI C
parser
(cparse.py) as
the backbone of our own analysis of
C.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The C Language.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Separate from the lexical
structure of C (the spelling …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 18 Apr 2007 15:47:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-18:/2007_04_18-python_and_reverse_engineering_part_4.html</guid><category>Management</category><category>management</category></item><item><title>Python and Reverse Engineering, Part 3</title><link>https://slott56.github.io/2007_04_17-python_and_reverse_engineering_part_3.html</link><description>&lt;p&gt;The client said, &amp;quot;We have this program, largely
in C, which we can no longer support.  It doesn't really meet our business needs
and it doesn't fit our technology skill set.&amp;quot;  As part of rewriting the
requirements, the question of what it
&lt;em&gt;really&lt;/em&gt;
did came up.&lt;/p&gt;
&lt;p&gt;Actually, they had more …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 17 Apr 2007 14:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-17:/2007_04_17-python_and_reverse_engineering_part_3.html</guid><category>Management</category><category>management</category></item><item><title>Being an Architect</title><link>https://slott56.github.io/2007_04_16-being_an_architect.html</link><description>&lt;p&gt;There are a number of necessary skills for being
an architect.  Here's a list of four that occurred to me as I tried to piece
together a coherent thought from a flurry of emails.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Summarize.&lt;/li&gt;
&lt;li&gt;State A Goal.&lt;/li&gt;
&lt;li&gt;Know The Technology.&lt;/li&gt;
&lt;li&gt;Manage Your Investment In Learning.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These aren't sufficient
skills …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 16 Apr 2007 15:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-16:/2007_04_16-being_an_architect.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Python and Reverse Engineering, Part 2</title><link>https://slott56.github.io/2007_04_05-python_and_reverse_engineering_part_2.html</link><description>&lt;p&gt;A stored procedure isn't really very easy to
understand.  There's a profound fascination with triggers and stored procedures,
and they're both really bad ideas.  I can't say enough bad things about stored
procedures.  See &lt;a class="reference external" href="https://slott56.github.io/2007_03_23-plsql_vs_java_which_is_really_faster.html"&gt;PL/SQL vs. Java - Which is REALLY faster?&lt;/a&gt;  and
&lt;a class="reference external" href="https://slott56.github.io/2006_06_20-over_solving_the_problem_or_when_your_architect_is_a_dba.html"&gt;Over-Solving the Problem or When your architect …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 05 Apr 2007 14:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-05:/2007_04_05-python_and_reverse_engineering_part_2.html</guid><category>Management</category><category>management</category></item><item><title>Business Analysis vs. Architecture</title><link>https://slott56.github.io/2007_04_03-business_analysis_vs_architecture.html</link><description>&lt;p&gt;Much of the work called &amp;quot;Business Analysis&amp;quot;
conflates business problem discovery and technical meddling.  I draw a firm line
between the discovery part of analysis and the non-discovery (or design) part.
Discovery is all about managing ignorance; this can be ignorance of the business
need or ignorance of the available …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 03 Apr 2007 17:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-03:/2007_04_03-business_analysis_vs_architecture.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Python and Reverse Engineering, Part 1</title><link>https://slott56.github.io/2007_04_02-python_and_reverse_engineering_part_1.html</link><description>&lt;p&gt;Python is
&lt;strong&gt;Batteries Included&lt;/strong&gt; ™ programming.  These analysis
tools are either Python &lt;strong&gt;Out Of the Box&lt;/strong&gt; , or they are straight-forward downloads of
other open-source components.&lt;/p&gt;
&lt;p&gt;Here are
some analytical situations where Python has saved my bacon.  I'll present some
code for several of these.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Legacy Data Domains.  There are legacy (in …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 02 Apr 2007 17:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-04-02:/2007_04_02-python_and_reverse_engineering_part_1.html</guid><category>Management</category><category>management</category></item><item><title>A Simple Graphic Learning Environment - Part 2</title><link>https://slott56.github.io/2007_03_31-a_simple_graphic_learning_environment_part_2.html</link><description>&lt;p&gt;Here's a simple graphic application which is
built on the graphicApp.py framework.  This isn't a beginner's hello world.
This is the final project kind of program, and only for a student with some
trigonometry background.  The basic trig isn't too complex, but would require
rather detailed documentation to motivate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 31 Mar 2007 02:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-31:/2007_03_31-a_simple_graphic_learning_environment_part_2.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category><category>pyGTK</category></item><item><title>A Simple Graphic Learning Environment - Part 1</title><link>https://slott56.github.io/2007_03_26-a_simple_graphic_learning_environment_part_1.html</link><description>&lt;p&gt;&lt;strong&gt;Background.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The
suggested environment for learning to program using graphics instead of text was
&lt;a class="reference external" href="http://www.livewires.org.uk/python/index.html"&gt;LiveWires&lt;/a&gt; .  This includes a curriculum and
associated product, making it a tidy
package.&lt;/p&gt;
&lt;p&gt;There are a number of
alternatives, however.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Python includes &lt;a class="reference external" href="http://www.pythonware.com/library/tkinter/introduction/"&gt;tkinter&lt;/a&gt; , &lt;a class="reference external" href="http://docs.python.org/lib/module-Tkinter.html"&gt;section 20.1&lt;/a&gt;  of the Python Library Reference, v2.5.&lt;/li&gt;
&lt;li&gt;Python includes turtle …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 26 Mar 2007 16:31:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-26:/2007_03_26-a_simple_graphic_learning_environment_part_1.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category><category>pyGTK</category></item><item><title>PL/SQL vs. Java - Additional Information</title><link>https://slott56.github.io/2007_03_23-plsql_vs_java_additional_information.html</link><description>&lt;p&gt;&lt;strong&gt;Physical Tuning.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&amp;quot;...databases can be tuned
by creating appropriate indexes, removing others, modifying the physical
database schema to suit the most common types of queries, etc. So it isn't clear
whether the PL/SQL figure could be better if the database was optimised by a
good DBA.&amp;quot;&lt;/p&gt;
&lt;p&gt;While a good …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 23 Mar 2007 15:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-23:/2007_03_23-plsql_vs_java_additional_information.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category><category>data structure</category><category>algorithm</category></item><item><title>PL/SQL vs. Java - Which is REALLY faster?</title><link>https://slott56.github.io/2007_03_23-plsql_vs_java_which_is_really_faster.html</link><description>&lt;p&gt;While the question of speed came up recently, it
ties in to a long-standing position of mine.  I ran some realistic benchmarks,
and I'm much happier with my architecture
now.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Background.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Years
ago, at a Siebel conference, I heard a heretical comment.  Specifically, they
use the RDBMS as simple, flat …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 23 Mar 2007 00:12:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-23:/2007_03_23-plsql_vs_java_which_is_really_faster.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>database design</category><category>data structure</category><category>algorithm</category></item><item><title>Sugar, GTK and OLPC</title><link>https://slott56.github.io/2007_03_13-sugar_gtk_and_olpc.html</link><description>&lt;p&gt;Some additional Sugar notes recently appeared in
&amp;quot;&lt;a class="reference external" href="http://blog.vrplumber.com/1792"&gt;Plumbing
Life's Depths&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;After
attending PyCon, I polished up my GTK environment, reloading the current
releases.  Here's what I did to get a workable PyGTK on my  various
desktops.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The GTK Technology Stack&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here's an overview of the
components of this stack:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;GLIB …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Mar 2007 19:12:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-13:/2007_03_13-sugar_gtk_and_olpc.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category><category>PyGTK</category></item><item><title>Dejavu and Python-based Dimensional Analysis</title><link>https://slott56.github.io/2007_03_13-dejavu_and_python_based_dimensional_analysis.html</link><description>&lt;p&gt;Actually, the code looks like a clever expansion
on my example, in &lt;a class="reference external" href="https://slott56.github.io/2007_02_26-pycon_2007_revised.html"&gt;PyCon 2007
(Revised)&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&amp;quot;But wait,&amp;quot; you
say.  &amp;quot;Creating a pivot table in
Python?&amp;quot;&lt;/p&gt;
&lt;p&gt;Of course.  Spreadsheets can
create pivot tables from dimensionally normalized data.  However, getting the
data in this form is often challenging and if there is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Mar 2007 10:14:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-13:/2007_03_13-dejavu_and_python_based_dimensional_analysis.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>More Dimensional Model Implementations</title><link>https://slott56.github.io/2007_03_03-more_dimensional_model_implementations.html</link><description>&lt;p&gt;The ActiveWarehouse project dates from
10/23/2006.&lt;/p&gt;
&lt;p&gt;I submitted a really
similar article to &lt;a class="reference external" href="http://www.ddj.com/"&gt;DDJ&lt;/a&gt;  in September.  I heard nothing and I don't
like to nag, so I let it drop.  Although last time I nagged, the article was
sprung free from where it had been spiked and wound …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 03 Mar 2007 00:59:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-03:/2007_03_03-more_dimensional_model_implementations.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Advanced Programming</title><link>https://slott56.github.io/2007_03_02-advanced_programming.html</link><description>&lt;p&gt;First, I'm really pleased to see a focus on
end-user applications of Python.  It seems like most of the Open Source
Community likes to build infrastructure, operating systems, servers, frameworks
and components.  Maybe I'm looking in all the wrong places, but I have a soft
spot in my heart for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Mar 2007 15:43:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-03-02:/2007_03_02-advanced_programming.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>PyCon 2007 (Revised)</title><link>https://slott56.github.io/2007_02_26-pycon_2007_revised.html</link><description>&lt;p&gt;Things I learned at &lt;a class="reference external" href="http://us.pycon.org/TX2007/HomePage"&gt;PyCon 2007&lt;/a&gt; .&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;In the Open Source community, men outnumber
women 571 : 22.   I guess that's why I'm married to a sysadmin instead of a
programmer.&lt;/li&gt;
&lt;li&gt;While I already knew that programming was
literature, I never really connected it with Rhetoric until hearing R0ml's
keynote.  If programming …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 26 Feb 2007 20:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-02-26:/2007_02_26-pycon_2007_revised.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>IT's Drive to Self-Destruction</title><link>https://slott56.github.io/2007_02_18-its_drive_to_self_destruction.html</link><description>&lt;p&gt;My approach to preventing IT insignificance
begins with firing the good programmers, since they're saddled with low-value
work to begin with.  In order to see what that means, let's look at the three
phases of an IT organization's collapse to irrelevance.  Then we'll see why some
specific reorganization steps can …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 18 Feb 2007 22:32:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-02-18:/2007_02_18-its_drive_to_self_destruction.html</guid><category>Management</category><category>management</category></item><item><title>Great Quotes about The Spreadsheet Problem™</title><link>https://slott56.github.io/2007_02_07-great_quotes_about_the_spreadsheet_problemtm.html</link><description>&lt;p&gt;Here are some useful quotes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Andrew’s first law of career
spotting:  Accountants are people who, when confronted with a problem, think
“I know, I’ll use [A spreadsheet]”. Now they have two
problems.&lt;/li&gt;
&lt;li&gt;[A spreadsheet] is a great prototyping
tool, just don’t let it anywhere near your production …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Feb 2007 18:10:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-02-07:/2007_02_07-great_quotes_about_the_spreadsheet_problemtm.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>spreadsheet</category></item><item><title>Editing DocBook XML</title><link>https://slott56.github.io/2007_02_02-editing_docbook_xml.html</link><description>&lt;p&gt;First, I wrote a book on &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/python.html"&gt;Programming with Python&lt;/a&gt;.
It was back in the Python 2.0 days (2001 or thereabouts.)  I used &lt;a class="reference external" href="http://www.apple.com/appleworks/"&gt;AppleWorks&lt;/a&gt;,
and it was fun.  Write all you want,
put in formulae, code samples, everything.  A few style sheets to give it a
reasonable look and I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Feb 2007 12:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-02-02:/2007_02_02-editing_docbook_xml.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>The XML Balancing Act - Part III, JSON (Revised)</title><link>https://slott56.github.io/2007_01_29-the_xml_balancing_act_part_iii_json_revised.html</link><description>&lt;p&gt;We have a spectrum of interesting needs, and a
corresponding spectrum of solutions.  Here's one dimension: the structured-ness
view.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Highly structured data.&lt;/li&gt;
&lt;li&gt;Semi-structured data, or the &amp;quot;mixed content
model&amp;quot;.  We can further subdivide this into content which is &amp;quot;naturally&amp;quot;
hierarchical, and a good fit for XML, and data which is …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 29 Jan 2007 15:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-29:/2007_01_29-the_xml_balancing_act_part_iii_json_revised.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>Spreadsheet as Syntax</title><link>https://slott56.github.io/2007_01_25-spreadsheet_as_syntax.html</link><description>&lt;p&gt;If we look at a spreadsheet as a document we can
develop a parser that locates the user-supplied information in that document.
Like any language, we'll have to treat some elements of the spreadsheet as pure
syntax, little more than punctuation.  In the case of embedded formulas, these
are elaborate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 25 Jan 2007 16:11:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-25:/2007_01_25-spreadsheet_as_syntax.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>spreadsheet</category></item><item><title>The Problem with Spreadsheets</title><link>https://slott56.github.io/2007_01_23-the_problem_with_spreadsheets.html</link><description>&lt;p&gt;See &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2005_09_27-essay_102_when_a_column_is_not_a_column.html"&gt;When a Column is Not a Column&lt;/a&gt; &amp;quot; for a rant on
failed attempts to scale spreadsheets up into relational databases.  Bottom
Line:  A spreadsheet column is rarely an RDBMS column.  Often the SS column's
label is a key value, just like the SS row's label, and the cell's value …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 23 Jan 2007 11:13:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-23:/2007_01_23-the_problem_with_spreadsheets.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>spreadsheet</category></item><item><title>What a Data Warehouse Can Never Do</title><link>https://slott56.github.io/2007_01_12-what_a_data_warehouse_can_never_do.html</link><description>&lt;p&gt;In one form, the question is &amp;quot;How do we handle
the [X] transaction in the warehouse?&amp;quot;  Another form of the question is &amp;quot;What do
we do when [Y] changes?&amp;quot;   The third form is less clear, but essentially the
same: &amp;quot;How do we maintain [Z] in the
warehouse?&amp;quot;&lt;/p&gt;
&lt;p&gt;All of these …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 12 Jan 2007 14:40:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-12:/2007_01_12-what_a_data_warehouse_can_never_do.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>The Question of Risk (Revised)</title><link>https://slott56.github.io/2007_01_06-the_question_of_risk_revised.html</link><description>&lt;p&gt;Yes, it's an omission and, yes, it's a mistake.
I should have said something along the lines of &amp;quot;risk is an uninteresting
complication&amp;quot; or &amp;quot;risk is just a euphemism for bad
management.&amp;quot;&lt;/p&gt;
&lt;p&gt;Why is risk
uninteresting?&lt;/p&gt;
&lt;p&gt;First, the seeds (Chad
Fowler's &amp;quot;&lt;a class="reference external" href="http://chadfowler.com/2006/12/27/the-big-rewrite%22%20target=%22NewWindow"&gt;The
Big Rewrite&lt;/a&gt; &amp;quot;, and CodeCraft, &amp;quot;&lt;a class="reference external" href="http://codecraft.info/index.php/archives/69/%22%20target=%22NewWindow"&gt;To
Rewrite or not …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 06 Jan 2007 15:16:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-06:/2007_01_06-the_question_of_risk_revised.html</guid><category>Management</category><category>management</category></item><item><title>Project Justification</title><link>https://slott56.github.io/2007_01_05-project_justification.html</link><description>&lt;p&gt;In &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2006_09_08-its_strategic_but_its_not_but_it_was_now_its_a_burden.html"&gt;It's Strategic -- but it's not -- but it was -- now it's a
burden&lt;/a&gt; &amp;quot;, I rambled about the situation I encounter on a regular basis.
Here's a Haiku that captures the situation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Please Replace It&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It's heavily customized,&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We can't install an upgrade,&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We don't dare touch it.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The maintenance costs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 05 Jan 2007 14:31:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-05:/2007_01_05-project_justification.html</guid><category>Management</category><category>management</category></item><item><title>Technology Refresh</title><link>https://slott56.github.io/2007_01_04-technology_refresh.html</link><description>&lt;p&gt;First, I'm a pack-rat; I worry about deleting
something valuable.  Specifically, I worry about orphaned files because the
application software is no longer supported or the media is
obsolete.&lt;/p&gt;
&lt;p&gt;For example, my resume is a
&lt;a class="reference external" href="http://docs.info.apple.com/article.html?artnum=24522"&gt;Hypercard&lt;/a&gt;  stack.  Really.  Hypercard is an OS 9
application, and future OS X's won't support …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Jan 2007 19:03:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-04:/2007_01_04-technology_refresh.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>Measurable Improvement</title><link>https://slott56.github.io/2007_01_04-measurable_improvement.html</link><description>&lt;p&gt;Here's what I
observed.&lt;/p&gt;
&lt;p&gt;Customer:  &amp;quot;Our business
performance isn't what we want.  We think some of our intranet is no
good.&amp;quot;&lt;/p&gt;
&lt;p&gt;Us:  &amp;quot;We'd love to look at
it.&amp;quot;&lt;/p&gt;
&lt;p&gt;Customer:  &amp;quot;Not so fast.  You can't
'look at it'.  You have to propose a measurable change in business performance,
define a fixed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 Jan 2007 11:27:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-04:/2007_01_04-measurable_improvement.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>Code Quality - Which Implementation is "Better"?</title><link>https://slott56.github.io/2007_01_03-code_quality_which_implementation_is_better.html</link><description>&lt;p&gt;To begin with, we're talking about the
implementation's source code.  Here's the situation: Ann says that Bob's code is
no good, and she's provided an alternative implementation.  How do we
choose?&lt;/p&gt;
&lt;p&gt;The first part of any scorecard
is the &lt;a class="reference external" href="http://www.sei.cmu.edu/str/taxonomies/view_qm.html"&gt;SEI Quality Measures Taxonomy&lt;/a&gt; .  It's marked
&amp;quot;Legacy&amp;quot;, but I haven't seen …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 03 Jan 2007 11:39:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-03:/2007_01_03-code_quality_which_implementation_is_better.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category></item><item><title>Clarifying XML's Strengths.</title><link>https://slott56.github.io/2007_01_02-clarifying_xmls_strengths.html</link><description>&lt;p&gt;While there are lame reasons for using XML, there
are good reasons also.  The good reasons, however, aren't delightfully clear.
They seem to be clouded by the lame issues.  I'm trying to sort out the best and
most logical reasons for using
XML.&lt;/p&gt;
&lt;p&gt;Here are 8 typically lame reasons
for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 02 Jan 2007 15:55:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2007-01-02:/2007_01_02-clarifying_xmls_strengths.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>XML - Scripting - SQL - a DSL: which fits the problem better?</title><link>https://slott56.github.io/2006_12_31-xml_scripting_sql_a_dsl_which_fits_the_problem_better.html</link><description>&lt;p&gt;I read &amp;quot;&lt;a class="reference external" href="http://koti.welho.com/jpakaste/blog/stamp_out_the_ants.html"&gt;Stamp on
the ants&lt;/a&gt; &amp;quot;, which lead me to write &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2006_12_23-xml_one_ring_to_rule_them_all.html"&gt;XML - One Ring to Rule them All...&lt;/a&gt; &amp;quot; because I'd
seem some remarkably lame justification for XML.  I saw an interesting response
in &amp;quot;&lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/2006/12/xml_is_first_cl.html"&gt;XML is first class, scripting languages are second
class&lt;/a&gt; &amp;quot;.&lt;/p&gt;
&lt;p&gt;At this point, we
have an interesting tangential …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 31 Dec 2006 04:46:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-31:/2006_12_31-xml_scripting_sql_a_dsl_which_fits_the_problem_better.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>A Good Reason for XML</title><link>https://slott56.github.io/2006_12_28-a_good_reason_for_xml.html</link><description>&lt;p&gt;I harp on
&lt;strong&gt;Design Goal 6&lt;/strong&gt;  in the &lt;a class="reference external" href="http://www.w3.org/TR/2006/REC-xml-20060816/"&gt;XML 1.0
Standard&lt;/a&gt; , &amp;quot;XML documents should be human-legible and reasonably
clear&amp;quot;.  In Kontrawize, the response is XML editors help meet this design goal.
&amp;quot;There are plenty of good XML-aware editors around, some of which are free.&amp;quot;
While true, I think this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 28 Dec 2006 15:39:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-28:/2006_12_28-a_good_reason_for_xml.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>XML - One Ring to Rule them All...</title><link>https://slott56.github.io/2006_12_23-xml_one_ring_to_rule_them_all.html</link><description>&lt;p&gt;The XML folks seem to have a number of
points:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Ant already works.   Complexity be
damned.&lt;/li&gt;
&lt;li&gt;XML is fine for everything that's not
Java.  Except SQL.  And CSS.&lt;/li&gt;
&lt;li&gt;Ant is &amp;quot;already&amp;quot; part of the technology
stack, and it uses XML.  Anything better isn't already there.&lt;/li&gt;
&lt;li&gt;Everyone already knows XML.  They …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 23 Dec 2006 17:43:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-23:/2006_12_23-xml_one_ring_to_rule_them_all.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>Tying your automobile to a hitching post.</title><link>https://slott56.github.io/2006_12_17-tying_your_automobile_to_a_hitching_post.html</link><description>&lt;p&gt;The points are serious issues.  However, the best
summary comes from &lt;a class="reference external" href="http://gr.ayre.st/"&gt;Karl Guertin&lt;/a&gt;:  &amp;quot;My explanation is that Duck Typing is like Ethernet, in
theory it will break, but in practice it works pretty well.&amp;quot;&lt;/p&gt;
&lt;p&gt;There were three questions which
raised four issues.  The questions included the seemingly incomplete OO
implementation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 17 Dec 2006 21:04:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-17:/2006_12_17-tying_your_automobile_to_a_hitching_post.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Hidden Costs of "Convenience"</title><link>https://slott56.github.io/2006_12_12-hidden_costs_of_convenience.html</link><description>&lt;p&gt;This is an important topic.  I've blogged on the
layers issue before (&amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2006_10_20-layers_interfaces_and_mutability.html"&gt;Layers, Interfaces and Mutabilty&lt;/a&gt; &amp;quot;), and this
AJAX issue is a great additional
point.&lt;/p&gt;
&lt;p&gt;With depressing regularity I
also hear the complementary &amp;quot;stored procedure&amp;quot; question.  This question takes a
number of different forms, but they all mean the same …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 12 Dec 2006 16:19:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-12:/2006_12_12-hidden_costs_of_convenience.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>MS-FUD V3.0</title><link>https://slott56.github.io/2006_12_02-ms_fud_v30.html</link><description>&lt;p&gt;MS-FUD 2.0 was &amp;quot;there are no other desktop OS's,
so shut up and pay.&amp;quot;  This was supported by the cheerful and helpful advice &amp;quot;If
you don't think we have a monopoly, try and find another desktop OS for all
those Intel processors you've purchased.&amp;quot;  This started when Windows 3 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Dec 2006 14:55:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-02:/2006_12_02-ms_fud_v30.html</guid><category>Management</category><category>management</category></item><item><title>PyCon Presentation</title><link>https://slott56.github.io/2006_12_02-pycon_presentation.html</link><description>&lt;p&gt;I'm very excited to be giving a presentation at
PyCon '07.   A 30-minute slot is tough because the Star Schema can be confusing.
The coding is pretty transparent (IMO), but the background for why I had to do
this and places where it can be used are more interesting than …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 02 Dec 2006 14:36:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-12-02:/2006_12_02-pycon_presentation.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software</category><category>data structure</category><category>algorithm</category><category>pycon</category></item><item><title>Who do you sue?</title><link>https://slott56.github.io/2006_11_27-who_do_you_sue.html</link><description>&lt;p&gt;I've blogged about the &amp;quot;who do I sue?&amp;quot; question
in &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2006_04_24-the_cost_and_benefit_of_open_source.html"&gt;The Cost (and Benefit) of Open Source&lt;/a&gt; &amp;quot;.  You can
also read Andy Todd's &amp;quot;&lt;a class="reference external" href="http://halfcooked.com/blog/2006/11/27/who-do-i-sue/"&gt;Who Do I Sue?&lt;/a&gt; &amp;quot;
entry.&lt;/p&gt;
&lt;p&gt;I find it exasperating that a
CIO will draft a policy that explicitly bans open-source solutions without
giving a second thought to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Nov 2006 16:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-11-27:/2006_11_27-who_do_you_sue.html</guid><category>Management</category><category>management</category></item><item><title>Coffee and a MacBook</title><link>https://slott56.github.io/2006_11_20-coffee_and_a_macbook.html</link><description>&lt;p&gt;Happily, the MacBook isn't very hard to take
apart.  Also, since we could afford to replace it, we had two over the
Thanksgiving break, and could determine that there were no MagSafe power cord or
battery issues.&lt;/p&gt;
&lt;p&gt;You can see a nice
&lt;a class="reference external" href="http://youtube.com/watch?v=8c6ckjy-gdY"&gt;MacWorld video&lt;/a&gt;  of the basics of opening the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 20 Nov 2006 21:58:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-11-20:/2006_11_20-coffee_and_a_macbook.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>Siren's Call of DRM</title><link>https://slott56.github.io/2006_10_28-sirens_call_of_drm.html</link><description>&lt;p&gt;In the CW article, pseudonymous Mathias Thurman
describes a demonstration of Microsoft's &lt;a class="reference external" href="http://www.microsoft.com/windowsserver2003/technologies/rightsmgmt/default.mspx"&gt;Rights Management Services&lt;/a&gt;  product.  The
audience of executives identify a number of &amp;quot;Suppose...&amp;quot; scenarios, which the
author dismisses as merely research subjects, concluding that &amp;quot;...the goal of
this proof of concept was to introduce a group of executives …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 28 Oct 2006 18:13:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-10-28:/2006_10_28-sirens_call_of_drm.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>Layers, Interfaces and Mutability</title><link>https://slott56.github.io/2006_10_20-layers_interfaces_and_mutability.html</link><description>&lt;p&gt;Here's the full, minimally-edited
question:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;We are having a debate about
the basic way the UI, Business Logic, and Data Access layers
communicate.&lt;/p&gt;
&lt;p&gt;My experience has been
that the UI talks to the BizLogic, and the BizLogic maps between itself and the
Data Access layer.. like
this:&lt;/p&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;::&lt;/dt&gt;
&lt;dd&gt;UI -&amp;gt; BizLogic -&amp;gt; Data …&lt;/dd&gt;&lt;/dl&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 20 Oct 2006 18:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-10-20:/2006_10_20-layers_interfaces_and_mutability.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>Absurdity? Consistent Code and Inconsistent Data Structures</title><link>https://slott56.github.io/2006_10_11-absurdity_consistent_code_and_inconsistent_data_structures.html</link><description>&lt;p&gt;First, see &amp;quot;&lt;a class="reference external" href="http://www.tbray.org/ongoing/When/200x/2006/07/28/Open-Data"&gt;OSCON - Open Data&lt;/a&gt; &amp;quot; by Tim Bray, then see &amp;quot;&lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/2006/07/set_my_data_fre.html"&gt;Set My Data Free&lt;/a&gt; &amp;quot; in
Kontrawize.&lt;/p&gt;
&lt;p&gt;Here are some quotes &amp;quot;At
the end of the day, information outlives software and transcends software and is
more valuable than software.&amp;quot;  &amp;quot;Data matters. It shouldn't be an afterthought.
It will outlive your applications …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Oct 2006 16:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-10-11:/2006_10_11-absurdity_consistent_code_and_inconsistent_data_structures.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Refactoring and Unit Testing</title><link>https://slott56.github.io/2006_10_11-refactoring_and_unit_testing.html</link><description>&lt;p&gt;I do a fair amount of manual refactoring.  I've
used WebSphere Studio (Eclipse) to do some automated refactoring, so I have some
experience in using IDE's which exploit Java's static
type-checking.&lt;/p&gt;
&lt;p&gt;However, the question of
type checking in a dynamic language is interesting.  I don't use a sophisticated
IDE for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Oct 2006 00:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-10-11:/2006_10_11-refactoring_and_unit_testing.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>A Productivity Conundrum (Revised)</title><link>https://slott56.github.io/2006_10_09-a_productivity_conundrum_revised.html</link><description>&lt;p&gt;In one case, the prospect had 7 interlocked
databases, and wanted to do a technology upgrade.  In other cases, the numbers
was larger (up to 30, I think) but the problem was the same.&lt;/p&gt;
&lt;p&gt;Essentially they said &amp;quot;It's taking us
forever to rework this design.  What should we do that …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 09 Oct 2006 10:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-10-09:/2006_10_09-a_productivity_conundrum_revised.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>More of the Open Source Value Proposition</title><link>https://slott56.github.io/2006_09_30-more_of_the_open_source_value_proposition.html</link><description>&lt;p&gt;Binstock does a quick compare and contrast
between Ruby and NetRexx, showing how an active community promoted Ruby, and
NetRexx's lack of a community left it languishing.  I think that this analysis
is only partly true, and misses part of the value of open
source.&lt;/p&gt;
&lt;p&gt;Specifically, IBM's proprietary
NetRexx can't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Sep 2006 12:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-09-30:/2006_09_30-more_of_the_open_source_value_proposition.html</guid><category>Management</category><category>management</category></item><item><title>Why SOA is DOA in some organizations</title><link>https://slott56.github.io/2006_09_30-why_soa_is_doa_in_some_organizations.html</link><description>&lt;p&gt;&amp;quot;Here are the exact words from the client when I
suggested using the &amp;quot;official calendar&amp;quot;: I’m aware of other systems having
tables for Holidays but I don’t know that we can piggy back off any of
them (not aware they are publicly available). Besides, I’d rather we …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 30 Sep 2006 03:09:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-09-30:/2006_09_30-why_soa_is_doa_in_some_organizations.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>soa</category><category>management</category></item><item><title>The Browser as OS? Perhaps Not</title><link>https://slott56.github.io/2006_09_23-the_browser_as_os_perhaps_not.html</link><description>&lt;p&gt;While &amp;quot;Browser as OS&amp;quot; is what
&lt;em&gt;appears&lt;/em&gt;
to be happening.  The browser is the front-end for many applications.  Even in
the Ajax case, however, the browser is only one piece of the application, and
the browser isn't relevant on the server
side.&lt;/p&gt;
&lt;p&gt;The important point that is
missed in the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 23 Sep 2006 15:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-09-23:/2006_09_23-the_browser_as_os_perhaps_not.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>It's Strategic -- but it's not -- but it was -- now it's a burden</title><link>https://slott56.github.io/2006_09_08-its_strategic_but_its_not_but_it_was_now_its_a_burden.html</link><description>&lt;p&gt;Here's the scenario I see:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The customer bought something, and then
customized it.  The customization -- by definition -- must have had significant
strategic value.&lt;/li&gt;
&lt;li&gt;The customer set it aside, making no more
changes of any kind.  Okay, there were bug fixes, but nothing significant.  The
developers were re-assigned to something new …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 08 Sep 2006 13:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-09-08:/2006_09_08-its_strategic_but_its_not_but_it_was_now_its_a_burden.html</guid><category>Management</category><category>management</category></item><item><title>Faerie Dust™ - Part 2</title><link>https://slott56.github.io/2006_09_06-faerie_dusttm_part_2.html</link><description>&lt;p&gt;Here's another symptom of a
&lt;strong&gt;Request for Faerie Dust&lt;/strong&gt; ™:&lt;/p&gt;
&lt;p&gt;A
proposal that includes (1) analysis, (2) proof-of-concept, and (3) a plan for a
solution.&lt;/p&gt;
&lt;p&gt;Sounds sensible, doesn't it?
Study it, prove that you can solve it, and write the complete plan to solve
it.&lt;/p&gt;
&lt;p&gt;Sounded sensible to me, until I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 06 Sep 2006 00:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-09-06:/2006_09_06-faerie_dusttm_part_2.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>Faerie Dust</category></item><item><title>Creating Value with Open Source Products (part 2)</title><link>https://slott56.github.io/2006_08_31-creating_value_with_open_source_products_part_2.html</link><description>&lt;p&gt;Here's a novel point of view on open source
software.&lt;/p&gt;
&lt;p&gt;'In fact, one of the things
Google likes about open source software is that it facilitates secrecy. &amp;quot;If we
had to go and buy software licenses, or code licenses, based on seats, people
would absolutely know what the Google infrastructure …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 Aug 2006 18:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-31:/2006_08_31-creating_value_with_open_source_products_part_2.html</guid><category>Management</category><category>management</category></item><item><title>Ways in which learning can be A Bad Thing™</title><link>https://slott56.github.io/2006_08_31-ways_in_which_learning_can_be_a_bad_thingtm.html</link><description>&lt;p&gt;Once I learned C++, all my C programming became
poor-man's OO.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Every &amp;quot;class&amp;quot; became a C structure
type.&lt;/li&gt;
&lt;li&gt;Every class structure was implemented as
a header file that defined the structure and a bunch of method
functions.&lt;/li&gt;
&lt;li&gt;Each method function would have a &amp;quot;self&amp;quot;
argument, which was a pointer to …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 31 Aug 2006 17:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-31:/2006_08_31-ways_in_which_learning_can_be_a_bad_thingtm.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Dynamic Languages and Corporate IT's Objections</title><link>https://slott56.github.io/2006_08_29-dynamic_languages_and_corporate_its_objections.html</link><description>&lt;p&gt;Since most of these new-fangled dynamic languages
are open-source, we have a a strange artificial barrier to considering the right
solution for our problems.  This barrier is &amp;quot;No Open Source&amp;quot; policy, usually
framed as &lt;strong&gt;We'll Use Open Source Over My Dead Body&lt;/strong&gt; ™.  It has to be examined
carefully from several …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 29 Aug 2006 17:57:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-29:/2006_08_29-dynamic_languages_and_corporate_its_objections.html</guid><category>News</category><category>news</category></item><item><title>Google vs. the Herd</title><link>https://slott56.github.io/2006_08_28-google_vs_the_herd.html</link><description>&lt;p&gt;My thesis is that CIO's are herd animals, making
purchasing decisions based on the perceived direction of the herd.  They sense
this through &lt;a class="reference external" href="http://www.gartner.com/"&gt;Gartner&lt;/a&gt;   research reports.  There are many
competitors, but Gartner is the
name-brand.&lt;/p&gt;
&lt;p&gt;If Gartner signals a shift
in the herd, then alternatives may become interesting.  How will …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 28 Aug 2006 10:52:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-28:/2006_08_28-google_vs_the_herd.html</guid><category>Management</category><category>management</category></item><item><title>Comments</title><link>https://slott56.github.io/2006_08_23-comments.html</link><description>&lt;p&gt;In a recent code review, I saw a bizarre habit.
The author defended it so vehemently, I gave up on trying to explain the
needless confusion it caused.  The author was one of those &amp;quot;I always do it this
way, and I'm always right.&amp;quot; people, so nothing was gained by …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 Aug 2006 16:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-23:/2006_08_23-comments.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Deprecating Dynamic Languages (or Scripting Systems)</title><link>https://slott56.github.io/2006_08_23-deprecating_dynamic_languages_or_scripting_systems.html</link><description>&lt;p&gt;Holub discards the currently popular dynamic
languages with a scathing
comment:&lt;/p&gt;
&lt;p&gt;&amp;quot;And not scripting
systems (I’m reluctant to call them languages) like PHP and Ruby, which
are too Wild West to be trustworthy. No language that moves compile-time bugs
into runtime is worth your time if you consider reliability …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 23 Aug 2006 11:05:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-23:/2006_08_23-deprecating_dynamic_languages_or_scripting_systems.html</guid><category>News</category><category>news</category></item><item><title>A New Architecture Involves Ignorance</title><link>https://slott56.github.io/2006_08_22-a_new_architecture_involves_ignorance.html</link><description>&lt;p&gt;Without mentioning Armour's
&lt;em&gt;The Laws of Software Process: A New Model for the Production and Management of Software&lt;/em&gt;  (which includes the Five Orders of
Ignorance, quoted by Paul Freedman in &amp;quot;&lt;a class="reference external" href="http://www.computer.org/portal/site/software/menuitem.538c87f5131e26244955a4108bcd45f3/index.jsp?&amp;amp;pName=software_level1&amp;amp;path=software/bookshelf/2005&amp;amp;file=2005s1fre.xml&amp;amp;xsl=article.xsl"&gt;Uncovering Ignorance in Software Development&lt;/a&gt; &amp;quot;),
Purdy has hit the nail on the head regarding gestation of
architectures.&lt;/p&gt;
&lt;p&gt;Is Gestation overhead …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Aug 2006 17:07:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-22:/2006_08_22-a_new_architecture_involves_ignorance.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Meeting The Customer's Expectation (Revised)</title><link>https://slott56.github.io/2006_08_20-meeting_the_customers_expectation_revised.html</link><description>&lt;p&gt;The customer -- usually someone from IT -- has
met with the users, and determined what their problem is and what is required to
solve it.  This is the standard procedure, but it rarely works out well.  Here
are some scenarios and some coping strategies.  After some hand-wringing about
scope and budget …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 20 Aug 2006 15:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-20:/2006_08_20-meeting_the_customers_expectation_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Calendar Calculations - Part 2</title><link>https://slott56.github.io/2006_08_20-calendar_calculations_part_2.html</link><description>&lt;p&gt;First, let's pick the conclusion out of the
middle: &amp;quot;However, the computation for the first and last business day of the
month is trivial. So, just codify
this.&amp;quot;&lt;/p&gt;
&lt;p&gt;Since we still lack any usable
context, we're struggling with the definition of basic terms.  Is this the
&lt;em&gt;calendar&lt;/em&gt;
month, or the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 20 Aug 2006 01:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-20:/2006_08_20-calendar_calculations_part_2.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>requirements</category></item><item><title>Apple and Flexibility</title><link>https://slott56.github.io/2006_08_07-apple_and_flexibility.html</link><description>&lt;p&gt;&amp;quot;But Apple, stubbornly hanging on to its need to
control the user experience, creates meshed hardware and software systems that
deprive businesses of the flexibility to find the best balance of hardware,
operating system and applications for the job at
hand.&amp;quot;&lt;/p&gt;
&lt;p&gt;Good point, but only half the
story.&lt;/p&gt;
&lt;p&gt;Apple needs …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 07 Aug 2006 23:21:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-07:/2006_08_07-apple_and_flexibility.html</guid><category>News</category><category>news</category></item><item><title>The Hubris of Calendrical Calculations</title><link>https://slott56.github.io/2006_08_07-the_hubris_of_calendrical_calculations.html</link><description>&lt;p&gt;Here's the
example:&lt;/p&gt;
&lt;p&gt;&amp;quot;I need to calculate first
'business day' of the month.  Last 'business day',
too.&amp;quot;&lt;/p&gt;
&lt;p&gt;Note that the problem which this
solves is unstated.  Why does anyone need to &amp;quot;calculate&amp;quot; this?&lt;/p&gt;
&lt;p&gt;Here's a single tidbit of technical
context, not useful really, but all I know: it's a polyglot …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 07 Aug 2006 13:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-07:/2006_08_07-the_hubris_of_calendrical_calculations.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category></item><item><title>Tools Aren't the Answer</title><link>https://slott56.github.io/2006_08_04-tools_arent_the_answer.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://jroller.com/page/cpurdy"&gt;/dev/null&lt;/a&gt; 's post &amp;quot;&lt;a class="reference external" href="http://jroller.com/page/cpurdy?entry=and_the_braindead_award_goes"&gt;And the Braindead Award goes to...&lt;/a&gt; &amp;quot; for an
interesting tale of things that turn up in spite of 100% test
coverage.&lt;/p&gt;
&lt;p&gt;Here's the
recap:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;They have 100% test coverage.&lt;/li&gt;
&lt;li&gt;Yet, they uncovered an error in an abstract superclass.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;How is this possible?  How
was it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 04 Aug 2006 10:47:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-08-04:/2006_08_04-tools_arent_the_answer.html</guid><category>Management</category><category>management</category></item><item><title>Three Arguments for Using the Hammer</title><link>https://slott56.github.io/2006_07_30-three_arguments_for_using_the_hammer.html</link><description>&lt;p&gt;When we're
&lt;strong&gt;Holding the Hammer&lt;/strong&gt; , everything's a nail.  There are a
number of supporting arguments for this.  I won't beat down the
&lt;strong&gt;All Those Features&lt;/strong&gt; ™ decision-making pattern again.
That, and some part of &lt;strong&gt;Tomorrow's Dollars Don't Exist&lt;/strong&gt; ™ decision-making pattern are
in &amp;quot;&lt;a class="reference external" href="https://slott56.github.io/2006_07_21-is_it_over_solving_or_exploiting_technology.html"&gt;Is it Over-Solving or Exploiting
Technology?&lt;/a&gt; &amp;quot;&lt;/p&gt;
&lt;p&gt;From &lt;a class="reference external" href="http://improving-nao.blogspot.com/"&gt;Improving-NAO&lt;/a&gt; : &amp;quot;I …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 30 Jul 2006 16:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-30:/2006_07_30-three_arguments_for_using_the_hammer.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>How to Avoid Problem-Solving</title><link>https://slott56.github.io/2006_07_30-how_to_avoid_problem_solving.html</link><description>&lt;p&gt;One of the best ways to avoid problem solving is
to treat the problem as fluff.  Often, our users begin the conversation with
this assumption, and we play along.  Other times, we make this choice because
we're just too lazy (or negligent) to make an effort.&lt;/p&gt;
&lt;p&gt;Here's how it plays …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 30 Jul 2006 13:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-30:/2006_07_30-how_to_avoid_problem_solving.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Is it Over-Solving or Exploiting Technology?</title><link>https://slott56.github.io/2006_07_21-is_it_over_solving_or_exploiting_technology.html</link><description>&lt;p&gt;Here's a snip from the &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20060620162253/#142442"&gt;comment&lt;/a&gt; :
&amp;quot;... over-solving the problem is writing a bunch of custom code (the file
readers and writers) when there is already a perfectly good mechanism available
for all of the persistence, reliability, repeatability and scalability issues.
To me, if my application has already been designed to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 21 Jul 2006 22:01:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-21:/2006_07_21-is_it_over_solving_or_exploiting_technology.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Expertise and Expert Performance</title><link>https://slott56.github.io/2006_07_19-expertise_and_expert_performance.html</link><description>&lt;p&gt;It appears that I may have been doing the right
thing in putting together &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;Building Skills in Object-Oriented Design&lt;/a&gt; .
Expertise is grown through &amp;quot;effortful study&amp;quot; of the material.  Experts search
through their long-term memory for applicable patterns, based on their
study.&lt;/p&gt;
&lt;p&gt;The idea of many exercises, each
exposing a piece …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 19 Jul 2006 10:48:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-19:/2006_07_19-expertise_and_expert_performance.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>The Root Cause of Turnover in IT</title><link>https://slott56.github.io/2006_07_11-the_root_cause_of_turnover_in_it.html</link><description>&lt;p&gt;Why does IT have such a high turnover?&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Technology appeal?&lt;/li&gt;
&lt;li&gt;Money?&lt;/li&gt;
&lt;li&gt;Boredom?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;No.  None of those.  We can
look at Maslow, but it's too high-level.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Self-Actualization?&lt;/li&gt;
&lt;li&gt;Self-Esteem?&lt;/li&gt;
&lt;li&gt;Belonging?&lt;/li&gt;
&lt;li&gt;Safety and Security?&lt;/li&gt;
&lt;li&gt;Physical Needs?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Most IT jobs pay pretty well,
above the median income.  Look at &lt;a class="reference external" href="http://mcpmag.com/salarysurveys/"&gt;MCP Magazine&lt;/a&gt;  or &lt;a class="reference external" href="http://www.informationweek.com/731/salsurvey.htm"&gt;InformationWeek&lt;/a&gt; , for …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jul 2006 14:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-11:/2006_07_11-the_root_cause_of_turnover_in_it.html</guid><category>Management</category><category>management</category></item><item><title>Creating Value with Open Source Solutions</title><link>https://slott56.github.io/2006_07_11-creating_value_with_open_source_solutions.html</link><description>&lt;p&gt;What is the reward structure for open source?&lt;/p&gt;
&lt;p&gt;If a corporate IT team builds software
using open source components, CP insists, they've made a fundamental blunder.  I
forget CP's litany of concerns, but he worries that the software is unproven,
untrustworthy, risky, etc., etc.&lt;/p&gt;
&lt;p&gt;My
argument that &amp;quot;you have the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Jul 2006 14:23:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-11:/2006_07_11-creating_value_with_open_source_solutions.html</guid><category>Management</category><category>management</category></item><item><title>Replacing Powerpoint (part 2)</title><link>https://slott56.github.io/2006_07_04-replacing_powerpoint_part_2.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/"&gt;Kontrawize&lt;/a&gt;  author Anthony Coates &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20060626115128/#137940"&gt;warns&lt;/a&gt;  that this is an attractive time sink.
Thanks for the heads up.&lt;/p&gt;
&lt;p&gt;My &lt;a class="reference external" href="https://slott56.github.io/2006_06_26-powerpoint_alternatives.html"&gt;first round&lt;/a&gt;  of research found &lt;a class="reference external" href="http://www.w3.org/Talks/Tools/Slidy/"&gt;HTML
Slidy&lt;/a&gt; , but didn't find &lt;a class="reference external" href="http://docutils.sourceforge.net/docs/user/slide-shows.html"&gt;DocUtils + S5&lt;/a&gt; .  S5 is simpler and does less than
Slidy.  RST markup is far easier to cope with than HTML.  This looks …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Jul 2006 13:55:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-07-04:/2006_07_04-replacing_powerpoint_part_2.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>Powerpoint Alternatives</title><link>https://slott56.github.io/2006_06_26-powerpoint_alternatives.html</link><description>&lt;p&gt;PPT has one big advantage: it is written by the
same people who wrote Windows.  So it can seize the Windows display and
keyboard, and take control over the entire UI.  I happen to think that's A Bad
Thing™ but I may be in the minority on
that.&lt;/p&gt;
&lt;p&gt;Of course …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 26 Jun 2006 15:51:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-06-26:/2006_06_26-powerpoint_alternatives.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>Over-Solving the Problem or When your architect is a DBA...</title><link>https://slott56.github.io/2006_06_20-over_solving_the_problem_or_when_your_architect_is_a_dba.html</link><description>&lt;p&gt;R. Lucente shared an email with me that included
&lt;a class="reference external" href="http://www.hotsos.com"&gt;Cary
Millsap's&lt;/a&gt;   Volume Theorem.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Theorem&lt;/em&gt; :
&lt;strong&gt;No human wants to see more than 10 rows. Ever.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Which caused me to wonder why
anyone would ever use an RDBMS as a slow, complex, high-overhead message queue.
I've seen it done several times, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jun 2006 20:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-06-20:/2006_06_20-over_solving_the_problem_or_when_your_architect_is_a_dba.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Python OODB (Revised)</title><link>https://slott56.github.io/2006_06_20-python_oodb_revised.html</link><description>&lt;p&gt;Simple object persistence (i.e., serialization to
a file system) is what pickle, marshal and shelve
do.&lt;/p&gt;
&lt;p&gt;However, here's the next thing of
some interest OODB's.&lt;/p&gt;
&lt;p&gt;Zope's &lt;a class="reference external" href="http://www.zope.org/Wikis/ZODB/FrontPage"&gt;ZODB&lt;/a&gt; .  The original OODB for Python, the
backbone of Zope.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://buzhug.sourceforge.net/"&gt;buzhug&lt;/a&gt; :
&amp;quot;a fast, pure-Python database engine, using a syntax that Python programmers
should …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jun 2006 10:35:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-06-20:/2006_06_20-python_oodb_revised.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>Faerie Dust™</title><link>https://slott56.github.io/2006_06_19-faerie_dusttm.html</link><description>&lt;p&gt;Here's how to recognize a
&lt;strong&gt;Faerie Dust&lt;/strong&gt;
request:&lt;/p&gt;
&lt;p&gt;1.  We have identified a
problem.  It can be with almost anything: scalability, reliability,
auditability, any &lt;a class="reference external" href="http://www.sei.cmu.edu/str/taxonomies/view_qm.html"&gt;Quality Measure&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;2.  We're pursuing a specific technology.
Typically, something that has the lowest impact on our
architecture.&lt;/p&gt;
&lt;p&gt;3.  We can't address anything
other than this …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 19 Jun 2006 20:12:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-06-19:/2006_06_19-faerie_dusttm.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>Faerie Dust</category></item><item><title>Office is Bloated, Let's Add More</title><link>https://slott56.github.io/2006_06_07-office_is_bloated_lets_add_more.html</link><description>&lt;p&gt;&amp;quot;There has been a lot of skepticism about the
usefulness--and necessity--of the Ribbon, and I have to admit that I was among
the doubters. Why change something that works? Because, according to Microsoft,
the current interface has become bloated with too many
menus.&amp;quot;&lt;/p&gt;
&lt;p&gt;Ugh.  It's bloated, so we'll
add features …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Jun 2006 15:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-06-07:/2006_06_07-office_is_bloated_lets_add_more.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>microsoft</category></item><item><title>What was this supposed to fix?</title><link>https://slott56.github.io/2006_05_22-what_was_this_supposed_to_fix.html</link><description>&lt;p&gt;This is the part that helped me understand this:
&amp;quot;It was kind of like a miracle drug,&amp;quot; [Ruth Samuelson] said. &amp;quot;It's going to do
all this stuff and I just didn't think it was
possible.&amp;quot;&lt;/p&gt;
&lt;p&gt;It appears to me, just
reading this account, that there wasn't a clearly articulated problem …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 22 May 2006 18:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-05-22:/2006_05_22-what_was_this_supposed_to_fix.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>management</category></item><item><title>Software Engineering doesn't fit the Standard Model</title><link>https://slott56.github.io/2006_05_08-software_engineering_doesnt_fit_the_standard_model.html</link><description>&lt;p&gt;Nisley says &amp;quot;Imagine a programming contractor
proposing that increasing the average interrupt latency by 10 μs would
reduce the module size by 5 percent and improve the error rate by 3 percent.
When was the last time you saw precise numeric relations between various aspects
of a  programming project, before …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 08 May 2006 11:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-05-08:/2006_05_08-software_engineering_doesnt_fit_the_standard_model.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>numerosity</category></item><item><title>My Microsoft Blind-Spot</title><link>https://slott56.github.io/2006_05_04-my_microsoft_blind_spot.html</link><description>&lt;p&gt;Hobbit says &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20060228202627/#90649"&gt;http://www.haloscan.com/comments/slott/E20060228202627/#90649&lt;/a&gt; &amp;quot;Everything in the windows world does not
directly work with the &amp;quot;rapidly-evolving&amp;quot; windows api's (for example, c# devs
rarely concern themselves with api calls.) If there is such a lack of clarity in
these API's causing a &amp;quot;barrier to innovation …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 04 May 2006 14:08:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-05-04:/2006_05_04-my_microsoft_blind_spot.html</guid><category>Management</category><category>management</category></item><item><title>Notable Failure of Use Cases - Part 4</title><link>https://slott56.github.io/2006_04_28-notable_failure_of_use_cases_part_4.html</link><description>&lt;p&gt;I recently reviewed some end user-authored use
cases, and they -- of course -- reflect the way people actually work.  The
computer system was largely incidental to what they
did.&lt;/p&gt;
&lt;p&gt;Each use case listed half a dozen
actors, had a dozen or more steps, and involved many off-line interactions among
the actors …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 28 Apr 2006 10:32:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-28:/2006_04_28-notable_failure_of_use_cases_part_4.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>requirements</category></item><item><title>The Leading Edge (Revised)</title><link>https://slott56.github.io/2006_04_26-the_leading_edge_revised.html</link><description>&lt;p&gt;&lt;strong&gt;Is Now the Time?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;First, and foremost, Open
Source solutions are growing
rapidly.&lt;/p&gt;
&lt;p&gt;Let's pick a random periodical
sitting in my recycling: Information Week.   There are 1579 items in
InformationWeek &lt;a class="reference external" href="http://www.informationweek.com/TechSearch/Search.jhtml;jsessionid=RN4ODNGHETZR2QSNDBCSKHSCJUMEKJVN?site_id=InformationWeek&amp;amp;personality=category&amp;amp;queryText=open+source"&gt;http://www.informationweek.com/TechSearch/Search.jhtml;jsessionid=RN4ODNGHETZR2QSNDBCSKHSCJUMEKJVN?site_id=InformationWeek&amp;amp;personality=category&amp;amp;queryText=open+source&lt;/a&gt; for 'open source'.  SOA …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Apr 2006 19:15:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-26:/2006_04_26-the_leading_edge_revised.html</guid><category>Management</category><category>management</category></item><item><title>The Cost (and Benefit) of Open Source</title><link>https://slott56.github.io/2006_04_24-the_cost_and_benefit_of_open_source.html</link><description>&lt;p&gt;I've had this conversation more than
once.&lt;/p&gt;
&lt;p&gt;Me: &amp;quot;We can download something
like &lt;a class="reference external" href="http://jakarta.apache.org/poi/"&gt;POI&lt;/a&gt;  to read the Excel™ files.  Or I can
spend months writing something.&amp;quot;&lt;/p&gt;
&lt;p&gt;Them:
&amp;quot;We have a policy against open source
software.&amp;quot;&lt;/p&gt;
&lt;p&gt;Me:  &amp;quot;Do you use &lt;a class="reference external" href="http://www.apache.org/"&gt;Apache&lt;/a&gt; ?&amp;quot;&lt;/p&gt;
&lt;p&gt;Them:
&amp;quot;That's different.&amp;quot;&lt;/p&gt;
&lt;p&gt;Me:  &amp;quot;How so?  Be
specific in enumerating …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Apr 2006 23:59:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-24:/2006_04_24-the_cost_and_benefit_of_open_source.html</guid><category>Management</category><category>management</category></item><item><title>The Role of Open Source in the Enterprise IT Investment Strategy</title><link>https://slott56.github.io/2006_04_22-the_role_of_open_source_in_the_enterprise_it_investment_strategy.html</link><description>&lt;p&gt;My point -- always -- is that I'm not here to
&lt;strong&gt;convert&lt;/strong&gt;
anyone.  I'm just here to respond to the need for open source consulting
skills.&lt;/p&gt;
&lt;p&gt;As a parallel example, TH
explained (at length) that there was NO earthly reason to retire a perfectly
good IBM z-series mainframe.  The z-series represents cheap …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 22 Apr 2006 14:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-22:/2006_04_22-the_role_of_open_source_in_the_enterprise_it_investment_strategy.html</guid><category>Management</category><category>management</category></item><item><title>Doctest beyond Python</title><link>https://slott56.github.io/2006_04_17-doctest_beyond_python.html</link><description>&lt;p&gt;This is something that elevates Doctest into the
realm of Pattern.  Perhaps even above
that.&lt;/p&gt;
&lt;p&gt;The idea is so elegant: the
document is the test, and the test procedure is the
document.&lt;/p&gt;
&lt;p&gt;There's a &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Don't_repeat_yourself"&gt;DRY&lt;/a&gt;  clarity to the whole thing that is rather
exciting.  It is an elegant application of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 17 Apr 2006 14:53:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-17:/2006_04_17-doctest_beyond_python.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Python Object-Relational Mapping (Revised)</title><link>https://slott56.github.io/2006_04_13-python_object_relational_mapping_revised.html</link><description>&lt;p&gt;Ian Bicking: A Blog &lt;a class="reference external" href="http://blog.ianbicking.org/"&gt;http://blog.ianbicking.org/&lt;/a&gt;,
provided some info on Py3K and Python Introspection &lt;a class="reference external" href="http://blog.ianbicking.org/introspecting-expressions-in-py3k.html"&gt;http://blog.ianbicking.org/introspecting-expressions-in-py3k.html&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For
me, the interesting part was his summary of Object-Relational Mapping.  Mr.
Bicking identifies two broad approaches: lambda introspection and operator
overloading.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Lamba Introspection&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://projects.amor.org/dejavu"&gt;Dejavu&lt;/a&gt;
It primarily uses …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 13 Apr 2006 02:37:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-13:/2006_04_13-python_object_relational_mapping_revised.html</guid><category>Python</category><category>#python</category><category>database</category></item><item><title>The Weirdness Of Change (Revised)</title><link>https://slott56.github.io/2006_04_07-the_weirdness_of_change_revised.html</link><description>&lt;p&gt;The following weirdness often happens when we
encounter complex business problems.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The users hate something and want new
software.  They justify a project to spend $100K replacing something that
appears broken.&lt;/li&gt;
&lt;li&gt;The Business Analyst notes a control issue
that is really a conflict between software functionality and business rewards.&lt;/li&gt;
&lt;li&gt;The …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 Apr 2006 16:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-07:/2006_04_07-the_weirdness_of_change_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>project management</category><category>knowledge capture</category></item><item><title>The Twenty-Minute Solution</title><link>https://slott56.github.io/2006_04_05-the_twenty_minute_solution.html</link><description>&lt;p&gt;First, let me get this off my chest: Django
&lt;a class="reference external" href="http://www.djangoproject.com/"&gt;http://www.djangoproject.com/&lt;/a&gt; rules.  There are a number of reasons, but
they aren't the point of this
posting.&lt;/p&gt;
&lt;p&gt;When someone creates a
twenty-minute application, they walk a fine line.  The minimalist approach to
software development can be viewed from two …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 05 Apr 2006 15:49:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-04-05:/2006_04_05-the_twenty_minute_solution.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>Development, Pedagogy and Hobby</title><link>https://slott56.github.io/2006_03_27-development_pedagogy_and_hobby.html</link><description>&lt;p&gt;In
&lt;em&gt;Rat-holes of Lost Time&lt;/em&gt;  [&lt;a class="reference external" href="https://slott56.github.io/2006_02_24-rat_holes_of_lost_time.html"&gt;Rat-Holes of Lost Time&lt;/a&gt; ], I thought out loud about software
development and how the resulting software product may or may not be of any
value.  In SEI terminology [&lt;a class="reference external" href="http://www.sei.cmu.edu/str/taxonomies/view_qm.html"&gt;view_qm&lt;/a&gt; ], this is Need Satisfaction.  Sometimes I
call it &lt;strong&gt;Solving The Problem&lt;/strong&gt; ™.&lt;/p&gt;
&lt;p&gt;I
tried to distinguish two …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Mar 2006 15:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-03-27:/2006_03_27-development_pedagogy_and_hobby.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Offshoring and Short-Term Thinking</title><link>https://slott56.github.io/2006_03_25-offshoring_and_short_term_thinking.html</link><description>&lt;p&gt;This comment &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20060320165855/#77968"&gt;http://www.haloscan.com/comments/slott/E20060320165855/#77968&lt;/a&gt; floored me: &amp;quot;Another answer [to the 'what
do you value?' question] could be to show cost reduction for the quarter. Its
the old short term thinking to make Wall Street
happy.&amp;quot;&lt;/p&gt;
&lt;p&gt;First, I concluded that &amp;quot;cost
reduction&amp;quot; is somehow separate …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 25 Mar 2006 16:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-03-25:/2006_03_25-offshoring_and_short_term_thinking.html</guid><category>Management</category><category>management</category></item><item><title>Offshoring Shows How Valuable Code Is (Revised)</title><link>https://slott56.github.io/2006_03_20-offshoring_shows_how_valuable_code_is_revised.html</link><description>&lt;p&gt;See Schrage in CIO magazine on March 15 &lt;a class="reference external" href="http://www.cio.com/archive/031506/schrage.html?page=1"&gt;http://www.cio.com/archive/031506/schrage.html?page=1&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When
we outsource of offshore some coding, what are we saying is
valuable?&lt;/p&gt;
&lt;p&gt;We're saying that the net
effect of the installed software has value.  We're saying that no existing
product does …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 20 Mar 2006 21:58:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-03-20:/2006_03_20-offshoring_shows_how_valuable_code_is_revised.html</guid><category>Management</category><category>management</category></item><item><title>Making PDF's with and without XSL FO (Revised)</title><link>https://slott56.github.io/2006_03_20-making_pdfs_with_and_without_xsl_fo_revised.html</link><description>&lt;p&gt;I've been using the Apache FOP &lt;a class="reference external" href="http://xmlgraphics.apache.org/fop/"&gt;http://xmlgraphics.apache.org/fop/&lt;/a&gt;
to transform XSL:FO into PDF's.  FOP works well enough for some DocBook
processing, but it can't handle really complex stuff gracefully.&lt;/p&gt;
&lt;p&gt;Can we also use this XSL:FO technology
for producing PDF form letters as part of a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 20 Mar 2006 15:41:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-03-20:/2006_03_20-making_pdfs_with_and_without_xsl_fo_revised.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>C#, Microsoft and Hegemony</title><link>https://slott56.github.io/2006_03_01-c_microsoft_and_hegemony.html</link><description>&lt;p&gt;First, I've had some opinions on this &amp;quot;one
language&amp;quot; ideal &lt;a class="reference external" href="https://slott56.github.io/2006_01_27-after_perl_what_revised.html"&gt;After PERL what?&lt;/a&gt;.  We have a variety of languages for a
good reason: the languages express different kinds of things.  Shell command
languages really have little to do with markup languages, database manipulation
languages or &amp;quot;general-purpose&amp;quot; programming
languages.&lt;/p&gt;
&lt;p&gt;One of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 01 Mar 2006 01:26:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-03-01:/2006_03_01-c_microsoft_and_hegemony.html</guid><category>Management</category><category>management</category></item><item><title>Agile Testing Goodies from PyCon 2006</title><link>https://slott56.github.io/2006_02_27-agile_testing_goodies_from_pycon_2006.html</link><description>&lt;p&gt;A number of testing frameworks were used.  The
Agile Testing tutorial provides a path through the toolsets, showing what you
can do, and how you should do it.&lt;/p&gt;
&lt;p&gt;Unit
Testing:  [&lt;a class="reference external" href="http://somethingaboutorange.com/mrl/projects/nose/"&gt;Nose&lt;/a&gt; ], &amp;lt;{filename}/blog/2005/11/2005_11_09-compare_and_contrast_round_3_revised.rst&amp;gt;&lt;/p&gt;
&lt;p&gt;Acceptance
Testing:  [&lt;a class="reference external" href="http://fitnesse.org/FrontPage"&gt;FitNesse&lt;/a&gt; ]&lt;/p&gt;
&lt;p&gt;Regression
Testing:  [&lt;a class="reference external" href="http://texttest.carmen.se/index.html"&gt;TextTest&lt;/a&gt; ]&lt;/p&gt;
&lt;p&gt;Functional
Testing:  [&lt;a class="reference external" href="http://www.idyll.org/~t/www-tools/twill/"&gt;twill&lt;/a&gt; ].  A thorough analysis is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 27 Feb 2006 11:26:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-27:/2006_02_27-agile_testing_goodies_from_pycon_2006.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Rat-holes of Lost Time</title><link>https://slott56.github.io/2006_02_24-rat_holes_of_lost_time.html</link><description>&lt;p&gt;Much of software development is best described as
&amp;quot;problem-solving&amp;quot;.  Much of the rest, BTW, is knowledge
capture.&lt;/p&gt;
&lt;p&gt;When we look at the time spent
on problem solving we can see four potential outcomes.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Time is spent producing a viable solution to
the actual problem.&lt;/li&gt;
&lt;li&gt;Time is spent producing a non-solution …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 24 Feb 2006 01:36:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-24:/2006_02_24-rat_holes_of_lost_time.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>knowledge capture</category></item><item><title>Don't Pave the Cowpaths</title><link>https://slott56.github.io/2006_02_19-dont_pave_the_cowpaths.html</link><description>&lt;p&gt;In it, Bruce Silver recollects process
reengineering gurus who warned &amp;quot;Don't pave the cowpaths!&amp;quot;.  Presumably because
the cow path was a random walk all over the pasture land, and wasn't the most
efficient course.&lt;/p&gt;
&lt;p&gt;However, anyone who
was watched cows at work will tell you that the cow path is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 19 Feb 2006 21:33:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-19:/2006_02_19-dont_pave_the_cowpaths.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Opacity and Perl</title><link>https://slott56.github.io/2006_02_07-opacity_and_perl.html</link><description>&lt;p&gt;In my case, the opacity of Perl actually wasn't
entirely my opinion.  I was contacted by folks that were struggling with Perl.
In one case, they specifically lifted up the opacity problem.  &amp;quot;If my partner
gets hit by the bus, I can't maintain these web
sites.&amp;quot;&lt;/p&gt;
&lt;p&gt;In the other case …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 07 Feb 2006 11:51:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-07:/2006_02_07-opacity_and_perl.html</guid><category>Management</category><category>management</category></item><item><title>Control Break Reporting</title><link>https://slott56.github.io/2006_02_06-control_break_reporting.html</link><description>&lt;p&gt;Control Break Reporting is a design pattern that
has been around since the earliest days of business applications.  It solves the
problem of producing a report on nested (or hierarchical) data, the kind often
found in a chart of accounts.&lt;/p&gt;
&lt;p&gt;The
result of control break reporting is a properly nested …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 06 Feb 2006 23:49:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-06:/2006_02_06-control_break_reporting.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Perl Follow-up</title><link>https://slott56.github.io/2006_02_05-perl_follow_up.html</link><description>&lt;p&gt;RL says, &amp;quot;Really nice article. It seems that Perl
does not have frameworks ? &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20060126195803/#59841"&gt;http://www.haloscan.com/comments/slott/E20060126195803/#59841&lt;/a&gt;&amp;quot;&lt;/p&gt;
&lt;p&gt;At
first I didn't understand the comment.  Then I realized that my premise -- Perl
is obsolete -- was buried under a pile of other
information.&lt;/p&gt;
&lt;p&gt;Somehow my &amp;quot;So step one …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 05 Feb 2006 00:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-02-05:/2006_02_05-perl_follow_up.html</guid><category>Management</category><category>management</category></item><item><title>After Perl, what? (Revised)</title><link>https://slott56.github.io/2006_01_27-after_perl_what_revised.html</link><description>&lt;p&gt;&lt;strong&gt;The Problem.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Perl's old.  And Perl is
without shame about adopting every syntax gimmick on earth.  Consequently, Perl
has accreted enough features that Perl programs are hard to read, making them
impossible to maintain.  More thoughts on this opacity problem in Gadgetopia
&lt;a class="reference external" href="http://www.gadgetopia.com/post/1919"&gt;http://www.gadgetopia.com/post/1919&lt;/a&gt; and Freshmeat …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 27 Jan 2006 00:58:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-01-27:/2006_01_27-after_perl_what_revised.html</guid><category>Management</category><category>management</category></item><item><title>Stating the Problem</title><link>https://slott56.github.io/2006_01_20-stating_the_problem.html</link><description>&lt;p&gt;RL's blog &lt;a class="reference external" href="http://rlucente.bloki.com/blog"&gt;http://rlucente.bloki.com/blog&lt;/a&gt; is
full of scrambling attempts at stating a problem.  While, in principle, stating
a problem is a trivial exercise (someone can't do something), RL has managed to
make it wonderfully complex.  The root cause of the complexity could be a
fundamental unwillingness to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 20 Jan 2006 12:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-01-20:/2006_01_20-stating_the_problem.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>requirements</category></item><item><title>Ouch, this is going to hurt</title><link>https://slott56.github.io/2006_01_11-ouch_this_is_going_to_hurt.html</link><description>&lt;p&gt;See RLucente's Blog [&lt;a class="reference external" href="http://rlucente.bloki.com/blog/index.jsp?name=blog-1136903210375"&gt;bloki&lt;/a&gt; ] and Business Week Online &lt;a class="reference external" href="http://www.businessweek.com/the_thread/techbeat/archives/2006/01/_its_all_part_o.html?campaign_id=rss_blog_techbeat"&gt;http://www.businessweek.com/the_thread/techbeat/archives/2006/01/_its_all_part_o.html?campaign_id=rss_blog_techbeat&lt;/a&gt;&amp;gt;`_ `  &amp;lt;&lt;a class="reference external" href="http://blogs.businessweek.com/mt/mt-tb.cgi/2702.1285312848"&gt;http://blogs.businessweek.com/mt/mt-tb.cgi/2702.1285312848&lt;/a&gt; for some information on JotSpot Tracker
&lt;a class="reference external" href="http://tracker.jot.com/"&gt;http://tracker.jot.com/&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What
a dangerous tool.  Which means an opportunity space …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 11 Jan 2006 12:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-01-11:/2006_01_11-ouch_this_is_going_to_hurt.html</guid><category>Management</category><category>management</category></item><item><title>Why Is OO So Popular?</title><link>https://slott56.github.io/2006_01_10-why_is_oo_so_popular.html</link><description>&lt;p&gt;&amp;quot;Polymorphism is nice as well, although I can't
grok (yet) why this is necessarily not part of non-OO things. I'm not clear that
it goes with the strong binding of state and method in a
class.&amp;quot;&lt;/p&gt;
&lt;p&gt;Polymorphism isn't necessarily
part of OO.  Python actually has polymorphic functions outside of class …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 10 Jan 2006 03:29:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2006-01-10:/2006_01_10-why_is_oo_so_popular.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>object-oriented design</category><category>complexity</category></item><item><title>testresources</title><link>https://slott56.github.io/2005_12_26-testresources.html</link><description>&lt;p&gt;testresources' &lt;a class="reference external" href="http://www.robertcollins.net/unittest/testresources/"&gt;http://www.robertcollins.net/unittest/testresources/&lt;/a&gt;
purpose appears to be to manage the resources used by a test
suite.&lt;/p&gt;
&lt;p&gt;Adding this resource management
context extends the &lt;strong&gt;Test Suite&lt;/strong&gt;  to optimize tests around the resources.
This can reshuffle the TestCases to minimize SetUp's.  This can be useful in
contexts where …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 26 Dec 2005 13:57:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-26:/2005_12_26-testresources.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>SubUnit</title><link>https://slott56.github.io/2005_12_20-subunit.html</link><description>&lt;p&gt;SubUnit's &lt;a class="reference external" href="http://www.robertcollins.net/unittest/subunit/"&gt;http://www.robertcollins.net/unittest/subunit/&lt;/a&gt; purpose appears to be to manage testing
via subprocesses.&lt;/p&gt;
&lt;p&gt;Consequently, it can
run external tests not in Python, it can fork a subprocess to manage the Fixture
in an isolated process.&lt;/p&gt;
&lt;p&gt;Adding this
subprocess execution context extends the
&lt;strong&gt;Test Runner&lt;/strong&gt;  implementation of the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Dec 2005 18:36:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-20:/2005_12_20-subunit.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Twisted Trial</title><link>https://slott56.github.io/2005_12_15-twisted_trial.html</link><description>&lt;p&gt;Trial is not really a stand-alone unit test
framework.  It is an extension to unittest focused on the testing needs for the
Twisted framework.&lt;/p&gt;
&lt;p&gt;The Trial how-to
&lt;a class="reference external" href="http://twistedmatrix.com/projects/core/documentation/howto/testing.html"&gt;http://twistedmatrix.com/projects/core/documentation/howto/testing.html&lt;/a&gt; has some information.  More valuable,
perhaps are the API documents &lt;a class="reference external" href="http://twistedmatrix.com/documents/current/api/twisted.trial.html"&gt;http://twistedmatrix.com/documents …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Dec 2005 17:10:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-15:/2005_12_15-twisted_trial.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>More Frameworks! (rev. 3)</title><link>https://slott56.github.io/2005_12_13-more_frameworks_rev_3.html</link><description>&lt;p&gt;A wiki page on Python testing tools &lt;a class="reference external" href="http://pycheesecake.org/wiki/PythonTestingToolsTaxonomy"&gt;http://pycheesecake.org/wiki/PythonTestingToolsTaxonomy&lt;/a&gt; identifies a number of additional unit
testing tools.  The wiki page provides a handy summary.  I'll examine these in
light of the Beck Unit Test design patterns to provide a little more detail on
what they really do …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2005 18:40:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-13:/2005_12_13-more_frameworks_rev_3.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Tabular Results</title><link>https://slott56.github.io/2005_12_13-tabular_results.html</link><description>&lt;p&gt;The &amp;quot;correct&amp;quot; answer is to fully normalize the
design and get away from a mixed bag of columns and nulls.  The MESS is bad from
every perspective, except query performance.  A semi-normalized design that
separates the STATE CHANGES from the ESSENTIAL DEFINITION is an optimal design
in many respects.&lt;/p&gt;
&lt;p&gt;Here …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Dec 2005 11:43:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-13:/2005_12_13-tabular_results.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Normalization Results</title><link>https://slott56.github.io/2005_12_12-normalization_results.html</link><description>&lt;p&gt;Experimental results depend on details of the
database server and the data model used.  Actual application software may have
other confounding problems that make these results less dramatic or more
dramatic when applied to a existing application
design.&lt;/p&gt;
&lt;p&gt;I compared three table designs
described in a previous posting &lt;a class="reference external" href="https://slott56.github.io/2005_12_01-normalization_experiment_protocol_revised.html"&gt;Normalization Experiment …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Dec 2005 12:16:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-12:/2005_12_12-normalization_results.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Normalization - More Comments</title><link>https://slott56.github.io/2005_12_02-normalization_more_comments.html</link><description>&lt;p&gt;Fragmentation &amp;amp; similar is sometimes a
storage problem in I/O generated, vs. the gross space consumed. This distinction
didn't leap out at me.&lt;/p&gt;
&lt;p&gt;Performance
degradation and storage expansion are closely related, but only for certain
kinds of queries.  Full table scans are penalized by sparsely used storage.
Individual row retrievals …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Dec 2005 03:02:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-02:/2005_12_02-normalization_more_comments.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Normalization Experiment Protocol (revised)</title><link>https://slott56.github.io/2005_12_01-normalization_experiment_protocol_revised.html</link><description>&lt;p&gt;The open question is &amp;quot;What is the cost of
fragmentation?&amp;quot;&lt;/p&gt;
&lt;p&gt;The cost has some
absolute components and some relative components.  Since fragmentation is
difficult to avoid except through grotesque over-allocation of space, the issue
is to control fragmentation through normalization.  A more important pair of
questions, then, are these:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;What …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Dec 2005 11:24:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-12-01:/2005_12_01-normalization_experiment_protocol_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Normalization - Some Comments</title><link>https://slott56.github.io/2005_11_30-normalization_some_comments.html</link><description>&lt;p&gt;&lt;em&gt;&amp;quot;How do we prevent storage fragmentation and the associated slow-down ?&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Why prevent ?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is hard to respond
to.  The ounce-of-prevent-pound-of-cure didn't resonate with the reviewer.  What
would resonate?  An in-depth discussion of the &amp;quot;prevention is an investment with
an indefinite period of return and correction is an ongoing cost&amp;quot; doesn't …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 30 Nov 2005 16:53:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-30:/2005_11_30-normalization_some_comments.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Normalization for Performace (revised)</title><link>https://slott56.github.io/2005_11_25-normalization_for_performace_revised.html</link><description>&lt;p&gt;Perhaps this is heresy.  Perhaps it merely shows
that the orthodox may be focused on short-term delivery, not long-term
value.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CONTEXT AND PROBLEM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The client has a table we
could describe as following the M.E.S.S. -- Multiple Entity Sub-Species --
design pattern.  The hallmarks of this design are a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 25 Nov 2005 20:27:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-25:/2005_11_25-normalization_for_performace_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>data structure</category><category>algorithm</category><category>database design</category></item><item><title>Compare and Contrast (round 3, revised)</title><link>https://slott56.github.io/2005_11_09-compare_and_contrast_round_3_revised.html</link><description>&lt;p&gt;The object-oriented unit testing framework began
as Smalltalk's Beck Test framework &lt;a class="reference external" href="http://www.xprogramming.com/testfram.htm"&gt;http://www.xprogramming.com/testfram.htm&lt;/a&gt;.  It evolved to the JUnit &lt;a class="reference external" href="http://www.junit.org/index.htm"&gt;http://www.junit.org/index.htm&lt;/a&gt;&amp;gt;`_ `  &amp;lt;&lt;a class="reference external" href="http://www.junit.org/index.htm%22%20target=%22NewWindow"&gt;http://www.junit.org/index.htm%22%20target=%22NewWindow&lt;/a&gt;
framework for Java.  Beck defined four repeated patterns of unit testing
software …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 09 Nov 2005 19:38:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-09:/2005_11_09-compare_and_contrast_round_3_revised.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Compare and Contrast (round 2)</title><link>https://slott56.github.io/2005_11_07-compare_and_contrast_round_2.html</link><description>&lt;p&gt;The object-oriented unit testing framework began
as Smalltalk's Beck Test framework &lt;a class="reference external" href="http://www.xprogramming.com/testfram.htm%22%20target=%22NewWindow"&gt;http://www.xprogramming.com/testfram.htm%22%20target=%22NewWindow&lt;/a&gt;.
It evolved to the JUnit &lt;a class="reference external" href="http://www.junit.org/index.htm%22%20target=%22NewWindow"&gt;http://www.junit.org/index.htm%22%20target=%22NewWindow&lt;/a&gt;
framework for Java.  Beck defined four repeated patterns of unit testing
software, covered in a previous …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 07 Nov 2005 17:50:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-07:/2005_11_07-compare_and_contrast_round_2.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Paying Micro$oft Twice</title><link>https://slott56.github.io/2005_11_06-paying_microoft_twice.html</link><description>&lt;p&gt;MS AntiSpyware &amp;quot;free&amp;quot; beta &lt;a class="reference external" href="http://www.microsoft.com/athome/security/spyware/software/default.mspx"&gt;http://www.microsoft.com/athome/security/spyware/software/default.mspx&lt;/a&gt;.  Also, it appears &lt;a class="reference external" href="http://blogs.chron.com/techblog/archives/2005/11/microsoft_antis_1.html"&gt;http://blogs.chron.com/techblog/archives/2005/11/microsoft_antis_1.html&lt;/a&gt; to be called Windows
Defender.&lt;/p&gt;
&lt;p&gt;eWeek's slavish lack of clue
&lt;a class="reference external" href="http://www.eweek.com/article2/0,1895,1872253,00.asp"&gt;http://www.eweek.com/article2/0,1895,1872253,00.asp&lt;/a&gt;; Paul Thurott's lack …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 06 Nov 2005 18:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-06:/2005_11_06-paying_microoft_twice.html</guid><category>Management</category><category>management</category></item><item><title>Compare and Contrast (round 1)</title><link>https://slott56.github.io/2005_11_05-compare_and_contrast_round_1.html</link><description>&lt;p&gt;&lt;strong&gt;Some Basis for Comparison&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The object-oriented unit
testing framework began as Smalltalk's Beck Test framework &lt;a class="reference external" href="http://www.xprogramming.com/testfram.htm"&gt;http://www.xprogramming.com/testfram.htm&lt;/a&gt;.  It evolved to the JUnit &lt;a class="reference external" href="http://www.junit.org/index.htm"&gt;http://www.junit.org/index.htm&lt;/a&gt;
framework for Java.  Beck defined four repeated patterns of unit testing
software:&lt;/p&gt;
&lt;p&gt;The
&lt;strong&gt;Fixture&lt;/strong&gt; .
The thing we are …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 05 Nov 2005 20:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-05:/2005_11_05-compare_and_contrast_round_1.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Java - the new COBOL (Revised)</title><link>https://slott56.github.io/2005_11_03-java_the_new_cobol_revised.html</link><description>&lt;p&gt;Kontrawize says &lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/2005/11/java_is_the_new.html"&gt;http://kontrawize.blogs.com/kontrawize/2005/11/java_is_the_new.html&lt;/a&gt; that Java is the new assembler.&lt;/p&gt;
&lt;p&gt;/dev/null &lt;a class="reference external" href="http://www.haloscan.com/comments/slott/E20051101105604/#27166"&gt;http://www.haloscan.com/comments/slott/E20051101105604/#27166&lt;/a&gt; says &amp;quot;While we are willing to expose and
discuss the problems in Java, we do it because we want to improve it, not …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 03 Nov 2005 14:55:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-03:/2005_11_03-java_the_new_cobol_revised.html</guid><category>Management</category><category>management</category></item><item><title>Multi-Lingual Solutions: Explore in Python, Implement in Java</title><link>https://slott56.github.io/2005_11_02-multi_lingual_solutions_explore_in_python_implement_in_java.html</link><description>&lt;p&gt;I like Python for exploring unknown data [&lt;a class="reference external" href="https://slott56.github.io/2005_10_22-one_more_cool_thing_about_python_is.html"&gt;One More Cool Thing About Python&lt;/a&gt; ].&lt;/p&gt;
&lt;p&gt;Anthony B. Coates [&lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/"&gt;Homepage&lt;/a&gt; ] notes &amp;quot;I
tried Python for a while for similar reasons. However, in my case I was a bit
put off by the need to learn a another library API, which is not an …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 Nov 2005 00:51:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-02:/2005_11_02-multi_lingual_solutions_explore_in_python_implement_in_java.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Python Unit Testing Frameworks (v3)</title><link>https://slott56.github.io/2005_11_02-python_unit_testing_frameworks_v3.html</link><description>&lt;p&gt;Ned Batchelder : Blog [&lt;a class="reference external" href="http://www.nedbatchelder.com/blog/index.html"&gt;http://www.nedbatchelder.com/blog/index.html&lt;/a&gt; ] identifies no less than 6 unit testing
frameworks for Python [&lt;a class="reference external" href="http://www.nedbatchelder.com/blog/200510.html#e20051025T070731"&gt;http://www.nedbatchelder.com/blog/200510.html#e20051025T070731&lt;/a&gt; ] and [&lt;a class="reference external" href="http://www.nedbatchelder.com/blog/200411.html#e20041120T185622"&gt;http://www.nedbatchelder.com/blog/200411.html#e20041120T185622&lt;/a&gt; ].&lt;/p&gt;
&lt;p&gt;TestGears
[&lt;a class="reference external" href="http://www.turbogears.com/testgears/"&gt;http://www.turbogears.com/testgears/&lt;/a&gt; ] is part of the TurboGears web
uber-framework …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 02 Nov 2005 00:12:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-02:/2005_11_02-python_unit_testing_frameworks_v3.html</guid><category>Python</category><category>#python</category><category>unit testing</category></item><item><title>Measuring Python Against Java (Updated)</title><link>https://slott56.github.io/2005_11_01-measuring_python_against_java_updated.html</link><description>&lt;p&gt;&lt;strong&gt;Date&lt;/strong&gt;
[&lt;a class="reference external" href="http://jroller.com/page/cpurdy?entry=the_seven_habits_of_highly"&gt;seven habits&lt;/a&gt; ].  Including Calendar and the SQL
variations on the core Date class.  Since it's legacy technology, Date can't be
removed.  And almost everyone gets confused by java.sql.Date and
java.util.Calendar.  There seem to be three problems: mutability of Date
objects, the naming problem with the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 01 Nov 2005 15:56:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-11-01:/2005_11_01-measuring_python_against_java_updated.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Notable Failure Of Use Cases - Part 3</title><link>https://slott56.github.io/2005_10_31-notable_failure_of_use_cases_part_3.html</link><description>&lt;p&gt;&lt;strong&gt;Forces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;While
the intent of the use case technique is clear, it requires some discipline and
creativity to execute
successfully.&lt;/p&gt;
&lt;p&gt;There seem to be three
attractive sinks for time and
energy.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Stepping In Sequence&lt;/strong&gt; .  Often, the first use cases
developed are often those that occur “early” in the business
process …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 31 Oct 2005 19:52:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-31:/2005_10_31-notable_failure_of_use_cases_part_3.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>The Power of Static HTML</title><link>https://slott56.github.io/2005_10_31-the_power_of_static_html.html</link><description>&lt;p&gt;&lt;strong&gt;PROBLEM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I
need to display my product catalog according to a number of dimensions but the
data changes slowly and isn't very complex.  Is a relational database and a web
application really appropriate?  Or can I get away with something
simpler?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CONTEXT&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Some
small product catalogs evolve slowly.  A detailed …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 31 Oct 2005 02:00:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-31:/2005_10_31-the_power_of_static_html.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>Notable Failure of Use Cases - Part 2</title><link>https://slott56.github.io/2005_10_28-notable_failure_of_use_cases_part_2.html</link><description>&lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The
company,
&lt;em&gt;H&lt;/em&gt; , is
a large, well-established financial services firm.  In order to meet regulatory
reporting requirements, they elected to build a data warehouse that would
integrate information from 40 applications to feed an application that would
produce the regulatory
reports.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;H&lt;/em&gt; put together a team of business analysts …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 28 Oct 2005 10:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-28:/2005_10_28-notable_failure_of_use_cases_part_2.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Numerology</title><link>https://slott56.github.io/2005_10_27-numerology.html</link><description>&lt;p&gt;Here are three additional levels of numerology
that just don't belong the discipline of software
architecture.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Empiricism&lt;/strong&gt; .
Ideally these are from Physics and related &amp;quot;hard&amp;quot; sciences.  Psychology or
Economics are &amp;quot;hard&amp;quot; sciences in the other sense of hard -- they're difficult
because of the subject matter.  The magic number 7 ± 2 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 27 Oct 2005 13:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-27:/2005_10_27-numerology.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>numerosity</category></item><item><title>Notable Failure of Use Cases</title><link>https://slott56.github.io/2005_10_26-notable_failure_of_use_cases.html</link><description>&lt;p&gt;&lt;strong&gt;Context&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The
company,
&lt;em&gt;W&lt;/em&gt; , is
an e-business startup with a successful, profitable business operation.  They
were using a mixture of PCs and small servers from various sources to conduct
business.  They had a base of customers, a positive cash-flow and investment
dollars.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;W&lt;/em&gt;
contacted two large software and services companies …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Oct 2005 22:43:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-26:/2005_10_26-notable_failure_of_use_cases.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Rolling Your Own Hashmap (performance)</title><link>https://slott56.github.io/2005_10_25-rolling_your_own_hashmap_performance.html</link><description>&lt;p&gt;Reference:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://jroller.com/page/slobodan?entry=minimum_object_count_map_part7"&gt;Minimum Object Count Map, part 9 (Performance)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[snip]&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://jroller.com/page/slobodan?entry=minimum_object_count_map_part7"&gt;Minimum Object Count Map, part 9 (Performance)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I am not trying to attack/bash HashMap or suggest that MocMap is the new miracle implementation that should replace all other maps. I am trying to obtain an objective comparison to see where …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 25 Oct 2005 14:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-25:/2005_10_25-rolling_your_own_hashmap_performance.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Who's Problem Is It Anyway?</title><link>https://slott56.github.io/2005_10_24-whos_problem_is_it_anyway.html</link><description>&lt;p&gt;See
&lt;a class="reference external" href="http://techrepublic.com.com/5100-7343_11-5895588.html"&gt;Creating a Scalable Content Management Solution&lt;/a&gt;  by  Deb Shinder (Tech Republic,
10/17/05).&lt;/p&gt;
&lt;p&gt;See
RLucente's Blog [&lt;a class="reference external" href="http://rlucente.bloki.com/blog/index.jsp?name=blog-1130119781686"&gt;bloki&lt;/a&gt; ] for a summary of key points and some
additional references.&lt;/p&gt;
&lt;p&gt;She has some
interesting notes on CMS.  However, when we get down to brass tacks, something
profound is missing.  She hints …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Oct 2005 10:56:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-24:/2005_10_24-whos_problem_is_it_anyway.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>Software Project Management and Magic: The Gathering</title><link>https://slott56.github.io/2005_10_24-software_project_management_and_magic_the_gathering.html</link><description>&lt;p&gt;Having problems with possibly the dumbest
strategy of all time. It's difficult to work around because it comes from a
management interrupt, and all my lands are tapped out. I've got nothing left to
do except to sit around and watch bad things
happen.&lt;/p&gt;
&lt;p&gt;It's not the whole crew; it's …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Oct 2005 00:18:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-24:/2005_10_24-software_project_management_and_magic_the_gathering.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>One More Cool Thing About Python Is...</title><link>https://slott56.github.io/2005_10_22-one_more_cool_thing_about_python_is.html</link><description>&lt;p&gt;So, confronted with 1.4M records of questionable
data, what do we do?&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;We'll need a production program that can run
daily from now until the end of time to cleanse the data and reject the truly
evil records.&lt;/li&gt;
&lt;li&gt;We don't have a good fix on what the data is …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 22 Oct 2005 15:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-22:/2005_10_22-one_more_cool_thing_about_python_is.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Object Modeling (Revised)</title><link>https://slott56.github.io/2005_10_16-object_modeling_revised.html</link><description>&lt;p&gt;&lt;strong&gt;Objectives&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To write software, we need to understand what we're doing. We need to have a well-defined universe of discourse. This understanding must be documented. The documentation proceeds through increasingly refined levels of documentation.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;English prose.&lt;/li&gt;
&lt;li&gt;Diagrams and other semi-formal notations.&lt;/li&gt;
&lt;li&gt;Formal notations (BNF, IDL, Java, etc.)&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sometimes, the first …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 16 Oct 2005 18:16:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-16:/2005_10_16-object_modeling_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Deployment</title><link>https://slott56.github.io/2005_10_15-deployment.html</link><description>&lt;p&gt;The deployment document describes an installation
of the system, with specific host names and addresses.  This document is the
last of the formal deliverables, and forms the basis for an operator's or user's
guide.&lt;/p&gt;
&lt;p&gt;The deployment follows
successful implementation of the design, based on the architecture and
requirements.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Content&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;UML …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 15 Oct 2005 14:56:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-15:/2005_10_15-deployment.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Office 12 Interface</title><link>https://slott56.github.io/2005_10_15-office_12_interface.html</link><description>&lt;p&gt;This is a real &lt;a class="reference external" href="http://news.com.com/Office+12+makeover+takes+on+feature+creep/2100-1012_3-5873597.html?tag=st.prev"&gt;C|net&lt;/a&gt;   thought provoker on the Office 12 changes
that may come with Vista (or whatever they're calling Longhorn this
year).&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://www.codinghorror.com/blog/archives/000397.html"&gt;Coding Horror&lt;/a&gt;   for a view of Office 12.  &lt;a class="reference external" href="http://www.37signals.com/svn/archives2/microsoft_office_12_screen_shots.php"&gt;Signal vs. Noise&lt;/a&gt;   has some
thoughts.&lt;/p&gt;
&lt;p&gt;The bad thing is the
following apology for a bloated …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 15 Oct 2005 02:06:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-15:/2005_10_15-office_12_interface.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Implementation</title><link>https://slott56.github.io/2005_10_11-implementation.html</link><description>&lt;p&gt;An implementation document is prepared along with
the software to present the packaging and component structure, including visible
interfaces of components.  This shows the structure of the final deliverables,
and describes the files, databases and other persitent features of the system.
This document will also identify all third-party components
used …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 11 Oct 2005 11:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-11:/2005_10_11-implementation.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Competition</title><link>https://slott56.github.io/2005_10_07-competition.html</link><description>&lt;p&gt;Here's the wikipedia list of competing
titles.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.techbooksforfree.com/perlpython.shtml"&gt;Free downloads of Python books&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.byteofpython.info/"&gt;A Byte of Python&lt;/a&gt;   is a beginner's book on
Python.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.greenteapress.com/thinkpython/"&gt;How to
Think Like a Computer Scientist: Learning with Python&lt;/a&gt;   is an
introduction to function-based programming constructs using Python - free
download available or hardcopy may be purchased. (ISBN …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 Oct 2005 11:02:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-07:/2005_10_07-competition.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>How does Python stack up?</title><link>https://slott56.github.io/2005_10_07-how_does_python_stack_up.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://pjhyett.com/articles/2005/10/06/why-hasnt-anything-changed-since-the-50s"&gt;PJHyett&lt;/a&gt; asks&lt;/p&gt;
&lt;p&gt;Why is it that selling points of
newer langauges are features that Lisp had decades ago? Java has garbage
collection, Ruby has closures, Perl is dynamically typed, etc. What the hell
have we been doing this whole time besides reinventing the
wheel?&lt;/p&gt;
&lt;p&gt;Call me lazy, but I want …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 Oct 2005 03:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-07:/2005_10_07-how_does_python_stack_up.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>The Value of IT</title><link>https://slott56.github.io/2005_10_07-the_value_of_it.html</link><description>&lt;p&gt;See ComputerWorld vol 39, no 40, &lt;a class="reference external" href="http://www.computerworld.com/printthis/2005/0,4814,105042,00.html"&gt;56830&lt;/a&gt; .&lt;/p&gt;
&lt;p&gt;&amp;quot;Since
IT rarely drives the revenue of the business, its policies are little more than
lines in the sand at low tide.&amp;quot;&lt;/p&gt;
&lt;p&gt;See
RLucente's BLOKI  [&lt;a class="reference external" href="http://rlucente.bloki.com/forum/messages-index.jsp?tid=121692&amp;amp;fid=63898#forum-message1126636772113slott"&gt;bloki 1&lt;/a&gt;]
for the &amp;quot;IT uses ROI, but no one else
does&amp;quot; conversation.  I'll summarize some of
it …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 07 Oct 2005 00:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-07:/2005_10_07-the_value_of_it.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Lessig's Powerpoint-Fu</title><link>https://slott56.github.io/2005_10_05-lessigs_powerpoint_fu.html</link><description>&lt;p&gt;See &lt;a class="reference external" href="http://kontrawize.blogs.com/kontrawize/2005/10/antislideware.html"&gt;Kontrawize&lt;/a&gt;   for a take on Lessig's style, as
used by the CEO of SXIP,&lt;/p&gt;
&lt;p&gt;Here's Dick
Hardt's &lt;a class="reference external" href="http://www.identity20.com/media/OSCON2005/"&gt;SXIP presentation&lt;/a&gt;   that generated the
buzz.&lt;/p&gt;
&lt;p&gt;This style of presentation is
amazing.  Very demanding to prepare, very demanding to present.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 05 Oct 2005 21:26:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-05:/2005_10_05-lessigs_powerpoint_fu.html</guid><category>News</category><category>news</category></item><item><title>Rolling Your Own HashMap</title><link>https://slott56.github.io/2005_10_04-rolling_your_own_hashmap.html</link><description>&lt;p&gt;Reference:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://jroller.com/page/slobodan?entry=minimum_object_count_map_part1"&gt;Minimum Object Count Map, part 2 (Analysis)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;[snip]&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://jroller.com/page/slobodan?entry=minimum_object_count_map_part1"&gt;Minimum Object Count Map, part 2 (Analysis)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Was this really necessary? Yeah, it could be an overkill. [snip]&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://jroller.com/page/slobodan?entry=minimum_object_count_map_part1"&gt;Minimum Object Count Map, part 2 (Analysis)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I think it was overkill in the worst way.  I
don't see the head-to-head comparison with …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Oct 2005 10:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-04:/2005_10_04-rolling_your_own_hashmap.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>More Marketplaces</title><link>https://slott56.github.io/2005_10_04-more_marketplaces.html</link><description>&lt;p&gt;Also, see the SaleForce application exchange.
&lt;a class="reference external" href="http://www.salesforce.com/appexchange/"&gt;http://www.salesforce.com/appexchange/&lt;/a&gt;   which
seems to be finished applications, not developers for rent.  This is more of a
traditional product marketplace, not the newly emerging service
marketplace.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Oct 2005 01:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-04:/2005_10_04-more_marketplaces.html</guid><category>Management</category><category>management</category></item><item><title>More Marketplaces for Code (Revised)</title><link>https://slott56.github.io/2005_10_04-more_marketplaces_for_code_revised.html</link><description>&lt;p&gt;&lt;a class="reference external" href="http://www.microisv.com/"&gt;http://www.microisv.com/&lt;/a&gt; , be sure to see
Technorati's &lt;a class="reference external" href="http://www.technorati.com/blogs/MicroISV"&gt;MicroISV&lt;/a&gt;  BLOG
list.&lt;/p&gt;
&lt;p&gt;Also&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.rentacoder.com"&gt;http://www.rentacoder.com&lt;/a&gt; .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 04 Oct 2005 00:17:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-04:/2005_10_04-more_marketplaces_for_code_revised.html</guid><category>Management</category><category>management</category></item><item><title>Design</title><link>https://slott56.github.io/2005_10_03-design.html</link><description>&lt;p&gt;&lt;strong&gt;Content&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The
Design model generally consists of UML diagrams plus narratives where necessary.
The model describes the static structure and dynamic behavior of each class.
Additional non-behavioral requirements must also be included in the design
document.&lt;/p&gt;
&lt;p&gt;In the 4+1 view, the design
is the details of how to implement …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 03 Oct 2005 10:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-03:/2005_10_03-design.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Architecture</title><link>https://slott56.github.io/2005_10_01-architecture.html</link><description>&lt;p&gt;An architecture document not only describes the
solution, it must trace back to individual functional requirements, and also
should satisfy the non-functional requirements.  In most cases, the requirements
must be prioritized, and there will be tradeoffs for meeting absolutely all of
the requirements.&lt;/p&gt;
&lt;p&gt;In some cases, an
architecture exists, and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 01 Oct 2005 13:34:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-10-01:/2005_10_01-architecture.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Requirements</title><link>https://slott56.github.io/2005_09_29-requirements.html</link><description>&lt;p&gt;Requirements describe the problem, and provide a
direction for composing a solution.  The remaining deliverables, leading up to
the creation of software, are created from the requirements.    These includes
the architecture, design, implementation and deployment
documents.&lt;/p&gt;
&lt;p&gt;By defining the problem, the
requirements document also serves to bracket the scope of …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 29 Sep 2005 10:39:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-29:/2005_09_29-requirements.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category><category>requirements</category></item><item><title>Good Design and Pragmatic Design</title><link>https://slott56.github.io/2005_09_28-good_design_and_pragmatic_design.html</link><description>&lt;p&gt;Kenny YoungBuck approaches the Master and asks,
&amp;quot;What is good design?&amp;quot;&lt;/p&gt;
&lt;p&gt;The Master
replies, &amp;quot;Kenny, you innocent little monkey, it's a wonder you haven't joined a
cult.  Good design maximizes business value while minimizing costs including
development, maintenance, adaptation and
operation.&amp;quot;&lt;/p&gt;
&lt;p&gt;&amp;quot;Master, are there
circumstances where this is not
true …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 28 Sep 2005 10:46:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-28:/2005_09_28-good_design_and_pragmatic_design.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Dead Hard Drive</title><link>https://slott56.github.io/2005_09_28-dead_hard_drive.html</link><description>&lt;p&gt;In the spring (I wish I wrote down the dates for
this sequence of events) I bought my 5-pack for 10.4 &amp;quot;Tiger&amp;quot;.  (Think of Rod
Steiger and the Highway Patrol TV show with him leaning on a late 50's car
rasping &amp;quot;10-4&amp;quot; into a police radio.)&lt;/p&gt;
&lt;p&gt;I upgraded the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 28 Sep 2005 10:19:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-28:/2005_09_28-dead_hard_drive.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>Essay 10.2 - When a Column is Not a Column</title><link>https://slott56.github.io/2005_09_27-essay_102_when_a_column_is_not_a_column.html</link><description>&lt;p&gt;Sometimes a column is not the atomic piece of
data you thought it was.  See &lt;a class="reference external" href="https://slott56.github.io/2005_09_14-essay_101_when_a_column_is_not_a_column.html"&gt;Essay 10.1&lt;/a&gt;  for the first part of this rant,
which address multi-dimensionality.&lt;/p&gt;
&lt;p&gt;A
second example of a column not being an atomic piece of data is when we have to
support navigation through a …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Sep 2005 10:41:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-27:/2005_09_27-essay_102_when_a_column_is_not_a_column.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Deliverables, Process and Standards</title><link>https://slott56.github.io/2005_09_27-deliverables_process_and_standards.html</link><description>&lt;p&gt;Software development evolves through four phases:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Identification of a problem and inception of a
project to implement a solution.&lt;/li&gt;
&lt;li&gt;Elaboration (analysis) of that problem to
determine the most effective solution.&lt;/li&gt;
&lt;li&gt;Design of software to implement that
solution.&lt;/li&gt;
&lt;li&gt;Implementation of the solution; installing and
configuring software, training, and everything that goes …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 27 Sep 2005 01:22:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-27:/2005_09_27-deliverables_process_and_standards.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>methodology</category><category>agile</category></item><item><title>Essay 19 - Disentangling Use Cases and GUI Design (Revised)</title><link>https://slott56.github.io/2005_09_24-essay_19_disentangling_use_cases_and_gui_design_revised.html</link><description>&lt;p&gt;There are two layers of use case authoring and
minimal consensus on which level is &amp;quot;right&amp;quot; for any particular
purpose.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Business Level use cases - ignore the presence
or absence of a GUI, and pursue the business problem. This leaves designers free
to create any GUI, perhaps one that is not …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 24 Sep 2005 11:40:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-24:/2005_09_24-essay_19_disentangling_use_cases_and_gui_design_revised.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 18 - What Is Your Problem?</title><link>https://slott56.github.io/2005_09_23-essay_18_what_is_your_problem.html</link><description>&lt;p&gt;We know something is wrong or can be improved,
but we lack the will to drill into details and write a problem statement.  It
isn't a lack of ability, it is purely a lack of
will.&lt;/p&gt;
&lt;p&gt;A common source of serious issues
with software comes from proposing a solution without …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 23 Sep 2005 17:58:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-23:/2005_09_23-essay_18_what_is_your_problem.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 23 - Jumping the Technology Ship</title><link>https://slott56.github.io/2005_09_22-essay_23_jumping_the_technology_ship.html</link><description>&lt;p&gt;We're told, repeatedly, to avoid changing horses
in mid-stream.  We're told not to follow the crowd blindly.&lt;/p&gt;
&lt;p&gt;Once upon a time, we made a technology
decision that -- at the time -- was right.  But things have shifted around a
bit, and what was once prudence is now folly.  When do you …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Sep 2005 20:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-22:/2005_09_22-essay_23_jumping_the_technology_ship.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 17 - Solution or Workaround?</title><link>https://slott56.github.io/2005_09_22-essay_17_solution_or_workaround.html</link><description>&lt;p&gt;The challenge in starting a project correctly is
to get a problem statement written down in spite of the lack of clue.  There is
a pervasive unwillingness to tackle problem description because it is so hard.
It's hard because there is a potentially lengthy search to separate proximate
from root …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 22 Sep 2005 17:29:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-22:/2005_09_22-essay_17_solution_or_workaround.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>What are "Requirements"?</title><link>https://slott56.github.io/2005_09_21-what_are_requirements.html</link><description>&lt;p&gt;See Holub's column &amp;quot;Requirements Gathering&amp;quot;
[&lt;a class="reference external" href="http://www.sdtimes.com/fullcolumn/column-20050915-02.html"&gt;Requirements Gathering&lt;/a&gt; ] for the goods on what is actually useful
and what isn't so useful in this activity we call &amp;quot;Requirements
Gathering&amp;quot;.&lt;/p&gt;
&lt;p&gt;I have to applaud the
notion that &amp;quot;focus on the minutiae&amp;quot; misses the whole point.  A clear problem
statement is perhaps more important …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 21 Sep 2005 14:48:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-21:/2005_09_21-what_are_requirements.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category><category>requirements</category></item><item><title>Essay 16 - Three Rules of Deferred Decision-Making</title><link>https://slott56.github.io/2005_09_21-essay_16_three_rules_of_deferred_decision_making.html</link><description>&lt;p&gt;This is what I remind myself to do on a daily
basis.  It forces me to be problem-focused, not technology focused.  It also
enforces the design principle of &amp;quot;deferred decision-making&amp;quot;.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Isolate design decisions (via proper
allocation of responsibility) so that the final, final decision can be made as
late in …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 21 Sep 2005 10:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-21:/2005_09_21-essay_16_three_rules_of_deferred_decision_making.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>Chat Bots, Poker Rooms, Who's really Human?</title><link>https://slott56.github.io/2005_09_20-chat_bots_poker_rooms_whos_really_human.html</link><description>&lt;p&gt;This year's Turing award for human-like Chat Bot
announced on the BBC.  [&lt;a class="reference external" href="http://news.bbc.co.uk/2/hi/technology/4263278.stm"&gt;article&lt;/a&gt; ]&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.boingboing.net/2005/09/01/videopoker_bots_coll.html"&gt;Boing Boing&lt;/a&gt; has already noted the Wired article &lt;a class="reference external" href="http://www.wired.com/wired/archive/13.09/pokerbots.html"&gt;pokerbots&lt;/a&gt; on bot's in on-line poker
rooms.&lt;/p&gt;
&lt;p&gt;I tried posing as a bot in an
experiment and failed miserably.  I hesitated too long on dumb postings and
responded right …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Sep 2005 10:42:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-20:/2005_09_20-chat_bots_poker_rooms_whos_really_human.html</guid><category>News</category><category>news</category></item><item><title>Essay 22 - Predictability, Hysteresis and Idempotency</title><link>https://slott56.github.io/2005_09_19-essay_22_predictability_hysteresis_and_idempotency.html</link><description>&lt;p&gt;It can be said that software is 'non-linear and
time variant. ... The output is definitely not just a function of the current
input.' (&lt;a class="reference external" href="http://rlucente.bloki.com/forum/messages-index.jsp?fid=65820&amp;amp;tid=120824#forum-message1127163619932jbullock"&gt;bloki&lt;/a&gt; ).&lt;/p&gt;
&lt;p&gt;While
possibly true in one sense, that understanding has to conflate a number of
things into &amp;quot;software&amp;quot;, and makes it very difficult to take action to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 19 Sep 2005 23:50:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-19:/2005_09_19-essay_22_predictability_hysteresis_and_idempotency.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 15 - Errors and Exceptions</title><link>https://slott56.github.io/2005_09_19-essay_15_errors_and_exceptions.html</link><description>&lt;p&gt;When we embed explicit constraint checking into a
design, they can occur in any of the available tiers: persistence (database),
access, model, control or view.  Some of these options are easier to consider
than others.  The view tier, for instance, merely has responsibility for
presentation and should be able to …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 19 Sep 2005 18:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-19:/2005_09_19-essay_15_errors_and_exceptions.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 14 - Mutability Analysis</title><link>https://slott56.github.io/2005_09_18-essay_14_mutability_analysis.html</link><description>&lt;p&gt;First, there are several tiers of mutability in
requirements in general.  These tiers define typical levels of change context,
problem and forces that select a solution.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;strong&gt;Natural Laws&lt;/strong&gt;  (i.e., Gravity). As well as metaphysical
&amp;quot;laws&amp;quot; (i.e., reality). These don't change much. Sometimes we encapsulate this
information with static …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 18 Sep 2005 16:24:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-18:/2005_09_18-essay_14_mutability_analysis.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 13 - Analysis Without Running Aground</title><link>https://slott56.github.io/2005_09_17-essay_13_analysis_without_running_aground.html</link><description>&lt;p&gt;Analysis is a difficult job. It requires
capturing the business problem, including the business entities and the business
processing. It requires endless patience, good interviewing skills and excellent
writing skills. Most important, it also requires the discipline to discover the
whole problem before putting forth any
solution.&lt;/p&gt;
&lt;p&gt;This essay provides …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 17 Sep 2005 11:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-17:/2005_09_17-essay_13_analysis_without_running_aground.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 12 - Don't Talk to Strangers</title><link>https://slott56.github.io/2005_09_16-essay_12_dont_talk_to_strangers.html</link><description>&lt;p&gt;There is a Design Pattern, sometimes called &amp;quot;Don't
Talk to Strangers&amp;quot; that embodies the OO design principle of &amp;quot;Responsibility
Assignment&amp;quot;.  This pattern can also be called &amp;quot;The Opacity
Principle.&amp;quot;&lt;/p&gt;
&lt;p&gt;Sometimes I like to
describe it as &amp;quot;If you don't control it, it's none of your business what's under
the hood …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 16 Sep 2005 20:25:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-16:/2005_09_16-essay_12_dont_talk_to_strangers.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>object-oriented design</category></item><item><title>Essay 11 - Management Trump Cards</title><link>https://slott56.github.io/2005_09_15-essay_11_management_trump_cards.html</link><description>&lt;p&gt;I've seen two common varieties of management
trump cards.  These are played by managers who don't like the architecture, and
want to make changes.  These are a little bit like the spell cards in Magic:The
Gathering.  These cards can either change the state of the game (different
requirements, context …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 15 Sep 2005 15:13:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-15:/2005_09_15-essay_11_management_trump_cards.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>management</category></item><item><title>Essay 10.1 - When A Column Is Not A Column</title><link>https://slott56.github.io/2005_09_14-essay_101_when_a_column_is_not_a_column.html</link><description>&lt;p&gt;Recently, I've seen a number of data structures
that evolved from 2-dimensional data models.  They devolved into a morass of
complications because they started out violating First Normal Form rules.  Once
that rule has been broken, the door is shut on the benefits of the relational
model of data.&lt;/p&gt;
&lt;p&gt;For …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 14 Sep 2005 10:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-14:/2005_09_14-essay_101_when_a_column_is_not_a_column.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>database design</category></item><item><title>Essay 21 - Avoiding the Issue</title><link>https://slott56.github.io/2005_09_13-essay_21_avoiding_the_issue.html</link><description>&lt;p&gt;The thesis is that the first step in solving a
problem is stating it.  It's hard to argue with that, but people
do.&lt;/p&gt;
&lt;p&gt;Here are all some ways that people
have made stating a problem as difficult as possible.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Complain that there are too many steps in the
methodology.  For …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 13 Sep 2005 23:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-13:/2005_09_13-essay_21_avoiding_the_issue.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 9 - Getting Started</title><link>https://slott56.github.io/2005_09_12-essay_9_getting_started.html</link><description>&lt;p&gt;How do we get started writing requirements (or
doing architecture or even design)?&lt;/p&gt;
&lt;p&gt;The
important thing is to recognize the
&lt;em&gt;what&lt;/em&gt;
vs.
&lt;em&gt;how&lt;/em&gt;
distinction.  Following Pressman's advice, we note a whole waterfall of
&lt;em&gt;what&lt;/em&gt; 's
and
&lt;em&gt;how&lt;/em&gt; 's.
It breaks down something like the following four phases.  For information on …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 12 Sep 2005 14:51:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-12:/2005_09_12-essay_9_getting_started.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 8 - Data First, User Interface Later</title><link>https://slott56.github.io/2005_09_11-essay_8_data_first_user_interface_later.html</link><description>&lt;p&gt;Is data more important than processing?  Not
necessarily; the central issue is one of enduring impact on the problem,
solution, architecture and
implementation.&lt;/p&gt;
&lt;p&gt;Generally, the
available or desired data has the most enduring impact.  Processing,
functionality, user interface nice-to-haves and other considerations are much
softer and more malleable than the …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 11 Sep 2005 16:30:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-11:/2005_09_11-essay_8_data_first_user_interface_later.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 7 - Application Design</title><link>https://slott56.github.io/2005_09_09-essay_7_application_design.html</link><description>&lt;p&gt;Architecture is the first step in creating
software to meet the requirements.  This is followed by the design effort to
transform the high-level picture into components that can be realized in
software.  This line between assemblies of components, and the internal
construction of components is a good dividing line between …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 09 Sep 2005 15:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-09:/2005_09_09-essay_7_application_design.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 6 - Politics</title><link>https://slott56.github.io/2005_09_08-essay_6_politics.html</link><description>&lt;p&gt;Politics are the lifeblood of requirements
gathering.  For architecture, they are important, but don't as often take center
stage.&lt;/p&gt;
&lt;p&gt;Requirements are about the
actors, their goals and motivations, and their interactions with some potential
system.  People are political, and the presence or absence of certain
requirements, certain turns of phrase …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 08 Sep 2005 10:00:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-08:/2005_09_08-essay_6_politics.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 5 - Using the Requirements</title><link>https://slott56.github.io/2005_09_07-essay_5_using_the_requirements.html</link><description>&lt;p&gt;Requirements have a number of
uses.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;They document progress.  This management value
is sometimes the only value placed on requirements.  This happens when
requirements are really just high-level design and don't describe the problem
adequately.&lt;/li&gt;
&lt;li&gt;They test candidate architectures.  This is
done well when there is a back and forth …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 07 Sep 2005 10:10:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-07:/2005_09_07-essay_5_using_the_requirements.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 4 - Creeping Scope</title><link>https://slott56.github.io/2005_09_06-essay_4_creeping_scope.html</link><description>&lt;p&gt;Walker Royce notes that the early parts of a
project involve discovery; as a consequence the scope is subject to change.  He
calls the early phases inception and elaboration.  Inception identifies the need
for a project, and stakes out an initial context and problem.  Elaboration adds
details, including the constraining …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Sep 2005 10:54:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-06:/2005_09_06-essay_4_creeping_scope.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>7 kinds of complexity - 7 deadly sins?</title><link>https://slott56.github.io/2005_09_04-7_kinds_of_complexity_7_deadly_sins.html</link><description>&lt;p&gt;Here's a possible match-up between the Seven
Deadly Sins and Seven Species of Complexity.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;lust for someone we cannot have - &amp;quot;When I Grow Up&amp;quot;&lt;/li&gt;
&lt;li&gt;gluttony or over-indulgence - &amp;quot;How Hard Can It Be?&amp;quot;&lt;/li&gt;
&lt;li&gt;avarice (covetousness, greed) for things
we do not need - &amp;quot;Quality vs. Quantity of Ideas&amp;quot;&lt;/li&gt;
&lt;li&gt;sloth (laziness, idleness) wasting …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 04 Sep 2005 11:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-04:/2005_09_04-7_kinds_of_complexity_7_deadly_sins.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Why Are Things So Complicated? - 7 Deadly Reasons?</title><link>https://slott56.github.io/2005_09_03-why_are_things_so_complicated_7_deadly_reasons.html</link><description>&lt;p&gt;See RLucente.bloki.com: &lt;a class="reference external" href="http://rlucente.bloki.com/forum/messages-index.jsp?tid=121450&amp;amp;fid=63455"&gt;The Culture of Programming - Why Programmers Make Things
So Complicated&lt;/a&gt;  .&lt;/p&gt;
&lt;p&gt;RL
identifies 4 reasons.&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;It could be that its actually
complicated&lt;/li&gt;
&lt;li&gt;It could be that have not found the real
problem&lt;/li&gt;
&lt;li&gt;It could be that I have to patch because I
can't redesign and rebuild the …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 03 Sep 2005 14:27:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-03:/2005_09_03-why_are_things_so_complicated_7_deadly_reasons.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>complexity</category></item><item><title>Essay 3 - Assuming a Solution</title><link>https://slott56.github.io/2005_09_02-essay_3_assuming_a_solution.html</link><description>&lt;p&gt;A great deal of the requirements analysis
activity is identifying the entire problem.  Many software people are eager to
present a solution to some of the
problem.&lt;/p&gt;
&lt;p&gt;Perhaps I can't locate my
keys.  Having a &amp;quot;Clapper&amp;quot; on my key ring so that my keys chirp may be a
solution.  However …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Sep 2005 22:56:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-02:/2005_09_02-essay_3_assuming_a_solution.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>BLOKI not accepting new users</title><link>https://slott56.github.io/2005_09_02-bloki_not_accepting_new_users.html</link><description>&lt;p&gt;Sadly, BLOKI's business model was not successful.
That means we have to find similar power
elsewhere.&lt;/p&gt;
&lt;p&gt;Places like &lt;a class="reference external" href="http://www.sourceforge.com"&gt;SourceForge&lt;/a&gt;
have powerful wikis, threads, hosting, etc.   Perhaps that's the sensible
alternative.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Sep 2005 14:51:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-02:/2005_09_02-bloki_not_accepting_new_users.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Specifying-Bidding-Buying Software</title><link>https://slott56.github.io/2005_09_02-specifying_bidding_buying_software.html</link><description>&lt;p&gt;Check this out for a new model of software
development.  Why hire full-time developers when your business is not software
development?  Why rent contract labor?  Why not just buy the custom
software?&lt;/p&gt;
&lt;p&gt;Note that your own internal
QA processes have to be top-shelf to do this.  Internal staff can screw …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Fri, 02 Sep 2005 14:44:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-02:/2005_09_02-specifying_bidding_buying_software.html</guid><category>Management</category><category>management</category></item><item><title>Essay 2 - A Solution Is A Story</title><link>https://slott56.github.io/2005_09_01-essay_2_a_solution_is_a_story.html</link><description>&lt;p&gt;Software, and a software architecture, is a
solution to a problem.  Without a specific problem, software is a pointless
exercise:  statements in a formal language with no thesis or purpose.  An
abstract piece of software akin to the statement: &amp;quot;Time flies like an arrow.&amp;quot;
It parses (two different ways!) but …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 01 Sep 2005 22:43:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-09-01:/2005_09_01-essay_2_a_solution_is_a_story.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Essay 1 - All Software Problems are Large or Complex</title><link>https://slott56.github.io/2005_08_31-essay_1_all_software_problems_are_large_or_complex.html</link><description>&lt;p&gt;All software problems are large or complex as a
direct result of the tremendous reuse potential of software.  Consider two
alternatives:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The problem is
relatively well understood.  Solution: locate an open source or commercial
solution and use or adapt that solution.&lt;/li&gt;
&lt;li&gt;The problem is not well understood.  Solution: study enough …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 31 Aug 2005 23:38:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-08-31:/2005_08_31-essay_1_all_software_problems_are_large_or_complex.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>I love Tiger</title><link>https://slott56.github.io/2005_08_31-i_love_tiger.html</link><description>&lt;p&gt;Mac OS X 10.4 includes everything I needed to get
Xalan and DocBook to work.   And I don't have to do any more installs, except
&lt;a class="reference external" href="http://personalpages.tds.net/~edream/front.html"&gt;LEO&lt;/a&gt;  .&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 31 Aug 2005 11:11:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-08-31:/2005_08_31-i_love_tiger.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>Essay 20 - Moving the Topsoil</title><link>https://slott56.github.io/2005_08_31-essay_20_moving_the_topsoil.html</link><description>&lt;p&gt;The topsoil is in the front yard, the garden is
in the back yard.&lt;/p&gt;
&lt;p&gt;The users form up a
bucket brigade to use several pails and buckets to move the soil.  It's
backbreaking and slow, so they go to IT for a
solution.&lt;/p&gt;
&lt;p&gt;&amp;quot;We've measured the work
activity very carefully …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 31 Aug 2005 11:09:00 -0400</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-08-31:/2005_08_31-essay_20_moving_the_topsoil.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category></item><item><title>Mac OS X 10.2 Issue</title><link>https://slott56.github.io/2005_03_22-mac_os_x_102_issue.html</link><description>&lt;p&gt;Mac OS X 10.2 (which I have) has an older
JVM, which has a thread termination bug, which makes Xalan not work.  However,
it does have XLSTPROC.&lt;/p&gt;
&lt;p&gt;So, I
can't use Xalan for Docbook, without upgrading to 10.3.  And with 10.4 (a/k/a
Tiger) coming out …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 22 Mar 2005 00:35:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-03-22:/2005_03_22-mac_os_x_102_issue.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>Building Skills in Python</title><link>https://slott56.github.io/2005_03_21-building_skills_in_python.html</link><description>&lt;p&gt;I originally wrote this in Appleworks.
Easy, easy, easy.  However, it was also free from semantic
markup.&lt;/p&gt;
&lt;p&gt;It took 3 months to
convert from Appleworks to DocBook, edit, and clean up the presentation.  I also
fixed the outline and revamped the material to upgrade it to Python 2.3.&lt;/p&gt;
&lt;p&gt;Whew …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 21 Mar 2005 22:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-03-21:/2005_03_21-building_skills_in_python.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Building Skills in Object-Oriented Design</title><link>https://slott56.github.io/2005_01_26-building_skills_in_object_oriented_design.html</link><description>&lt;p&gt;I've just published my &lt;a class="reference external" href="http://www.itmaybeahack.com/homepage/books/oodesign.html"&gt;Building Skills In Object-Oriented Design&lt;/a&gt;.
Available under a Creative Commons License.&lt;/p&gt;
&lt;p&gt;Still some issues with
FO formatting.  I haven't spent time on title-page templates, or on getting
rules into tables properly.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 26 Jan 2005 02:17:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-01-26:/2005_01_26-building_skills_in_object_oriented_design.html</guid><category>Books</category><category>books</category><category>building skills</category><category>#python</category></item><item><title>Configuration</title><link>https://slott56.github.io/2005_01_02-configuration.html</link><description>&lt;p&gt;I did discover that my Mac OS Doc Book
installation doesn't work correctly because the JDK is so old.  Because of the
tight integration of Mac OS components, I'm reluctant to attempt to upgrade the
JDK.  However, the Xalan processor leaves 11 hung threads and doesn't terminate.
So, I suppose …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 02 Jan 2005 22:47:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2005-01-02:/2005_01_02-configuration.html</guid><category>Technologies</category><category>books</category><category>docbook</category><category>xml</category></item><item><title>No more Mindspring</title><link>https://slott56.github.io/2004_02_26-no_more_mindspring.html</link><description>&lt;p&gt;Years and years ago I started using
Delphi internet services.  They had a complicated dialup arrangement through
Sprintnet and Tymenet to a farm of VAX servers in the Boston area, part of
Northeast Education and Research (NEAR) net.  This was Delphi internet,
character-mode, 9600 baud.  I used Mac classic and …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Thu, 26 Feb 2004 01:19:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2004-02-26:/2004_02_26-no_more_mindspring.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>JB replies: Why Another Programming Language?</title><link>https://slott56.github.io/2004_02_16-jb_replies_why_another_programming_language.html</link><description>&lt;p&gt;The most common argument for introducing YAPL
goes like this:&lt;/p&gt;
&lt;p&gt;&amp;quot;There are way too many
programming languages out there. And they are each flawed in some way (small and
odd, or large and incomprehensible). So I, in my wisdom and will create YAPL,
which will displace all these other, inferior …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 16 Feb 2004 01:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2004-02-16:/2004_02_16-jb_replies_why_another_programming_language.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>Bloki.com</title><link>https://slott56.github.io/2004_01_20-blokicom.html</link><description>&lt;p&gt;It's not TWIKI or one of those really
easy-to-use Wiki Wiki sites.  It's not iBlog.  But, it does have a pleasant
collaborative work environment.  It only works, however, with certain releases
of Windows IE and Mozilla
browsers.&lt;/p&gt;
&lt;p&gt;Consequence: iBlog from
home office.  Bloki from the road.
:-(&lt;/p&gt;
&lt;p&gt;See &lt;a class="reference external" href="http://slott.bloki.com"&gt;slott.bloki.com …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 20 Jan 2004 11:06:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2004-01-20:/2004_01_20-blokicom.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item><item><title>Building a Web Interface</title><link>https://slott56.github.io/2004_01_06-building_a_web_interface.html</link><description>&lt;!--  --&gt;
&lt;blockquote&gt;
&lt;p&gt;I would like to build a web browser interface that has capabilities like a spreadsheet.&lt;/p&gt;
&lt;p&gt;At the same time, would like to use a tool like OpenROAD from Ingres/CA to do this.&lt;/p&gt;
&lt;p&gt;It seems that XUL is the way to go but the entire Mozilla thing is unstable.&lt;/p&gt;
&lt;p&gt;Perhaphs …&lt;/p&gt;&lt;/blockquote&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Tue, 06 Jan 2004 11:01:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2004-01-06:/2004_01_06-building_a_web_interface.html</guid><category>Architecture &amp; Design</category><category>architecture</category><category>software design</category><category>UX</category><category>UI</category><category>GUI</category><category>TUI</category></item><item><title>XML/XSLT - A Response</title><link>https://slott56.github.io/2003_12_24-xmlxslt_a_response.html</link><description>&lt;p&gt;The idea of &amp;quot;universal&amp;quot; processing via
XSLT is moderately appealing.  There's a big issue with poorly defined
semantics, which always breaks a meta-data driven approache.  The holy grail is
perfect metadata from which all application software can be derived in a trivial
way.  I'm not sure this is ever achievable …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Wed, 24 Dec 2003 20:37:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-12-24:/2003_12_24-xmlxslt_a_response.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>Not the first time...</title><link>https://slott56.github.io/2003_12_13-not_the_first_time.html</link><description>&lt;p&gt;&lt;strong&gt;From an email I got recently, lightly edited.  Responses to follow.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Problem&lt;/strong&gt;:
The data layer of application architecture must be flexible enough to adapt to
virtually any new data-driven functional requirement demanded by today's
client..right...well to support such adaptability in client deployments, the
data model must allow almost …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 13 Dec 2003 19:23:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-12-13:/2003_12_13-not_the_first_time.html</guid><category>Technologies</category><category>technologies</category><category>xml</category></item><item><title>Good-bye Old Mac</title><link>https://slott56.github.io/2003_12_01-good_bye_old_mac.html</link><description>&lt;p&gt;Mac #1 was a 1986 128K Mac, later
upgraded to 1M Mac Plus, with external everything.  Eventually a 70Mb SCSI hard
drive.  Bundled up with another just like it, it sold on eBay for shipping + a
few bucks.  I kept it running until 2001, when I finally shut it off …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 01 Dec 2003 02:08:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-12-01:/2003_12_01-good_bye_old_mac.html</guid><category>Technologies</category><category>macintosh</category><category>macosx</category></item><item><title>Content Management Alternatives</title><link>https://slott56.github.io/2003_11_24-content_management_alternatives.html</link><description>&lt;pre class="literal-block"&gt;
&amp;gt;I'm not sure what the issue is,
&amp;gt;and why &amp;quot;simple content manager&amp;quot; needs definition.

Neither was I until I read your reply.



I did  not know enough to formulate the correct question.
What I was struggling was when do you use simple
hyperlinks/html vs a content mgr vs a …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Mon, 24 Nov 2003 16:21:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-11-24:/2003_11_24-content_management_alternatives.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>Why Content Manager?</title><link>https://slott56.github.io/2003_11_23-why_content_manager.html</link><description>&lt;pre class="literal-block"&gt;
&amp;gt;&amp;gt; A while back you mentioned the following book
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; Book Title: Text, ConText, and HyperText Writing with and for the Computer edited by Edward Barrett
&amp;gt;&amp;gt; ISBN 0-262-02275-3
&amp;gt;&amp;gt;
&amp;gt;&amp;gt; I bought and then scanned through the book. I picked the following article to read semi carefully
&amp;gt;&amp;gt; Hypertext: A Way of Incorporating User Feedback …&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 23 Nov 2003 19:49:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-11-23:/2003_11_23-why_content_manager.html</guid><category>Technologies</category><category>web</category><category>cms</category></item><item><title>My open source projects</title><link>https://slott56.github.io/2003_11_16-my_open_source_projects.html</link><description>&lt;p&gt;Why Python?  Stay tuned.  Why Zope?  More
to come.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://old.zope.org/Members/slott/HTMLParseTree"&gt;HTML Parse
Tree&lt;/a&gt;   and related material - needs a proper Python install
script.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://old.zope.org/Members/slott/pyweb"&gt;PyWeb&lt;/a&gt;   - needs some
updates and a proper install
script.&lt;/p&gt;
&lt;p&gt;Additional
projects:&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.mindspring.com/~slott1/steve/python/rngdoc.html"&gt;Random
Number Test&lt;/a&gt;   Algorithms, plus an implementation of some higher-order
math functions for developing chi-squared test values.  There …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sun, 16 Nov 2003 22:10:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-11-16:/2003_11_16-my_open_source_projects.html</guid><category>FOSS</category><category>FOSS</category><category>open-source</category></item><item><title>iBlog</title><link>https://slott56.github.io/2003_11_15-iblog.html</link><description>&lt;p&gt;Must reconcile web content among all the
freebie hosting sites:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.mindspring.com/~slott1"&gt;Mindspring&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://home.nycap.rr.com/slott"&gt;Roadrunner&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://homepage.mac.com/s_lott"&gt;.Mac&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://www.geocities.com/s_lott/"&gt;Geocities&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Mindspring and Roadrunner are
duplicates, as a test of something or other.  .Mac is built by the Apple iLife
tools, and is a place to play with those.  Geocities.  Hmm.  Why do I have that
again …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">S.Lott</dc:creator><pubDate>Sat, 15 Nov 2003 14:53:00 -0500</pubDate><guid isPermaLink="false">tag:slott56.github.io,2003-11-15:/2003_11_15-iblog.html</guid><category>Technologies</category><category>technologies</category><category>web</category></item></channel></rss>